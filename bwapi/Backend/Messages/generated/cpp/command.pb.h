// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

#ifndef PROTOBUF_INCLUDED_command_2eproto
#define PROTOBUF_INCLUDED_command_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_command_2eproto 

namespace protobuf_command_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_command_2eproto
namespace bwapi {
namespace command {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class LeaveGame;
class LeaveGameDefaultTypeInternal;
extern LeaveGameDefaultTypeInternal _LeaveGame_default_instance_;
class PauseGame;
class PauseGameDefaultTypeInternal;
extern PauseGameDefaultTypeInternal _PauseGame_default_instance_;
class PingMiniMap;
class PingMiniMapDefaultTypeInternal;
extern PingMiniMapDefaultTypeInternal _PingMiniMap_default_instance_;
class Printf;
class PrintfDefaultTypeInternal;
extern PrintfDefaultTypeInternal _Printf_default_instance_;
class RestartGame;
class RestartGameDefaultTypeInternal;
extern RestartGameDefaultTypeInternal _RestartGame_default_instance_;
class ResumeGame;
class ResumeGameDefaultTypeInternal;
extern ResumeGameDefaultTypeInternal _ResumeGame_default_instance_;
class SendText;
class SendTextDefaultTypeInternal;
extern SendTextDefaultTypeInternal _SendText_default_instance_;
class SetAlliance;
class SetAllianceDefaultTypeInternal;
extern SetAllianceDefaultTypeInternal _SetAlliance_default_instance_;
class SetLocalSpeed;
class SetLocalSpeedDefaultTypeInternal;
extern SetLocalSpeedDefaultTypeInternal _SetLocalSpeed_default_instance_;
class SetScreenPosition;
class SetScreenPositionDefaultTypeInternal;
extern SetScreenPositionDefaultTypeInternal _SetScreenPosition_default_instance_;
class SetVision;
class SetVisionDefaultTypeInternal;
extern SetVisionDefaultTypeInternal _SetVision_default_instance_;
class Shape;
class ShapeDefaultTypeInternal;
extern ShapeDefaultTypeInternal _Shape_default_instance_;
class UnitCommand;
class UnitCommandDefaultTypeInternal;
extern UnitCommandDefaultTypeInternal _UnitCommand_default_instance_;
}  // namespace command
}  // namespace bwapi
namespace google {
namespace protobuf {
template<> ::bwapi::command::Command* Arena::CreateMaybeMessage<::bwapi::command::Command>(Arena*);
template<> ::bwapi::command::LeaveGame* Arena::CreateMaybeMessage<::bwapi::command::LeaveGame>(Arena*);
template<> ::bwapi::command::PauseGame* Arena::CreateMaybeMessage<::bwapi::command::PauseGame>(Arena*);
template<> ::bwapi::command::PingMiniMap* Arena::CreateMaybeMessage<::bwapi::command::PingMiniMap>(Arena*);
template<> ::bwapi::command::Printf* Arena::CreateMaybeMessage<::bwapi::command::Printf>(Arena*);
template<> ::bwapi::command::RestartGame* Arena::CreateMaybeMessage<::bwapi::command::RestartGame>(Arena*);
template<> ::bwapi::command::ResumeGame* Arena::CreateMaybeMessage<::bwapi::command::ResumeGame>(Arena*);
template<> ::bwapi::command::SendText* Arena::CreateMaybeMessage<::bwapi::command::SendText>(Arena*);
template<> ::bwapi::command::SetAlliance* Arena::CreateMaybeMessage<::bwapi::command::SetAlliance>(Arena*);
template<> ::bwapi::command::SetLocalSpeed* Arena::CreateMaybeMessage<::bwapi::command::SetLocalSpeed>(Arena*);
template<> ::bwapi::command::SetScreenPosition* Arena::CreateMaybeMessage<::bwapi::command::SetScreenPosition>(Arena*);
template<> ::bwapi::command::SetVision* Arena::CreateMaybeMessage<::bwapi::command::SetVision>(Arena*);
template<> ::bwapi::command::Shape* Arena::CreateMaybeMessage<::bwapi::command::Shape>(Arena*);
template<> ::bwapi::command::UnitCommand* Arena::CreateMaybeMessage<::bwapi::command::UnitCommand>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace bwapi {
namespace command {

enum ShapeType {
  NoShapeType = 0,
  Text = 1,
  Box = 2,
  Triangle = 3,
  Circle = 4,
  Ellipse = 5,
  Dot = 6,
  Line = 7,
  ShapeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ShapeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ShapeType_IsValid(int value);
const ShapeType ShapeType_MIN = NoShapeType;
const ShapeType ShapeType_MAX = Line;
const int ShapeType_ARRAYSIZE = ShapeType_MAX + 1;

enum CoordinateType {
  NoCoordinateType = 0,
  Screen = 1,
  Map = 2,
  Mouse = 3,
  CoordinateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoordinateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoordinateType_IsValid(int value);
const CoordinateType CoordinateType_MIN = NoCoordinateType;
const CoordinateType CoordinateType_MAX = Mouse;
const int CoordinateType_ARRAYSIZE = CoordinateType_MAX + 1;

// ===================================================================

class SendText : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.SendText) */ {
 public:
  SendText();
  virtual ~SendText();

  SendText(const SendText& from);

  inline SendText& operator=(const SendText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendText(SendText&& from) noexcept
    : SendText() {
    *this = ::std::move(from);
  }

  inline SendText& operator=(SendText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const SendText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendText* internal_default_instance() {
    return reinterpret_cast<const SendText*>(
               &_SendText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SendText* other);
  friend void swap(SendText& a, SendText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendText* New() const final {
    return CreateMaybeMessage<SendText>(NULL);
  }

  SendText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendText>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const SendText& from);
  void MergeFrom(const SendText& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // bool toAllies = 1;
  void clear_toallies();
  static const int kToAlliesFieldNumber = 1;
  bool toallies() const;
  void set_toallies(bool value);

  // @@protoc_insertion_point(class_scope:bwapi.command.SendText)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  bool toallies_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetScreenPosition : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.SetScreenPosition) */ {
 public:
  SetScreenPosition();
  virtual ~SetScreenPosition();

  SetScreenPosition(const SetScreenPosition& from);

  inline SetScreenPosition& operator=(const SetScreenPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetScreenPosition(SetScreenPosition&& from) noexcept
    : SetScreenPosition() {
    *this = ::std::move(from);
  }

  inline SetScreenPosition& operator=(SetScreenPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const SetScreenPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetScreenPosition* internal_default_instance() {
    return reinterpret_cast<const SetScreenPosition*>(
               &_SetScreenPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SetScreenPosition* other);
  friend void swap(SetScreenPosition& a, SetScreenPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetScreenPosition* New() const final {
    return CreateMaybeMessage<SetScreenPosition>(NULL);
  }

  SetScreenPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetScreenPosition>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const SetScreenPosition& from);
  void MergeFrom(const SetScreenPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetScreenPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.command.SetScreenPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PingMiniMap : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.PingMiniMap) */ {
 public:
  PingMiniMap();
  virtual ~PingMiniMap();

  PingMiniMap(const PingMiniMap& from);

  inline PingMiniMap& operator=(const PingMiniMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PingMiniMap(PingMiniMap&& from) noexcept
    : PingMiniMap() {
    *this = ::std::move(from);
  }

  inline PingMiniMap& operator=(PingMiniMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const PingMiniMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingMiniMap* internal_default_instance() {
    return reinterpret_cast<const PingMiniMap*>(
               &_PingMiniMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PingMiniMap* other);
  friend void swap(PingMiniMap& a, PingMiniMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PingMiniMap* New() const final {
    return CreateMaybeMessage<PingMiniMap>(NULL);
  }

  PingMiniMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PingMiniMap>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PingMiniMap& from);
  void MergeFrom(const PingMiniMap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PingMiniMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.command.PingMiniMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Printf : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.Printf) */ {
 public:
  Printf();
  virtual ~Printf();

  Printf(const Printf& from);

  inline Printf& operator=(const Printf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Printf(Printf&& from) noexcept
    : Printf() {
    *this = ::std::move(from);
  }

  inline Printf& operator=(Printf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Printf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Printf* internal_default_instance() {
    return reinterpret_cast<const Printf*>(
               &_Printf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Printf* other);
  friend void swap(Printf& a, Printf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Printf* New() const final {
    return CreateMaybeMessage<Printf>(NULL);
  }

  Printf* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Printf>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Printf& from);
  void MergeFrom(const Printf& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Printf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:bwapi.command.Printf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Shape : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.Shape) */ {
 public:
  Shape();
  virtual ~Shape();

  Shape(const Shape& from);

  inline Shape& operator=(const Shape& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Shape(Shape&& from) noexcept
    : Shape() {
    *this = ::std::move(from);
  }

  inline Shape& operator=(Shape&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Shape& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Shape* internal_default_instance() {
    return reinterpret_cast<const Shape*>(
               &_Shape_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Shape* other);
  friend void swap(Shape& a, Shape& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Shape* New() const final {
    return CreateMaybeMessage<Shape>(NULL);
  }

  Shape* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Shape>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Shape& from);
  void MergeFrom(const Shape& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Shape* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 11;
  void clear_text();
  static const int kTextFieldNumber = 11;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .bwapi.command.ShapeType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::bwapi::command::ShapeType type() const;
  void set_type(::bwapi::command::ShapeType value);

  // .bwapi.command.CoordinateType ctype = 2;
  void clear_ctype();
  static const int kCtypeFieldNumber = 2;
  ::bwapi::command::CoordinateType ctype() const;
  void set_ctype(::bwapi::command::CoordinateType value);

  // int32 x1 = 3;
  void clear_x1();
  static const int kX1FieldNumber = 3;
  ::google::protobuf::int32 x1() const;
  void set_x1(::google::protobuf::int32 value);

  // int32 y1 = 4;
  void clear_y1();
  static const int kY1FieldNumber = 4;
  ::google::protobuf::int32 y1() const;
  void set_y1(::google::protobuf::int32 value);

  // int32 x2 = 5;
  void clear_x2();
  static const int kX2FieldNumber = 5;
  ::google::protobuf::int32 x2() const;
  void set_x2(::google::protobuf::int32 value);

  // int32 y2 = 6;
  void clear_y2();
  static const int kY2FieldNumber = 6;
  ::google::protobuf::int32 y2() const;
  void set_y2(::google::protobuf::int32 value);

  // int32 extra1 = 7;
  void clear_extra1();
  static const int kExtra1FieldNumber = 7;
  ::google::protobuf::int32 extra1() const;
  void set_extra1(::google::protobuf::int32 value);

  // int32 extra2 = 8;
  void clear_extra2();
  static const int kExtra2FieldNumber = 8;
  ::google::protobuf::int32 extra2() const;
  void set_extra2(::google::protobuf::int32 value);

  // int32 color = 9;
  void clear_color();
  static const int kColorFieldNumber = 9;
  ::google::protobuf::int32 color() const;
  void set_color(::google::protobuf::int32 value);

  // bool isSolid = 10;
  void clear_issolid();
  static const int kIsSolidFieldNumber = 10;
  bool issolid() const;
  void set_issolid(bool value);

  // @@protoc_insertion_point(class_scope:bwapi.command.Shape)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  int type_;
  int ctype_;
  ::google::protobuf::int32 x1_;
  ::google::protobuf::int32 y1_;
  ::google::protobuf::int32 x2_;
  ::google::protobuf::int32 y2_;
  ::google::protobuf::int32 extra1_;
  ::google::protobuf::int32 extra2_;
  ::google::protobuf::int32 color_;
  bool issolid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PauseGame : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.PauseGame) */ {
 public:
  PauseGame();
  virtual ~PauseGame();

  PauseGame(const PauseGame& from);

  inline PauseGame& operator=(const PauseGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PauseGame(PauseGame&& from) noexcept
    : PauseGame() {
    *this = ::std::move(from);
  }

  inline PauseGame& operator=(PauseGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const PauseGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PauseGame* internal_default_instance() {
    return reinterpret_cast<const PauseGame*>(
               &_PauseGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PauseGame* other);
  friend void swap(PauseGame& a, PauseGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PauseGame* New() const final {
    return CreateMaybeMessage<PauseGame>(NULL);
  }

  PauseGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PauseGame>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PauseGame& from);
  void MergeFrom(const PauseGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PauseGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bwapi.command.PauseGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResumeGame : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.ResumeGame) */ {
 public:
  ResumeGame();
  virtual ~ResumeGame();

  ResumeGame(const ResumeGame& from);

  inline ResumeGame& operator=(const ResumeGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResumeGame(ResumeGame&& from) noexcept
    : ResumeGame() {
    *this = ::std::move(from);
  }

  inline ResumeGame& operator=(ResumeGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ResumeGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResumeGame* internal_default_instance() {
    return reinterpret_cast<const ResumeGame*>(
               &_ResumeGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ResumeGame* other);
  friend void swap(ResumeGame& a, ResumeGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResumeGame* New() const final {
    return CreateMaybeMessage<ResumeGame>(NULL);
  }

  ResumeGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResumeGame>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const ResumeGame& from);
  void MergeFrom(const ResumeGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResumeGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bwapi.command.ResumeGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveGame : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.LeaveGame) */ {
 public:
  LeaveGame();
  virtual ~LeaveGame();

  LeaveGame(const LeaveGame& from);

  inline LeaveGame& operator=(const LeaveGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveGame(LeaveGame&& from) noexcept
    : LeaveGame() {
    *this = ::std::move(from);
  }

  inline LeaveGame& operator=(LeaveGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const LeaveGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveGame* internal_default_instance() {
    return reinterpret_cast<const LeaveGame*>(
               &_LeaveGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(LeaveGame* other);
  friend void swap(LeaveGame& a, LeaveGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveGame* New() const final {
    return CreateMaybeMessage<LeaveGame>(NULL);
  }

  LeaveGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LeaveGame>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const LeaveGame& from);
  void MergeFrom(const LeaveGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bwapi.command.LeaveGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestartGame : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.RestartGame) */ {
 public:
  RestartGame();
  virtual ~RestartGame();

  RestartGame(const RestartGame& from);

  inline RestartGame& operator=(const RestartGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RestartGame(RestartGame&& from) noexcept
    : RestartGame() {
    *this = ::std::move(from);
  }

  inline RestartGame& operator=(RestartGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const RestartGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestartGame* internal_default_instance() {
    return reinterpret_cast<const RestartGame*>(
               &_RestartGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RestartGame* other);
  friend void swap(RestartGame& a, RestartGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RestartGame* New() const final {
    return CreateMaybeMessage<RestartGame>(NULL);
  }

  RestartGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RestartGame>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const RestartGame& from);
  void MergeFrom(const RestartGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RestartGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bwapi.command.RestartGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetLocalSpeed : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.SetLocalSpeed) */ {
 public:
  SetLocalSpeed();
  virtual ~SetLocalSpeed();

  SetLocalSpeed(const SetLocalSpeed& from);

  inline SetLocalSpeed& operator=(const SetLocalSpeed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetLocalSpeed(SetLocalSpeed&& from) noexcept
    : SetLocalSpeed() {
    *this = ::std::move(from);
  }

  inline SetLocalSpeed& operator=(SetLocalSpeed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const SetLocalSpeed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetLocalSpeed* internal_default_instance() {
    return reinterpret_cast<const SetLocalSpeed*>(
               &_SetLocalSpeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(SetLocalSpeed* other);
  friend void swap(SetLocalSpeed& a, SetLocalSpeed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetLocalSpeed* New() const final {
    return CreateMaybeMessage<SetLocalSpeed>(NULL);
  }

  SetLocalSpeed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetLocalSpeed>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const SetLocalSpeed& from);
  void MergeFrom(const SetLocalSpeed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetLocalSpeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 speed = 1;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.command.SetLocalSpeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 speed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetAlliance : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.SetAlliance) */ {
 public:
  SetAlliance();
  virtual ~SetAlliance();

  SetAlliance(const SetAlliance& from);

  inline SetAlliance& operator=(const SetAlliance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetAlliance(SetAlliance&& from) noexcept
    : SetAlliance() {
    *this = ::std::move(from);
  }

  inline SetAlliance& operator=(SetAlliance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const SetAlliance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetAlliance* internal_default_instance() {
    return reinterpret_cast<const SetAlliance*>(
               &_SetAlliance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(SetAlliance* other);
  friend void swap(SetAlliance& a, SetAlliance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetAlliance* New() const final {
    return CreateMaybeMessage<SetAlliance>(NULL);
  }

  SetAlliance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetAlliance>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const SetAlliance& from);
  void MergeFrom(const SetAlliance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetAlliance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // int32 settings = 2;
  void clear_settings();
  static const int kSettingsFieldNumber = 2;
  ::google::protobuf::int32 settings() const;
  void set_settings(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.command.SetAlliance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetVision : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.SetVision) */ {
 public:
  SetVision();
  virtual ~SetVision();

  SetVision(const SetVision& from);

  inline SetVision& operator=(const SetVision& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetVision(SetVision&& from) noexcept
    : SetVision() {
    *this = ::std::move(from);
  }

  inline SetVision& operator=(SetVision&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const SetVision& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetVision* internal_default_instance() {
    return reinterpret_cast<const SetVision*>(
               &_SetVision_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(SetVision* other);
  friend void swap(SetVision& a, SetVision& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetVision* New() const final {
    return CreateMaybeMessage<SetVision>(NULL);
  }

  SetVision* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetVision>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const SetVision& from);
  void MergeFrom(const SetVision& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetVision* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // int32 settings = 2;
  void clear_settings();
  static const int kSettingsFieldNumber = 2;
  ::google::protobuf::int32 settings() const;
  void set_settings(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.command.SetVision)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnitCommand : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.UnitCommand) */ {
 public:
  UnitCommand();
  virtual ~UnitCommand();

  UnitCommand(const UnitCommand& from);

  inline UnitCommand& operator=(const UnitCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnitCommand(UnitCommand&& from) noexcept
    : UnitCommand() {
    *this = ::std::move(from);
  }

  inline UnitCommand& operator=(UnitCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const UnitCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnitCommand* internal_default_instance() {
    return reinterpret_cast<const UnitCommand*>(
               &_UnitCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(UnitCommand* other);
  friend void swap(UnitCommand& a, UnitCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnitCommand* New() const final {
    return CreateMaybeMessage<UnitCommand>(NULL);
  }

  UnitCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnitCommand>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const UnitCommand& from);
  void MergeFrom(const UnitCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnitCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 unitID = 1;
  int unitid_size() const;
  void clear_unitid();
  static const int kUnitIDFieldNumber = 1;
  ::google::protobuf::int32 unitid(int index) const;
  void set_unitid(int index, ::google::protobuf::int32 value);
  void add_unitid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitid();

  // uint32 unitCommandType = 2;
  void clear_unitcommandtype();
  static const int kUnitCommandTypeFieldNumber = 2;
  ::google::protobuf::uint32 unitcommandtype() const;
  void set_unitcommandtype(::google::protobuf::uint32 value);

  // int32 targetID = 3;
  void clear_targetid();
  static const int kTargetIDFieldNumber = 3;
  ::google::protobuf::int32 targetid() const;
  void set_targetid(::google::protobuf::int32 value);

  // int32 x = 4;
  void clear_x();
  static const int kXFieldNumber = 4;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 5;
  void clear_y();
  static const int kYFieldNumber = 5;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 extra = 6;
  void clear_extra();
  static const int kExtraFieldNumber = 6;
  ::google::protobuf::int32 extra() const;
  void set_extra(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.command.UnitCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitid_;
  mutable int _unitid_cached_byte_size_;
  ::google::protobuf::uint32 unitcommandtype_;
  ::google::protobuf::int32 targetid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 extra_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.command.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Command& default_instance();

  enum CmdCase {
    kSendText = 1,
    kSetScreenPosition = 2,
    kPingMiniMap = 3,
    kPrintf = 4,
    kShape = 5,
    kPauseGame = 6,
    kResumeGame = 7,
    kLeaveGame = 8,
    kRestartGame = 9,
    kSetLocalSpeed = 10,
    kSetAlliance = 11,
    kSetVision = 12,
    kUnitCommand = 14,
    CMD_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(NULL);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bwapi.command.SendText sendText = 1;
  bool has_sendtext() const;
  void clear_sendtext();
  static const int kSendTextFieldNumber = 1;
  private:
  const ::bwapi::command::SendText& _internal_sendtext() const;
  public:
  const ::bwapi::command::SendText& sendtext() const;
  ::bwapi::command::SendText* release_sendtext();
  ::bwapi::command::SendText* mutable_sendtext();
  void set_allocated_sendtext(::bwapi::command::SendText* sendtext);

  // .bwapi.command.SetScreenPosition setScreenPosition = 2;
  bool has_setscreenposition() const;
  void clear_setscreenposition();
  static const int kSetScreenPositionFieldNumber = 2;
  private:
  const ::bwapi::command::SetScreenPosition& _internal_setscreenposition() const;
  public:
  const ::bwapi::command::SetScreenPosition& setscreenposition() const;
  ::bwapi::command::SetScreenPosition* release_setscreenposition();
  ::bwapi::command::SetScreenPosition* mutable_setscreenposition();
  void set_allocated_setscreenposition(::bwapi::command::SetScreenPosition* setscreenposition);

  // .bwapi.command.PingMiniMap pingMiniMap = 3;
  bool has_pingminimap() const;
  void clear_pingminimap();
  static const int kPingMiniMapFieldNumber = 3;
  private:
  const ::bwapi::command::PingMiniMap& _internal_pingminimap() const;
  public:
  const ::bwapi::command::PingMiniMap& pingminimap() const;
  ::bwapi::command::PingMiniMap* release_pingminimap();
  ::bwapi::command::PingMiniMap* mutable_pingminimap();
  void set_allocated_pingminimap(::bwapi::command::PingMiniMap* pingminimap);

  // .bwapi.command.Printf printf = 4;
  bool has_printf() const;
  void clear_printf();
  static const int kPrintfFieldNumber = 4;
  private:
  const ::bwapi::command::Printf& _internal_printf() const;
  public:
  const ::bwapi::command::Printf& printf() const;
  ::bwapi::command::Printf* release_printf();
  ::bwapi::command::Printf* mutable_printf();
  void set_allocated_printf(::bwapi::command::Printf* printf);

  // .bwapi.command.Shape shape = 5;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 5;
  private:
  const ::bwapi::command::Shape& _internal_shape() const;
  public:
  const ::bwapi::command::Shape& shape() const;
  ::bwapi::command::Shape* release_shape();
  ::bwapi::command::Shape* mutable_shape();
  void set_allocated_shape(::bwapi::command::Shape* shape);

  // .bwapi.command.PauseGame pauseGame = 6;
  bool has_pausegame() const;
  void clear_pausegame();
  static const int kPauseGameFieldNumber = 6;
  private:
  const ::bwapi::command::PauseGame& _internal_pausegame() const;
  public:
  const ::bwapi::command::PauseGame& pausegame() const;
  ::bwapi::command::PauseGame* release_pausegame();
  ::bwapi::command::PauseGame* mutable_pausegame();
  void set_allocated_pausegame(::bwapi::command::PauseGame* pausegame);

  // .bwapi.command.ResumeGame resumeGame = 7;
  bool has_resumegame() const;
  void clear_resumegame();
  static const int kResumeGameFieldNumber = 7;
  private:
  const ::bwapi::command::ResumeGame& _internal_resumegame() const;
  public:
  const ::bwapi::command::ResumeGame& resumegame() const;
  ::bwapi::command::ResumeGame* release_resumegame();
  ::bwapi::command::ResumeGame* mutable_resumegame();
  void set_allocated_resumegame(::bwapi::command::ResumeGame* resumegame);

  // .bwapi.command.LeaveGame leaveGame = 8;
  bool has_leavegame() const;
  void clear_leavegame();
  static const int kLeaveGameFieldNumber = 8;
  private:
  const ::bwapi::command::LeaveGame& _internal_leavegame() const;
  public:
  const ::bwapi::command::LeaveGame& leavegame() const;
  ::bwapi::command::LeaveGame* release_leavegame();
  ::bwapi::command::LeaveGame* mutable_leavegame();
  void set_allocated_leavegame(::bwapi::command::LeaveGame* leavegame);

  // .bwapi.command.RestartGame restartGame = 9;
  bool has_restartgame() const;
  void clear_restartgame();
  static const int kRestartGameFieldNumber = 9;
  private:
  const ::bwapi::command::RestartGame& _internal_restartgame() const;
  public:
  const ::bwapi::command::RestartGame& restartgame() const;
  ::bwapi::command::RestartGame* release_restartgame();
  ::bwapi::command::RestartGame* mutable_restartgame();
  void set_allocated_restartgame(::bwapi::command::RestartGame* restartgame);

  // .bwapi.command.SetLocalSpeed setLocalSpeed = 10;
  bool has_setlocalspeed() const;
  void clear_setlocalspeed();
  static const int kSetLocalSpeedFieldNumber = 10;
  private:
  const ::bwapi::command::SetLocalSpeed& _internal_setlocalspeed() const;
  public:
  const ::bwapi::command::SetLocalSpeed& setlocalspeed() const;
  ::bwapi::command::SetLocalSpeed* release_setlocalspeed();
  ::bwapi::command::SetLocalSpeed* mutable_setlocalspeed();
  void set_allocated_setlocalspeed(::bwapi::command::SetLocalSpeed* setlocalspeed);

  // .bwapi.command.SetAlliance setAlliance = 11;
  bool has_setalliance() const;
  void clear_setalliance();
  static const int kSetAllianceFieldNumber = 11;
  private:
  const ::bwapi::command::SetAlliance& _internal_setalliance() const;
  public:
  const ::bwapi::command::SetAlliance& setalliance() const;
  ::bwapi::command::SetAlliance* release_setalliance();
  ::bwapi::command::SetAlliance* mutable_setalliance();
  void set_allocated_setalliance(::bwapi::command::SetAlliance* setalliance);

  // .bwapi.command.SetVision setVision = 12;
  bool has_setvision() const;
  void clear_setvision();
  static const int kSetVisionFieldNumber = 12;
  private:
  const ::bwapi::command::SetVision& _internal_setvision() const;
  public:
  const ::bwapi::command::SetVision& setvision() const;
  ::bwapi::command::SetVision* release_setvision();
  ::bwapi::command::SetVision* mutable_setvision();
  void set_allocated_setvision(::bwapi::command::SetVision* setvision);

  // .bwapi.command.UnitCommand unitCommand = 14;
  bool has_unitcommand() const;
  void clear_unitcommand();
  static const int kUnitCommandFieldNumber = 14;
  private:
  const ::bwapi::command::UnitCommand& _internal_unitcommand() const;
  public:
  const ::bwapi::command::UnitCommand& unitcommand() const;
  ::bwapi::command::UnitCommand* release_unitcommand();
  ::bwapi::command::UnitCommand* mutable_unitcommand();
  void set_allocated_unitcommand(::bwapi::command::UnitCommand* unitcommand);

  void clear_cmd();
  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:bwapi.command.Command)
 private:
  void set_has_sendtext();
  void set_has_setscreenposition();
  void set_has_pingminimap();
  void set_has_printf();
  void set_has_shape();
  void set_has_pausegame();
  void set_has_resumegame();
  void set_has_leavegame();
  void set_has_restartgame();
  void set_has_setlocalspeed();
  void set_has_setalliance();
  void set_has_setvision();
  void set_has_unitcommand();

  inline bool has_cmd() const;
  inline void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  union CmdUnion {
    CmdUnion() {}
    ::bwapi::command::SendText* sendtext_;
    ::bwapi::command::SetScreenPosition* setscreenposition_;
    ::bwapi::command::PingMiniMap* pingminimap_;
    ::bwapi::command::Printf* printf_;
    ::bwapi::command::Shape* shape_;
    ::bwapi::command::PauseGame* pausegame_;
    ::bwapi::command::ResumeGame* resumegame_;
    ::bwapi::command::LeaveGame* leavegame_;
    ::bwapi::command::RestartGame* restartgame_;
    ::bwapi::command::SetLocalSpeed* setlocalspeed_;
    ::bwapi::command::SetAlliance* setalliance_;
    ::bwapi::command::SetVision* setvision_;
    ::bwapi::command::UnitCommand* unitcommand_;
  } cmd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_command_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SendText

// bool toAllies = 1;
inline void SendText::clear_toallies() {
  toallies_ = false;
}
inline bool SendText::toallies() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SendText.toAllies)
  return toallies_;
}
inline void SendText::set_toallies(bool value) {
  
  toallies_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SendText.toAllies)
}

// string text = 2;
inline void SendText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendText::text() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SendText.text)
  return text_.GetNoArena();
}
inline void SendText::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.command.SendText.text)
}
#if LANG_CXX11
inline void SendText::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.command.SendText.text)
}
#endif
inline void SendText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.command.SendText.text)
}
inline void SendText::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.command.SendText.text)
}
inline ::std::string* SendText::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.command.SendText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendText::release_text() {
  // @@protoc_insertion_point(field_release:bwapi.command.SendText.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:bwapi.command.SendText.text)
}

// -------------------------------------------------------------------

// SetScreenPosition

// int32 x = 1;
inline void SetScreenPosition::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 SetScreenPosition::x() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SetScreenPosition.x)
  return x_;
}
inline void SetScreenPosition::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SetScreenPosition.x)
}

// int32 y = 2;
inline void SetScreenPosition::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 SetScreenPosition::y() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SetScreenPosition.y)
  return y_;
}
inline void SetScreenPosition::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SetScreenPosition.y)
}

// -------------------------------------------------------------------

// PingMiniMap

// int32 x = 1;
inline void PingMiniMap::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 PingMiniMap::x() const {
  // @@protoc_insertion_point(field_get:bwapi.command.PingMiniMap.x)
  return x_;
}
inline void PingMiniMap::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.PingMiniMap.x)
}

// int32 y = 2;
inline void PingMiniMap::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 PingMiniMap::y() const {
  // @@protoc_insertion_point(field_get:bwapi.command.PingMiniMap.y)
  return y_;
}
inline void PingMiniMap::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.PingMiniMap.y)
}

// -------------------------------------------------------------------

// Printf

// string text = 1;
inline void Printf::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Printf::text() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Printf.text)
  return text_.GetNoArena();
}
inline void Printf::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.command.Printf.text)
}
#if LANG_CXX11
inline void Printf::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.command.Printf.text)
}
#endif
inline void Printf::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.command.Printf.text)
}
inline void Printf::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.command.Printf.text)
}
inline ::std::string* Printf::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.command.Printf.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Printf::release_text() {
  // @@protoc_insertion_point(field_release:bwapi.command.Printf.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Printf::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:bwapi.command.Printf.text)
}

// -------------------------------------------------------------------

// Shape

// .bwapi.command.ShapeType type = 1;
inline void Shape::clear_type() {
  type_ = 0;
}
inline ::bwapi::command::ShapeType Shape::type() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.type)
  return static_cast< ::bwapi::command::ShapeType >(type_);
}
inline void Shape::set_type(::bwapi::command::ShapeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.type)
}

// .bwapi.command.CoordinateType ctype = 2;
inline void Shape::clear_ctype() {
  ctype_ = 0;
}
inline ::bwapi::command::CoordinateType Shape::ctype() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.ctype)
  return static_cast< ::bwapi::command::CoordinateType >(ctype_);
}
inline void Shape::set_ctype(::bwapi::command::CoordinateType value) {
  
  ctype_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.ctype)
}

// int32 x1 = 3;
inline void Shape::clear_x1() {
  x1_ = 0;
}
inline ::google::protobuf::int32 Shape::x1() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.x1)
  return x1_;
}
inline void Shape::set_x1(::google::protobuf::int32 value) {
  
  x1_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.x1)
}

// int32 y1 = 4;
inline void Shape::clear_y1() {
  y1_ = 0;
}
inline ::google::protobuf::int32 Shape::y1() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.y1)
  return y1_;
}
inline void Shape::set_y1(::google::protobuf::int32 value) {
  
  y1_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.y1)
}

// int32 x2 = 5;
inline void Shape::clear_x2() {
  x2_ = 0;
}
inline ::google::protobuf::int32 Shape::x2() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.x2)
  return x2_;
}
inline void Shape::set_x2(::google::protobuf::int32 value) {
  
  x2_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.x2)
}

// int32 y2 = 6;
inline void Shape::clear_y2() {
  y2_ = 0;
}
inline ::google::protobuf::int32 Shape::y2() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.y2)
  return y2_;
}
inline void Shape::set_y2(::google::protobuf::int32 value) {
  
  y2_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.y2)
}

// int32 extra1 = 7;
inline void Shape::clear_extra1() {
  extra1_ = 0;
}
inline ::google::protobuf::int32 Shape::extra1() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.extra1)
  return extra1_;
}
inline void Shape::set_extra1(::google::protobuf::int32 value) {
  
  extra1_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.extra1)
}

// int32 extra2 = 8;
inline void Shape::clear_extra2() {
  extra2_ = 0;
}
inline ::google::protobuf::int32 Shape::extra2() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.extra2)
  return extra2_;
}
inline void Shape::set_extra2(::google::protobuf::int32 value) {
  
  extra2_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.extra2)
}

// int32 color = 9;
inline void Shape::clear_color() {
  color_ = 0;
}
inline ::google::protobuf::int32 Shape::color() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.color)
  return color_;
}
inline void Shape::set_color(::google::protobuf::int32 value) {
  
  color_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.color)
}

// bool isSolid = 10;
inline void Shape::clear_issolid() {
  issolid_ = false;
}
inline bool Shape::issolid() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.isSolid)
  return issolid_;
}
inline void Shape::set_issolid(bool value) {
  
  issolid_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.isSolid)
}

// string text = 11;
inline void Shape::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shape::text() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Shape.text)
  return text_.GetNoArena();
}
inline void Shape::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.command.Shape.text)
}
#if LANG_CXX11
inline void Shape::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.command.Shape.text)
}
#endif
inline void Shape::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.command.Shape.text)
}
inline void Shape::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.command.Shape.text)
}
inline ::std::string* Shape::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.command.Shape.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shape::release_text() {
  // @@protoc_insertion_point(field_release:bwapi.command.Shape.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shape::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:bwapi.command.Shape.text)
}

// -------------------------------------------------------------------

// PauseGame

// -------------------------------------------------------------------

// ResumeGame

// -------------------------------------------------------------------

// LeaveGame

// -------------------------------------------------------------------

// RestartGame

// -------------------------------------------------------------------

// SetLocalSpeed

// int32 speed = 1;
inline void SetLocalSpeed::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 SetLocalSpeed::speed() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SetLocalSpeed.speed)
  return speed_;
}
inline void SetLocalSpeed::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SetLocalSpeed.speed)
}

// -------------------------------------------------------------------

// SetAlliance

// int32 playerID = 1;
inline void SetAlliance::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 SetAlliance::playerid() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SetAlliance.playerID)
  return playerid_;
}
inline void SetAlliance::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SetAlliance.playerID)
}

// int32 settings = 2;
inline void SetAlliance::clear_settings() {
  settings_ = 0;
}
inline ::google::protobuf::int32 SetAlliance::settings() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SetAlliance.settings)
  return settings_;
}
inline void SetAlliance::set_settings(::google::protobuf::int32 value) {
  
  settings_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SetAlliance.settings)
}

// -------------------------------------------------------------------

// SetVision

// int32 playerID = 1;
inline void SetVision::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 SetVision::playerid() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SetVision.playerID)
  return playerid_;
}
inline void SetVision::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SetVision.playerID)
}

// int32 settings = 2;
inline void SetVision::clear_settings() {
  settings_ = 0;
}
inline ::google::protobuf::int32 SetVision::settings() const {
  // @@protoc_insertion_point(field_get:bwapi.command.SetVision.settings)
  return settings_;
}
inline void SetVision::set_settings(::google::protobuf::int32 value) {
  
  settings_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.SetVision.settings)
}

// -------------------------------------------------------------------

// UnitCommand

// repeated int32 unitID = 1;
inline int UnitCommand::unitid_size() const {
  return unitid_.size();
}
inline void UnitCommand::clear_unitid() {
  unitid_.Clear();
}
inline ::google::protobuf::int32 UnitCommand::unitid(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.command.UnitCommand.unitID)
  return unitid_.Get(index);
}
inline void UnitCommand::set_unitid(int index, ::google::protobuf::int32 value) {
  unitid_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.command.UnitCommand.unitID)
}
inline void UnitCommand::add_unitid(::google::protobuf::int32 value) {
  unitid_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.command.UnitCommand.unitID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UnitCommand::unitid() const {
  // @@protoc_insertion_point(field_list:bwapi.command.UnitCommand.unitID)
  return unitid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UnitCommand::mutable_unitid() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.command.UnitCommand.unitID)
  return &unitid_;
}

// uint32 unitCommandType = 2;
inline void UnitCommand::clear_unitcommandtype() {
  unitcommandtype_ = 0u;
}
inline ::google::protobuf::uint32 UnitCommand::unitcommandtype() const {
  // @@protoc_insertion_point(field_get:bwapi.command.UnitCommand.unitCommandType)
  return unitcommandtype_;
}
inline void UnitCommand::set_unitcommandtype(::google::protobuf::uint32 value) {
  
  unitcommandtype_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.UnitCommand.unitCommandType)
}

// int32 targetID = 3;
inline void UnitCommand::clear_targetid() {
  targetid_ = 0;
}
inline ::google::protobuf::int32 UnitCommand::targetid() const {
  // @@protoc_insertion_point(field_get:bwapi.command.UnitCommand.targetID)
  return targetid_;
}
inline void UnitCommand::set_targetid(::google::protobuf::int32 value) {
  
  targetid_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.UnitCommand.targetID)
}

// int32 x = 4;
inline void UnitCommand::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 UnitCommand::x() const {
  // @@protoc_insertion_point(field_get:bwapi.command.UnitCommand.x)
  return x_;
}
inline void UnitCommand::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.UnitCommand.x)
}

// int32 y = 5;
inline void UnitCommand::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 UnitCommand::y() const {
  // @@protoc_insertion_point(field_get:bwapi.command.UnitCommand.y)
  return y_;
}
inline void UnitCommand::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.UnitCommand.y)
}

// int32 extra = 6;
inline void UnitCommand::clear_extra() {
  extra_ = 0;
}
inline ::google::protobuf::int32 UnitCommand::extra() const {
  // @@protoc_insertion_point(field_get:bwapi.command.UnitCommand.extra)
  return extra_;
}
inline void UnitCommand::set_extra(::google::protobuf::int32 value) {
  
  extra_ = value;
  // @@protoc_insertion_point(field_set:bwapi.command.UnitCommand.extra)
}

// -------------------------------------------------------------------

// Command

// .bwapi.command.SendText sendText = 1;
inline bool Command::has_sendtext() const {
  return cmd_case() == kSendText;
}
inline void Command::set_has_sendtext() {
  _oneof_case_[0] = kSendText;
}
inline void Command::clear_sendtext() {
  if (has_sendtext()) {
    delete cmd_.sendtext_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::SendText& Command::_internal_sendtext() const {
  return *cmd_.sendtext_;
}
inline ::bwapi::command::SendText* Command::release_sendtext() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.sendText)
  if (has_sendtext()) {
    clear_has_cmd();
      ::bwapi::command::SendText* temp = cmd_.sendtext_;
    cmd_.sendtext_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::SendText& Command::sendtext() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.sendText)
  return has_sendtext()
      ? *cmd_.sendtext_
      : *reinterpret_cast< ::bwapi::command::SendText*>(&::bwapi::command::_SendText_default_instance_);
}
inline ::bwapi::command::SendText* Command::mutable_sendtext() {
  if (!has_sendtext()) {
    clear_cmd();
    set_has_sendtext();
    cmd_.sendtext_ = CreateMaybeMessage< ::bwapi::command::SendText >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.sendText)
  return cmd_.sendtext_;
}

// .bwapi.command.SetScreenPosition setScreenPosition = 2;
inline bool Command::has_setscreenposition() const {
  return cmd_case() == kSetScreenPosition;
}
inline void Command::set_has_setscreenposition() {
  _oneof_case_[0] = kSetScreenPosition;
}
inline void Command::clear_setscreenposition() {
  if (has_setscreenposition()) {
    delete cmd_.setscreenposition_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::SetScreenPosition& Command::_internal_setscreenposition() const {
  return *cmd_.setscreenposition_;
}
inline ::bwapi::command::SetScreenPosition* Command::release_setscreenposition() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.setScreenPosition)
  if (has_setscreenposition()) {
    clear_has_cmd();
      ::bwapi::command::SetScreenPosition* temp = cmd_.setscreenposition_;
    cmd_.setscreenposition_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::SetScreenPosition& Command::setscreenposition() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.setScreenPosition)
  return has_setscreenposition()
      ? *cmd_.setscreenposition_
      : *reinterpret_cast< ::bwapi::command::SetScreenPosition*>(&::bwapi::command::_SetScreenPosition_default_instance_);
}
inline ::bwapi::command::SetScreenPosition* Command::mutable_setscreenposition() {
  if (!has_setscreenposition()) {
    clear_cmd();
    set_has_setscreenposition();
    cmd_.setscreenposition_ = CreateMaybeMessage< ::bwapi::command::SetScreenPosition >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.setScreenPosition)
  return cmd_.setscreenposition_;
}

// .bwapi.command.PingMiniMap pingMiniMap = 3;
inline bool Command::has_pingminimap() const {
  return cmd_case() == kPingMiniMap;
}
inline void Command::set_has_pingminimap() {
  _oneof_case_[0] = kPingMiniMap;
}
inline void Command::clear_pingminimap() {
  if (has_pingminimap()) {
    delete cmd_.pingminimap_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::PingMiniMap& Command::_internal_pingminimap() const {
  return *cmd_.pingminimap_;
}
inline ::bwapi::command::PingMiniMap* Command::release_pingminimap() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.pingMiniMap)
  if (has_pingminimap()) {
    clear_has_cmd();
      ::bwapi::command::PingMiniMap* temp = cmd_.pingminimap_;
    cmd_.pingminimap_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::PingMiniMap& Command::pingminimap() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.pingMiniMap)
  return has_pingminimap()
      ? *cmd_.pingminimap_
      : *reinterpret_cast< ::bwapi::command::PingMiniMap*>(&::bwapi::command::_PingMiniMap_default_instance_);
}
inline ::bwapi::command::PingMiniMap* Command::mutable_pingminimap() {
  if (!has_pingminimap()) {
    clear_cmd();
    set_has_pingminimap();
    cmd_.pingminimap_ = CreateMaybeMessage< ::bwapi::command::PingMiniMap >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.pingMiniMap)
  return cmd_.pingminimap_;
}

// .bwapi.command.Printf printf = 4;
inline bool Command::has_printf() const {
  return cmd_case() == kPrintf;
}
inline void Command::set_has_printf() {
  _oneof_case_[0] = kPrintf;
}
inline void Command::clear_printf() {
  if (has_printf()) {
    delete cmd_.printf_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::Printf& Command::_internal_printf() const {
  return *cmd_.printf_;
}
inline ::bwapi::command::Printf* Command::release_printf() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.printf)
  if (has_printf()) {
    clear_has_cmd();
      ::bwapi::command::Printf* temp = cmd_.printf_;
    cmd_.printf_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::Printf& Command::printf() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.printf)
  return has_printf()
      ? *cmd_.printf_
      : *reinterpret_cast< ::bwapi::command::Printf*>(&::bwapi::command::_Printf_default_instance_);
}
inline ::bwapi::command::Printf* Command::mutable_printf() {
  if (!has_printf()) {
    clear_cmd();
    set_has_printf();
    cmd_.printf_ = CreateMaybeMessage< ::bwapi::command::Printf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.printf)
  return cmd_.printf_;
}

// .bwapi.command.Shape shape = 5;
inline bool Command::has_shape() const {
  return cmd_case() == kShape;
}
inline void Command::set_has_shape() {
  _oneof_case_[0] = kShape;
}
inline void Command::clear_shape() {
  if (has_shape()) {
    delete cmd_.shape_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::Shape& Command::_internal_shape() const {
  return *cmd_.shape_;
}
inline ::bwapi::command::Shape* Command::release_shape() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.shape)
  if (has_shape()) {
    clear_has_cmd();
      ::bwapi::command::Shape* temp = cmd_.shape_;
    cmd_.shape_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::Shape& Command::shape() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.shape)
  return has_shape()
      ? *cmd_.shape_
      : *reinterpret_cast< ::bwapi::command::Shape*>(&::bwapi::command::_Shape_default_instance_);
}
inline ::bwapi::command::Shape* Command::mutable_shape() {
  if (!has_shape()) {
    clear_cmd();
    set_has_shape();
    cmd_.shape_ = CreateMaybeMessage< ::bwapi::command::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.shape)
  return cmd_.shape_;
}

// .bwapi.command.PauseGame pauseGame = 6;
inline bool Command::has_pausegame() const {
  return cmd_case() == kPauseGame;
}
inline void Command::set_has_pausegame() {
  _oneof_case_[0] = kPauseGame;
}
inline void Command::clear_pausegame() {
  if (has_pausegame()) {
    delete cmd_.pausegame_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::PauseGame& Command::_internal_pausegame() const {
  return *cmd_.pausegame_;
}
inline ::bwapi::command::PauseGame* Command::release_pausegame() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.pauseGame)
  if (has_pausegame()) {
    clear_has_cmd();
      ::bwapi::command::PauseGame* temp = cmd_.pausegame_;
    cmd_.pausegame_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::PauseGame& Command::pausegame() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.pauseGame)
  return has_pausegame()
      ? *cmd_.pausegame_
      : *reinterpret_cast< ::bwapi::command::PauseGame*>(&::bwapi::command::_PauseGame_default_instance_);
}
inline ::bwapi::command::PauseGame* Command::mutable_pausegame() {
  if (!has_pausegame()) {
    clear_cmd();
    set_has_pausegame();
    cmd_.pausegame_ = CreateMaybeMessage< ::bwapi::command::PauseGame >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.pauseGame)
  return cmd_.pausegame_;
}

// .bwapi.command.ResumeGame resumeGame = 7;
inline bool Command::has_resumegame() const {
  return cmd_case() == kResumeGame;
}
inline void Command::set_has_resumegame() {
  _oneof_case_[0] = kResumeGame;
}
inline void Command::clear_resumegame() {
  if (has_resumegame()) {
    delete cmd_.resumegame_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::ResumeGame& Command::_internal_resumegame() const {
  return *cmd_.resumegame_;
}
inline ::bwapi::command::ResumeGame* Command::release_resumegame() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.resumeGame)
  if (has_resumegame()) {
    clear_has_cmd();
      ::bwapi::command::ResumeGame* temp = cmd_.resumegame_;
    cmd_.resumegame_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::ResumeGame& Command::resumegame() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.resumeGame)
  return has_resumegame()
      ? *cmd_.resumegame_
      : *reinterpret_cast< ::bwapi::command::ResumeGame*>(&::bwapi::command::_ResumeGame_default_instance_);
}
inline ::bwapi::command::ResumeGame* Command::mutable_resumegame() {
  if (!has_resumegame()) {
    clear_cmd();
    set_has_resumegame();
    cmd_.resumegame_ = CreateMaybeMessage< ::bwapi::command::ResumeGame >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.resumeGame)
  return cmd_.resumegame_;
}

// .bwapi.command.LeaveGame leaveGame = 8;
inline bool Command::has_leavegame() const {
  return cmd_case() == kLeaveGame;
}
inline void Command::set_has_leavegame() {
  _oneof_case_[0] = kLeaveGame;
}
inline void Command::clear_leavegame() {
  if (has_leavegame()) {
    delete cmd_.leavegame_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::LeaveGame& Command::_internal_leavegame() const {
  return *cmd_.leavegame_;
}
inline ::bwapi::command::LeaveGame* Command::release_leavegame() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.leaveGame)
  if (has_leavegame()) {
    clear_has_cmd();
      ::bwapi::command::LeaveGame* temp = cmd_.leavegame_;
    cmd_.leavegame_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::LeaveGame& Command::leavegame() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.leaveGame)
  return has_leavegame()
      ? *cmd_.leavegame_
      : *reinterpret_cast< ::bwapi::command::LeaveGame*>(&::bwapi::command::_LeaveGame_default_instance_);
}
inline ::bwapi::command::LeaveGame* Command::mutable_leavegame() {
  if (!has_leavegame()) {
    clear_cmd();
    set_has_leavegame();
    cmd_.leavegame_ = CreateMaybeMessage< ::bwapi::command::LeaveGame >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.leaveGame)
  return cmd_.leavegame_;
}

// .bwapi.command.RestartGame restartGame = 9;
inline bool Command::has_restartgame() const {
  return cmd_case() == kRestartGame;
}
inline void Command::set_has_restartgame() {
  _oneof_case_[0] = kRestartGame;
}
inline void Command::clear_restartgame() {
  if (has_restartgame()) {
    delete cmd_.restartgame_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::RestartGame& Command::_internal_restartgame() const {
  return *cmd_.restartgame_;
}
inline ::bwapi::command::RestartGame* Command::release_restartgame() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.restartGame)
  if (has_restartgame()) {
    clear_has_cmd();
      ::bwapi::command::RestartGame* temp = cmd_.restartgame_;
    cmd_.restartgame_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::RestartGame& Command::restartgame() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.restartGame)
  return has_restartgame()
      ? *cmd_.restartgame_
      : *reinterpret_cast< ::bwapi::command::RestartGame*>(&::bwapi::command::_RestartGame_default_instance_);
}
inline ::bwapi::command::RestartGame* Command::mutable_restartgame() {
  if (!has_restartgame()) {
    clear_cmd();
    set_has_restartgame();
    cmd_.restartgame_ = CreateMaybeMessage< ::bwapi::command::RestartGame >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.restartGame)
  return cmd_.restartgame_;
}

// .bwapi.command.SetLocalSpeed setLocalSpeed = 10;
inline bool Command::has_setlocalspeed() const {
  return cmd_case() == kSetLocalSpeed;
}
inline void Command::set_has_setlocalspeed() {
  _oneof_case_[0] = kSetLocalSpeed;
}
inline void Command::clear_setlocalspeed() {
  if (has_setlocalspeed()) {
    delete cmd_.setlocalspeed_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::SetLocalSpeed& Command::_internal_setlocalspeed() const {
  return *cmd_.setlocalspeed_;
}
inline ::bwapi::command::SetLocalSpeed* Command::release_setlocalspeed() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.setLocalSpeed)
  if (has_setlocalspeed()) {
    clear_has_cmd();
      ::bwapi::command::SetLocalSpeed* temp = cmd_.setlocalspeed_;
    cmd_.setlocalspeed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::SetLocalSpeed& Command::setlocalspeed() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.setLocalSpeed)
  return has_setlocalspeed()
      ? *cmd_.setlocalspeed_
      : *reinterpret_cast< ::bwapi::command::SetLocalSpeed*>(&::bwapi::command::_SetLocalSpeed_default_instance_);
}
inline ::bwapi::command::SetLocalSpeed* Command::mutable_setlocalspeed() {
  if (!has_setlocalspeed()) {
    clear_cmd();
    set_has_setlocalspeed();
    cmd_.setlocalspeed_ = CreateMaybeMessage< ::bwapi::command::SetLocalSpeed >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.setLocalSpeed)
  return cmd_.setlocalspeed_;
}

// .bwapi.command.SetAlliance setAlliance = 11;
inline bool Command::has_setalliance() const {
  return cmd_case() == kSetAlliance;
}
inline void Command::set_has_setalliance() {
  _oneof_case_[0] = kSetAlliance;
}
inline void Command::clear_setalliance() {
  if (has_setalliance()) {
    delete cmd_.setalliance_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::SetAlliance& Command::_internal_setalliance() const {
  return *cmd_.setalliance_;
}
inline ::bwapi::command::SetAlliance* Command::release_setalliance() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.setAlliance)
  if (has_setalliance()) {
    clear_has_cmd();
      ::bwapi::command::SetAlliance* temp = cmd_.setalliance_;
    cmd_.setalliance_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::SetAlliance& Command::setalliance() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.setAlliance)
  return has_setalliance()
      ? *cmd_.setalliance_
      : *reinterpret_cast< ::bwapi::command::SetAlliance*>(&::bwapi::command::_SetAlliance_default_instance_);
}
inline ::bwapi::command::SetAlliance* Command::mutable_setalliance() {
  if (!has_setalliance()) {
    clear_cmd();
    set_has_setalliance();
    cmd_.setalliance_ = CreateMaybeMessage< ::bwapi::command::SetAlliance >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.setAlliance)
  return cmd_.setalliance_;
}

// .bwapi.command.SetVision setVision = 12;
inline bool Command::has_setvision() const {
  return cmd_case() == kSetVision;
}
inline void Command::set_has_setvision() {
  _oneof_case_[0] = kSetVision;
}
inline void Command::clear_setvision() {
  if (has_setvision()) {
    delete cmd_.setvision_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::SetVision& Command::_internal_setvision() const {
  return *cmd_.setvision_;
}
inline ::bwapi::command::SetVision* Command::release_setvision() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.setVision)
  if (has_setvision()) {
    clear_has_cmd();
      ::bwapi::command::SetVision* temp = cmd_.setvision_;
    cmd_.setvision_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::SetVision& Command::setvision() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.setVision)
  return has_setvision()
      ? *cmd_.setvision_
      : *reinterpret_cast< ::bwapi::command::SetVision*>(&::bwapi::command::_SetVision_default_instance_);
}
inline ::bwapi::command::SetVision* Command::mutable_setvision() {
  if (!has_setvision()) {
    clear_cmd();
    set_has_setvision();
    cmd_.setvision_ = CreateMaybeMessage< ::bwapi::command::SetVision >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.setVision)
  return cmd_.setvision_;
}

// .bwapi.command.UnitCommand unitCommand = 14;
inline bool Command::has_unitcommand() const {
  return cmd_case() == kUnitCommand;
}
inline void Command::set_has_unitcommand() {
  _oneof_case_[0] = kUnitCommand;
}
inline void Command::clear_unitcommand() {
  if (has_unitcommand()) {
    delete cmd_.unitcommand_;
    clear_has_cmd();
  }
}
inline const ::bwapi::command::UnitCommand& Command::_internal_unitcommand() const {
  return *cmd_.unitcommand_;
}
inline ::bwapi::command::UnitCommand* Command::release_unitcommand() {
  // @@protoc_insertion_point(field_release:bwapi.command.Command.unitCommand)
  if (has_unitcommand()) {
    clear_has_cmd();
      ::bwapi::command::UnitCommand* temp = cmd_.unitcommand_;
    cmd_.unitcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::bwapi::command::UnitCommand& Command::unitcommand() const {
  // @@protoc_insertion_point(field_get:bwapi.command.Command.unitCommand)
  return has_unitcommand()
      ? *cmd_.unitcommand_
      : *reinterpret_cast< ::bwapi::command::UnitCommand*>(&::bwapi::command::_UnitCommand_default_instance_);
}
inline ::bwapi::command::UnitCommand* Command::mutable_unitcommand() {
  if (!has_unitcommand()) {
    clear_cmd();
    set_has_unitcommand();
    cmd_.unitcommand_ = CreateMaybeMessage< ::bwapi::command::UnitCommand >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bwapi.command.Command.unitCommand)
  return cmd_.unitcommand_;
}

inline bool Command::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void Command::clear_has_cmd() {
  _oneof_case_[0] = CMD_NOT_SET;
}
inline Command::CmdCase Command::cmd_case() const {
  return Command::CmdCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace command
}  // namespace bwapi

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bwapi::command::ShapeType> : ::std::true_type {};
template <> struct is_proto_enum< ::bwapi::command::CoordinateType> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_command_2eproto
