// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#ifndef PROTOBUF_INCLUDED_data_2eproto
#define PROTOBUF_INCLUDED_data_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_data_2eproto 

namespace protobuf_data_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_data_2eproto
namespace bwapi {
namespace data {
class Bullet;
class BulletDefaultTypeInternal;
extern BulletDefaultTypeInternal _Bullet_default_instance_;
class Force;
class ForceDefaultTypeInternal;
extern ForceDefaultTypeInternal _Force_default_instance_;
class Game;
class GameDefaultTypeInternal;
extern GameDefaultTypeInternal _Game_default_instance_;
class GameData;
class GameDataDefaultTypeInternal;
extern GameDataDefaultTypeInternal _GameData_default_instance_;
class MapData;
class MapDataDefaultTypeInternal;
extern MapDataDefaultTypeInternal _MapData_default_instance_;
class Player;
class PlayerDefaultTypeInternal;
extern PlayerDefaultTypeInternal _Player_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class Region;
class RegionDefaultTypeInternal;
extern RegionDefaultTypeInternal _Region_default_instance_;
class Unit;
class UnitDefaultTypeInternal;
extern UnitDefaultTypeInternal _Unit_default_instance_;
}  // namespace data
}  // namespace bwapi
namespace google {
namespace protobuf {
template<> ::bwapi::data::Bullet* Arena::CreateMaybeMessage<::bwapi::data::Bullet>(Arena*);
template<> ::bwapi::data::Force* Arena::CreateMaybeMessage<::bwapi::data::Force>(Arena*);
template<> ::bwapi::data::Game* Arena::CreateMaybeMessage<::bwapi::data::Game>(Arena*);
template<> ::bwapi::data::GameData* Arena::CreateMaybeMessage<::bwapi::data::GameData>(Arena*);
template<> ::bwapi::data::MapData* Arena::CreateMaybeMessage<::bwapi::data::MapData>(Arena*);
template<> ::bwapi::data::Player* Arena::CreateMaybeMessage<::bwapi::data::Player>(Arena*);
template<> ::bwapi::data::Point* Arena::CreateMaybeMessage<::bwapi::data::Point>(Arena*);
template<> ::bwapi::data::Region* Arena::CreateMaybeMessage<::bwapi::data::Region>(Arena*);
template<> ::bwapi::data::Unit* Arena::CreateMaybeMessage<::bwapi::data::Unit>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace bwapi {
namespace data {

// ===================================================================

class Point : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(NULL);
  }

  Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 scale = 3;
  void clear_scale();
  static const int kScaleFieldNumber = 3;
  ::google::protobuf::int32 scale() const;
  void set_scale(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.data.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 scale_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.MapData) */ {
 public:
  MapData();
  virtual ~MapData();

  MapData(const MapData& from);

  inline MapData& operator=(const MapData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapData(MapData&& from) noexcept
    : MapData() {
    *this = ::std::move(from);
  }

  inline MapData& operator=(MapData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const MapData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapData* internal_default_instance() {
    return reinterpret_cast<const MapData*>(
               &_MapData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MapData* other);
  friend void swap(MapData& a, MapData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapData* New() const final {
    return CreateMaybeMessage<MapData>(NULL);
  }

  MapData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MapData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MapData& from);
  void MergeFrom(const MapData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 groundHeight = 4;
  int groundheight_size() const;
  void clear_groundheight();
  static const int kGroundHeightFieldNumber = 4;
  ::google::protobuf::int32 groundheight(int index) const;
  void set_groundheight(int index, ::google::protobuf::int32 value);
  void add_groundheight(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      groundheight() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_groundheight();

  // repeated bool isBuildable = 5;
  int isbuildable_size() const;
  void clear_isbuildable();
  static const int kIsBuildableFieldNumber = 5;
  bool isbuildable(int index) const;
  void set_isbuildable(int index, bool value);
  void add_isbuildable(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isbuildable() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isbuildable();

  // repeated bool isVisible = 6;
  int isvisible_size() const;
  void clear_isvisible();
  static const int kIsVisibleFieldNumber = 6;
  bool isvisible(int index) const;
  void set_isvisible(int index, bool value);
  void add_isvisible(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isvisible() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isvisible();

  // repeated bool isExplored = 7;
  int isexplored_size() const;
  void clear_isexplored();
  static const int kIsExploredFieldNumber = 7;
  bool isexplored(int index) const;
  void set_isexplored(int index, bool value);
  void add_isexplored(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isexplored() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isexplored();

  // repeated bool hasCreep = 8;
  int hascreep_size() const;
  void clear_hascreep();
  static const int kHasCreepFieldNumber = 8;
  bool hascreep(int index) const;
  void set_hascreep(int index, bool value);
  void add_hascreep(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      hascreep() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_hascreep();

  // repeated bool isOccupied = 9;
  int isoccupied_size() const;
  void clear_isoccupied();
  static const int kIsOccupiedFieldNumber = 9;
  bool isoccupied(int index) const;
  void set_isoccupied(int index, bool value);
  void add_isoccupied(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isoccupied() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isoccupied();

  // repeated bool isWalkable = 10;
  int iswalkable_size() const;
  void clear_iswalkable();
  static const int kIsWalkableFieldNumber = 10;
  bool iswalkable(int index) const;
  void set_iswalkable(int index, bool value);
  void add_iswalkable(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      iswalkable() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_iswalkable();

  // repeated uint32 mapTileRegionId = 11;
  int maptileregionid_size() const;
  void clear_maptileregionid();
  static const int kMapTileRegionIdFieldNumber = 11;
  ::google::protobuf::uint32 maptileregionid(int index) const;
  void set_maptileregionid(int index, ::google::protobuf::uint32 value);
  void add_maptileregionid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      maptileregionid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_maptileregionid();

  // repeated uint32 mapSplitTilesMiniTileMask = 12;
  int mapsplittilesminitilemask_size() const;
  void clear_mapsplittilesminitilemask();
  static const int kMapSplitTilesMiniTileMaskFieldNumber = 12;
  ::google::protobuf::uint32 mapsplittilesminitilemask(int index) const;
  void set_mapsplittilesminitilemask(int index, ::google::protobuf::uint32 value);
  void add_mapsplittilesminitilemask(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mapsplittilesminitilemask() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mapsplittilesminitilemask();

  // repeated uint32 mapSplitTilesRegion1 = 13;
  int mapsplittilesregion1_size() const;
  void clear_mapsplittilesregion1();
  static const int kMapSplitTilesRegion1FieldNumber = 13;
  ::google::protobuf::uint32 mapsplittilesregion1(int index) const;
  void set_mapsplittilesregion1(int index, ::google::protobuf::uint32 value);
  void add_mapsplittilesregion1(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mapsplittilesregion1() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mapsplittilesregion1();

  // repeated uint32 mapSplitTilesRegion2 = 14;
  int mapsplittilesregion2_size() const;
  void clear_mapsplittilesregion2();
  static const int kMapSplitTilesRegion2FieldNumber = 14;
  ::google::protobuf::uint32 mapsplittilesregion2(int index) const;
  void set_mapsplittilesregion2(int index, ::google::protobuf::uint32 value);
  void add_mapsplittilesregion2(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mapsplittilesregion2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mapsplittilesregion2();

  // string mapHash = 3;
  void clear_maphash();
  static const int kMapHashFieldNumber = 3;
  const ::std::string& maphash() const;
  void set_maphash(const ::std::string& value);
  #if LANG_CXX11
  void set_maphash(::std::string&& value);
  #endif
  void set_maphash(const char* value);
  void set_maphash(const char* value, size_t size);
  ::std::string* mutable_maphash();
  ::std::string* release_maphash();
  void set_allocated_maphash(::std::string* maphash);

  // .bwapi.data.Point size = 1;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  private:
  const ::bwapi::data::Point& _internal_size() const;
  public:
  const ::bwapi::data::Point& size() const;
  ::bwapi::data::Point* release_size();
  ::bwapi::data::Point* mutable_size();
  void set_allocated_size(::bwapi::data::Point* size);

  // int32 tileset = 2;
  void clear_tileset();
  static const int kTilesetFieldNumber = 2;
  ::google::protobuf::int32 tileset() const;
  void set_tileset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.data.MapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > groundheight_;
  mutable int _groundheight_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isbuildable_;
  mutable int _isbuildable_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isvisible_;
  mutable int _isvisible_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isexplored_;
  mutable int _isexplored_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > hascreep_;
  mutable int _hascreep_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isoccupied_;
  mutable int _isoccupied_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > iswalkable_;
  mutable int _iswalkable_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > maptileregionid_;
  mutable int _maptileregionid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapsplittilesminitilemask_;
  mutable int _mapsplittilesminitilemask_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapsplittilesregion1_;
  mutable int _mapsplittilesregion1_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapsplittilesregion2_;
  mutable int _mapsplittilesregion2_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr maphash_;
  ::bwapi::data::Point* size_;
  ::google::protobuf::int32 tileset_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.GameData) */ {
 public:
  GameData();
  virtual ~GameData();

  GameData(const GameData& from);

  inline GameData& operator=(const GameData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameData(GameData&& from) noexcept
    : GameData() {
    *this = ::std::move(from);
  }

  inline GameData& operator=(GameData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const GameData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameData* internal_default_instance() {
    return reinterpret_cast<const GameData*>(
               &_GameData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GameData* other);
  friend void swap(GameData& a, GameData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameData* New() const final {
    return CreateMaybeMessage<GameData>(NULL);
  }

  GameData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const GameData& from);
  void MergeFrom(const GameData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 replayVisionPlayers = 13;
  int replayvisionplayers_size() const;
  void clear_replayvisionplayers();
  static const int kReplayVisionPlayersFieldNumber = 13;
  ::google::protobuf::int32 replayvisionplayers(int index) const;
  void set_replayvisionplayers(int index, ::google::protobuf::int32 value);
  void add_replayvisionplayers(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      replayvisionplayers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_replayvisionplayers();

  // repeated .bwapi.data.Point startPositions = 32;
  int startpositions_size() const;
  void clear_startpositions();
  static const int kStartPositionsFieldNumber = 32;
  ::bwapi::data::Point* mutable_startpositions(int index);
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Point >*
      mutable_startpositions();
  const ::bwapi::data::Point& startpositions(int index) const;
  ::bwapi::data::Point* add_startpositions();
  const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Point >&
      startpositions() const;

  // repeated int32 regions = 33;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 33;
  ::google::protobuf::int32 regions(int index) const;
  void set_regions(int index, ::google::protobuf::int32 value);
  void add_regions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      regions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_regions();

  // string engine = 2;
  void clear_engine();
  static const int kEngineFieldNumber = 2;
  const ::std::string& engine() const;
  void set_engine(const ::std::string& value);
  #if LANG_CXX11
  void set_engine(::std::string&& value);
  #endif
  void set_engine(const char* value);
  void set_engine(const char* value, size_t size);
  ::std::string* mutable_engine();
  ::std::string* release_engine();
  void set_allocated_engine(::std::string* engine);

  // string engineVersion = 3;
  void clear_engineversion();
  static const int kEngineVersionFieldNumber = 3;
  const ::std::string& engineversion() const;
  void set_engineversion(const ::std::string& value);
  #if LANG_CXX11
  void set_engineversion(::std::string&& value);
  #endif
  void set_engineversion(const char* value);
  void set_engineversion(const char* value, size_t size);
  ::std::string* mutable_engineversion();
  ::std::string* release_engineversion();
  void set_allocated_engineversion(::std::string* engineversion);

  // string mapPath = 27;
  void clear_mappath();
  static const int kMapPathFieldNumber = 27;
  const ::std::string& mappath() const;
  void set_mappath(const ::std::string& value);
  #if LANG_CXX11
  void set_mappath(::std::string&& value);
  #endif
  void set_mappath(const char* value);
  void set_mappath(const char* value, size_t size);
  ::std::string* mutable_mappath();
  ::std::string* release_mappath();
  void set_allocated_mappath(::std::string* mappath);

  // string mapName = 28;
  void clear_mapname();
  static const int kMapNameFieldNumber = 28;
  const ::std::string& mapname() const;
  void set_mapname(const ::std::string& value);
  #if LANG_CXX11
  void set_mapname(::std::string&& value);
  #endif
  void set_mapname(const char* value);
  void set_mapname(const char* value, size_t size);
  ::std::string* mutable_mapname();
  ::std::string* release_mapname();
  void set_allocated_mapname(::std::string* mapname);

  // string mapFileName = 29;
  void clear_mapfilename();
  static const int kMapFileNameFieldNumber = 29;
  const ::std::string& mapfilename() const;
  void set_mapfilename(const ::std::string& value);
  #if LANG_CXX11
  void set_mapfilename(::std::string&& value);
  #endif
  void set_mapfilename(const char* value);
  void set_mapfilename(const char* value, size_t size);
  ::std::string* mutable_mapfilename();
  ::std::string* release_mapfilename();
  void set_allocated_mapfilename(::std::string* mapfilename);

  // string gameName = 30;
  void clear_gamename();
  static const int kGameNameFieldNumber = 30;
  const ::std::string& gamename() const;
  void set_gamename(const ::std::string& value);
  #if LANG_CXX11
  void set_gamename(::std::string&& value);
  #endif
  void set_gamename(const char* value);
  void set_gamename(const char* value, size_t size);
  ::std::string* mutable_gamename();
  ::std::string* release_gamename();
  void set_allocated_gamename(::std::string* gamename);

  // string randomSeed = 31;
  void clear_randomseed();
  static const int kRandomSeedFieldNumber = 31;
  const ::std::string& randomseed() const;
  void set_randomseed(const ::std::string& value);
  #if LANG_CXX11
  void set_randomseed(::std::string&& value);
  #endif
  void set_randomseed(const char* value);
  void set_randomseed(const char* value, size_t size);
  ::std::string* mutable_randomseed();
  ::std::string* release_randomseed();
  void set_allocated_randomseed(::std::string* randomseed);

  // .bwapi.data.Point screenSize = 35;
  bool has_screensize() const;
  void clear_screensize();
  static const int kScreenSizeFieldNumber = 35;
  private:
  const ::bwapi::data::Point& _internal_screensize() const;
  public:
  const ::bwapi::data::Point& screensize() const;
  ::bwapi::data::Point* release_screensize();
  ::bwapi::data::Point* mutable_screensize();
  void set_allocated_screensize(::bwapi::data::Point* screensize);

  // .bwapi.data.Point screenPosition = 36;
  bool has_screenposition() const;
  void clear_screenposition();
  static const int kScreenPositionFieldNumber = 36;
  private:
  const ::bwapi::data::Point& _internal_screenposition() const;
  public:
  const ::bwapi::data::Point& screenposition() const;
  ::bwapi::data::Point* release_screenposition();
  ::bwapi::data::Point* mutable_screenposition();
  void set_allocated_screenposition(::bwapi::data::Point* screenposition);

  // .bwapi.data.MapData map = 37;
  bool has_map() const;
  void clear_map();
  static const int kMapFieldNumber = 37;
  private:
  const ::bwapi::data::MapData& _internal_map() const;
  public:
  const ::bwapi::data::MapData& map() const;
  ::bwapi::data::MapData* release_map();
  ::bwapi::data::MapData* mutable_map();
  void set_allocated_map(::bwapi::data::MapData* map);

  // int32 apiVersion = 1;
  void clear_apiversion();
  static const int kApiVersionFieldNumber = 1;
  ::google::protobuf::int32 apiversion() const;
  void set_apiversion(::google::protobuf::int32 value);

  // int32 gameType = 5;
  void clear_gametype();
  static const int kGameTypeFieldNumber = 5;
  ::google::protobuf::int32 gametype() const;
  void set_gametype(::google::protobuf::int32 value);

  // int32 frameCount = 6;
  void clear_framecount();
  static const int kFrameCountFieldNumber = 6;
  ::google::protobuf::int32 framecount() const;
  void set_framecount(::google::protobuf::int32 value);

  // int32 latencyFrames = 7;
  void clear_latencyframes();
  static const int kLatencyFramesFieldNumber = 7;
  ::google::protobuf::int32 latencyframes() const;
  void set_latencyframes(::google::protobuf::int32 value);

  // int32 turnSize = 8;
  void clear_turnsize();
  static const int kTurnSizeFieldNumber = 8;
  ::google::protobuf::int32 turnsize() const;
  void set_turnsize(::google::protobuf::int32 value);

  // int32 gameSpeed = 9;
  void clear_gamespeed();
  static const int kGameSpeedFieldNumber = 9;
  ::google::protobuf::int32 gamespeed() const;
  void set_gamespeed(::google::protobuf::int32 value);

  // int32 frameSkip = 10;
  void clear_frameskip();
  static const int kFrameSkipFieldNumber = 10;
  ::google::protobuf::int32 frameskip() const;
  void set_frameskip(::google::protobuf::int32 value);

  // int32 remainingLatencyFrames = 11;
  void clear_remaininglatencyframes();
  static const int kRemainingLatencyFramesFieldNumber = 11;
  ::google::protobuf::int32 remaininglatencyframes() const;
  void set_remaininglatencyframes(::google::protobuf::int32 value);

  // int32 lastEventTime = 12;
  void clear_lasteventtime();
  static const int kLastEventTimeFieldNumber = 12;
  ::google::protobuf::int32 lasteventtime() const;
  void set_lasteventtime(::google::protobuf::int32 value);

  // float latencyTime = 14;
  void clear_latencytime();
  static const int kLatencyTimeFieldNumber = 14;
  float latencytime() const;
  void set_latencytime(float value);

  // float remainingLatencyTime = 15;
  void clear_remaininglatencytime();
  static const int kRemainingLatencyTimeFieldNumber = 15;
  float remaininglatencytime() const;
  void set_remaininglatencytime(float value);

  // float elapsedTime = 16;
  void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 16;
  float elapsedtime() const;
  void set_elapsedtime(float value);

  // bool tournament = 4;
  void clear_tournament();
  static const int kTournamentFieldNumber = 4;
  bool tournament() const;
  void set_tournament(bool value);

  // bool isPaused = 20;
  void clear_ispaused();
  static const int kIsPausedFieldNumber = 20;
  bool ispaused() const;
  void set_ispaused(bool value);

  // bool isInGame = 21;
  void clear_isingame();
  static const int kIsInGameFieldNumber = 21;
  bool isingame() const;
  void set_isingame(bool value);

  // bool isMultiplayer = 22;
  void clear_ismultiplayer();
  static const int kIsMultiplayerFieldNumber = 22;
  bool ismultiplayer() const;
  void set_ismultiplayer(bool value);

  // float millisecondsPerFrame = 17;
  void clear_millisecondsperframe();
  static const int kMillisecondsPerFrameFieldNumber = 17;
  float millisecondsperframe() const;
  void set_millisecondsperframe(float value);

  // float averageFPS = 18;
  void clear_averagefps();
  static const int kAverageFPSFieldNumber = 18;
  float averagefps() const;
  void set_averagefps(float value);

  // int32 countdownTimer = 19;
  void clear_countdowntimer();
  static const int kCountdownTimerFieldNumber = 19;
  ::google::protobuf::int32 countdowntimer() const;
  void set_countdowntimer(::google::protobuf::int32 value);

  // bool isBattleNet = 23;
  void clear_isbattlenet();
  static const int kIsBattleNetFieldNumber = 23;
  bool isbattlenet() const;
  void set_isbattlenet(bool value);

  // bool isReplay = 24;
  void clear_isreplay();
  static const int kIsReplayFieldNumber = 24;
  bool isreplay() const;
  void set_isreplay(bool value);

  // bool clientUnitSelection = 25;
  void clear_clientunitselection();
  static const int kClientUnitSelectionFieldNumber = 25;
  bool clientunitselection() const;
  void set_clientunitselection(bool value);

  // bool hasGUI = 26;
  void clear_hasgui();
  static const int kHasGUIFieldNumber = 26;
  bool hasgui() const;
  void set_hasgui(bool value);

  // int32 player = 34;
  void clear_player();
  static const int kPlayerFieldNumber = 34;
  ::google::protobuf::int32 player() const;
  void set_player(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.data.GameData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > replayvisionplayers_;
  mutable int _replayvisionplayers_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Point > startpositions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > regions_;
  mutable int _regions_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr engine_;
  ::google::protobuf::internal::ArenaStringPtr engineversion_;
  ::google::protobuf::internal::ArenaStringPtr mappath_;
  ::google::protobuf::internal::ArenaStringPtr mapname_;
  ::google::protobuf::internal::ArenaStringPtr mapfilename_;
  ::google::protobuf::internal::ArenaStringPtr gamename_;
  ::google::protobuf::internal::ArenaStringPtr randomseed_;
  ::bwapi::data::Point* screensize_;
  ::bwapi::data::Point* screenposition_;
  ::bwapi::data::MapData* map_;
  ::google::protobuf::int32 apiversion_;
  ::google::protobuf::int32 gametype_;
  ::google::protobuf::int32 framecount_;
  ::google::protobuf::int32 latencyframes_;
  ::google::protobuf::int32 turnsize_;
  ::google::protobuf::int32 gamespeed_;
  ::google::protobuf::int32 frameskip_;
  ::google::protobuf::int32 remaininglatencyframes_;
  ::google::protobuf::int32 lasteventtime_;
  float latencytime_;
  float remaininglatencytime_;
  float elapsedtime_;
  bool tournament_;
  bool ispaused_;
  bool isingame_;
  bool ismultiplayer_;
  float millisecondsperframe_;
  float averagefps_;
  ::google::protobuf::int32 countdowntimer_;
  bool isbattlenet_;
  bool isreplay_;
  bool clientunitselection_;
  bool hasgui_;
  ::google::protobuf::int32 player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Player : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.Player) */ {
 public:
  Player();
  virtual ~Player();

  Player(const Player& from);

  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Player(Player&& from) noexcept
    : Player() {
    *this = ::std::move(from);
  }

  inline Player& operator=(Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Player* internal_default_instance() {
    return reinterpret_cast<const Player*>(
               &_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Player* other);
  friend void swap(Player& a, Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Player* New() const final {
    return CreateMaybeMessage<Player>(NULL);
  }

  Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Player>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Player& from);
  void MergeFrom(const Player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool isAlly = 6;
  int isally_size() const;
  void clear_isally();
  static const int kIsAllyFieldNumber = 6;
  bool isally(int index) const;
  void set_isally(int index, bool value);
  void add_isally(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isally() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isally();

  // repeated bool isEnemy = 7;
  int isenemy_size() const;
  void clear_isenemy();
  static const int kIsEnemyFieldNumber = 7;
  bool isenemy(int index) const;
  void set_isenemy(int index, bool value);
  void add_isenemy(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isenemy() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isenemy();

  // repeated int32 supplyTotal = 23;
  int supplytotal_size() const;
  void clear_supplytotal();
  static const int kSupplyTotalFieldNumber = 23;
  ::google::protobuf::int32 supplytotal(int index) const;
  void set_supplytotal(int index, ::google::protobuf::int32 value);
  void add_supplytotal(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      supplytotal() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_supplytotal();

  // repeated int32 supplyUsed = 24;
  int supplyused_size() const;
  void clear_supplyused();
  static const int kSupplyUsedFieldNumber = 24;
  ::google::protobuf::int32 supplyused(int index) const;
  void set_supplyused(int index, ::google::protobuf::int32 value);
  void add_supplyused(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      supplyused() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_supplyused();

  // repeated int32 allUnitCount = 25;
  int allunitcount_size() const;
  void clear_allunitcount();
  static const int kAllUnitCountFieldNumber = 25;
  ::google::protobuf::int32 allunitcount(int index) const;
  void set_allunitcount(int index, ::google::protobuf::int32 value);
  void add_allunitcount(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      allunitcount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_allunitcount();

  // repeated int32 visibleUnitCount = 26;
  int visibleunitcount_size() const;
  void clear_visibleunitcount();
  static const int kVisibleUnitCountFieldNumber = 26;
  ::google::protobuf::int32 visibleunitcount(int index) const;
  void set_visibleunitcount(int index, ::google::protobuf::int32 value);
  void add_visibleunitcount(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      visibleunitcount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_visibleunitcount();

  // repeated int32 completedUnitCount = 27;
  int completedunitcount_size() const;
  void clear_completedunitcount();
  static const int kCompletedUnitCountFieldNumber = 27;
  ::google::protobuf::int32 completedunitcount(int index) const;
  void set_completedunitcount(int index, ::google::protobuf::int32 value);
  void add_completedunitcount(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      completedunitcount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_completedunitcount();

  // repeated int32 deadUnitCount = 28;
  int deadunitcount_size() const;
  void clear_deadunitcount();
  static const int kDeadUnitCountFieldNumber = 28;
  ::google::protobuf::int32 deadunitcount(int index) const;
  void set_deadunitcount(int index, ::google::protobuf::int32 value);
  void add_deadunitcount(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      deadunitcount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_deadunitcount();

  // repeated int32 killedUnitCount = 29;
  int killedunitcount_size() const;
  void clear_killedunitcount();
  static const int kKilledUnitCountFieldNumber = 29;
  ::google::protobuf::int32 killedunitcount(int index) const;
  void set_killedunitcount(int index, ::google::protobuf::int32 value);
  void add_killedunitcount(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      killedunitcount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_killedunitcount();

  // repeated int32 upgradeLevel = 30;
  int upgradelevel_size() const;
  void clear_upgradelevel();
  static const int kUpgradeLevelFieldNumber = 30;
  ::google::protobuf::int32 upgradelevel(int index) const;
  void set_upgradelevel(int index, ::google::protobuf::int32 value);
  void add_upgradelevel(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      upgradelevel() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_upgradelevel();

  // repeated bool hasResearched = 31;
  int hasresearched_size() const;
  void clear_hasresearched();
  static const int kHasResearchedFieldNumber = 31;
  bool hasresearched(int index) const;
  void set_hasresearched(int index, bool value);
  void add_hasresearched(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      hasresearched() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_hasresearched();

  // repeated bool isResearching = 32;
  int isresearching_size() const;
  void clear_isresearching();
  static const int kIsResearchingFieldNumber = 32;
  bool isresearching(int index) const;
  void set_isresearching(int index, bool value);
  void add_isresearching(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isresearching() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isresearching();

  // repeated bool isUpgrading = 33;
  int isupgrading_size() const;
  void clear_isupgrading();
  static const int kIsUpgradingFieldNumber = 33;
  bool isupgrading(int index) const;
  void set_isupgrading(int index, bool value);
  void add_isupgrading(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isupgrading() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isupgrading();

  // repeated int32 maxUpgradeLevel = 40;
  int maxupgradelevel_size() const;
  void clear_maxupgradelevel();
  static const int kMaxUpgradeLevelFieldNumber = 40;
  ::google::protobuf::int32 maxupgradelevel(int index) const;
  void set_maxupgradelevel(int index, ::google::protobuf::int32 value);
  void add_maxupgradelevel(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      maxupgradelevel() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_maxupgradelevel();

  // repeated bool isResearchAvailable = 41;
  int isresearchavailable_size() const;
  void clear_isresearchavailable();
  static const int kIsResearchAvailableFieldNumber = 41;
  bool isresearchavailable(int index) const;
  void set_isresearchavailable(int index, bool value);
  void add_isresearchavailable(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isresearchavailable() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isresearchavailable();

  // repeated bool isUnitAvailable = 42;
  int isunitavailable_size() const;
  void clear_isunitavailable();
  static const int kIsUnitAvailableFieldNumber = 42;
  bool isunitavailable(int index) const;
  void set_isunitavailable(int index, bool value);
  void add_isunitavailable(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isunitavailable() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isunitavailable();

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 race = 3;
  void clear_race();
  static const int kRaceFieldNumber = 3;
  ::google::protobuf::int32 race() const;
  void set_race(::google::protobuf::int32 value);

  // int32 type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 force = 5;
  void clear_force();
  static const int kForceFieldNumber = 5;
  ::google::protobuf::int32 force() const;
  void set_force(::google::protobuf::int32 value);

  // int32 startLocationX = 9;
  void clear_startlocationx();
  static const int kStartLocationXFieldNumber = 9;
  ::google::protobuf::int32 startlocationx() const;
  void set_startlocationx(::google::protobuf::int32 value);

  // int32 startLocationY = 10;
  void clear_startlocationy();
  static const int kStartLocationYFieldNumber = 10;
  ::google::protobuf::int32 startlocationy() const;
  void set_startlocationy(::google::protobuf::int32 value);

  // bool isNeutral = 8;
  void clear_isneutral();
  static const int kIsNeutralFieldNumber = 8;
  bool isneutral() const;
  void set_isneutral(bool value);

  // bool isVictorious = 11;
  void clear_isvictorious();
  static const int kIsVictoriousFieldNumber = 11;
  bool isvictorious() const;
  void set_isvictorious(bool value);

  // bool isDefeated = 12;
  void clear_isdefeated();
  static const int kIsDefeatedFieldNumber = 12;
  bool isdefeated() const;
  void set_isdefeated(bool value);

  // bool leftGame = 13;
  void clear_leftgame();
  static const int kLeftGameFieldNumber = 13;
  bool leftgame() const;
  void set_leftgame(bool value);

  // bool isParticipating = 14;
  void clear_isparticipating();
  static const int kIsParticipatingFieldNumber = 14;
  bool isparticipating() const;
  void set_isparticipating(bool value);

  // int32 minerals = 15;
  void clear_minerals();
  static const int kMineralsFieldNumber = 15;
  ::google::protobuf::int32 minerals() const;
  void set_minerals(::google::protobuf::int32 value);

  // int32 gas = 16;
  void clear_gas();
  static const int kGasFieldNumber = 16;
  ::google::protobuf::int32 gas() const;
  void set_gas(::google::protobuf::int32 value);

  // int32 gatheredMinerals = 17;
  void clear_gatheredminerals();
  static const int kGatheredMineralsFieldNumber = 17;
  ::google::protobuf::int32 gatheredminerals() const;
  void set_gatheredminerals(::google::protobuf::int32 value);

  // int32 gatheredGas = 18;
  void clear_gatheredgas();
  static const int kGatheredGasFieldNumber = 18;
  ::google::protobuf::int32 gatheredgas() const;
  void set_gatheredgas(::google::protobuf::int32 value);

  // int32 repairedMinerals = 19;
  void clear_repairedminerals();
  static const int kRepairedMineralsFieldNumber = 19;
  ::google::protobuf::int32 repairedminerals() const;
  void set_repairedminerals(::google::protobuf::int32 value);

  // int32 repairedGas = 20;
  void clear_repairedgas();
  static const int kRepairedGasFieldNumber = 20;
  ::google::protobuf::int32 repairedgas() const;
  void set_repairedgas(::google::protobuf::int32 value);

  // int32 refundedMinerals = 21;
  void clear_refundedminerals();
  static const int kRefundedMineralsFieldNumber = 21;
  ::google::protobuf::int32 refundedminerals() const;
  void set_refundedminerals(::google::protobuf::int32 value);

  // int32 refundedGas = 22;
  void clear_refundedgas();
  static const int kRefundedGasFieldNumber = 22;
  ::google::protobuf::int32 refundedgas() const;
  void set_refundedgas(::google::protobuf::int32 value);

  // int32 color = 34;
  void clear_color();
  static const int kColorFieldNumber = 34;
  ::google::protobuf::int32 color() const;
  void set_color(::google::protobuf::int32 value);

  // int32 totalUnitScore = 35;
  void clear_totalunitscore();
  static const int kTotalUnitScoreFieldNumber = 35;
  ::google::protobuf::int32 totalunitscore() const;
  void set_totalunitscore(::google::protobuf::int32 value);

  // int32 totalKillScore = 36;
  void clear_totalkillscore();
  static const int kTotalKillScoreFieldNumber = 36;
  ::google::protobuf::int32 totalkillscore() const;
  void set_totalkillscore(::google::protobuf::int32 value);

  // int32 totalBuildingScore = 37;
  void clear_totalbuildingscore();
  static const int kTotalBuildingScoreFieldNumber = 37;
  ::google::protobuf::int32 totalbuildingscore() const;
  void set_totalbuildingscore(::google::protobuf::int32 value);

  // int32 totalRazingScore = 38;
  void clear_totalrazingscore();
  static const int kTotalRazingScoreFieldNumber = 38;
  ::google::protobuf::int32 totalrazingscore() const;
  void set_totalrazingscore(::google::protobuf::int32 value);

  // int32 customScore = 39;
  void clear_customscore();
  static const int kCustomScoreFieldNumber = 39;
  ::google::protobuf::int32 customscore() const;
  void set_customscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.data.Player)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > isally_;
  mutable int _isally_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isenemy_;
  mutable int _isenemy_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > supplytotal_;
  mutable int _supplytotal_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > supplyused_;
  mutable int _supplyused_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > allunitcount_;
  mutable int _allunitcount_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > visibleunitcount_;
  mutable int _visibleunitcount_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > completedunitcount_;
  mutable int _completedunitcount_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > deadunitcount_;
  mutable int _deadunitcount_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > killedunitcount_;
  mutable int _killedunitcount_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > upgradelevel_;
  mutable int _upgradelevel_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > hasresearched_;
  mutable int _hasresearched_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isresearching_;
  mutable int _isresearching_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isupgrading_;
  mutable int _isupgrading_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > maxupgradelevel_;
  mutable int _maxupgradelevel_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isresearchavailable_;
  mutable int _isresearchavailable_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > isunitavailable_;
  mutable int _isunitavailable_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 race_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 force_;
  ::google::protobuf::int32 startlocationx_;
  ::google::protobuf::int32 startlocationy_;
  bool isneutral_;
  bool isvictorious_;
  bool isdefeated_;
  bool leftgame_;
  bool isparticipating_;
  ::google::protobuf::int32 minerals_;
  ::google::protobuf::int32 gas_;
  ::google::protobuf::int32 gatheredminerals_;
  ::google::protobuf::int32 gatheredgas_;
  ::google::protobuf::int32 repairedminerals_;
  ::google::protobuf::int32 repairedgas_;
  ::google::protobuf::int32 refundedminerals_;
  ::google::protobuf::int32 refundedgas_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 totalunitscore_;
  ::google::protobuf::int32 totalkillscore_;
  ::google::protobuf::int32 totalbuildingscore_;
  ::google::protobuf::int32 totalrazingscore_;
  ::google::protobuf::int32 customscore_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Unit : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.Unit) */ {
 public:
  Unit();
  virtual ~Unit();

  Unit(const Unit& from);

  inline Unit& operator=(const Unit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unit(Unit&& from) noexcept
    : Unit() {
    *this = ::std::move(from);
  }

  inline Unit& operator=(Unit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Unit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unit* internal_default_instance() {
    return reinterpret_cast<const Unit*>(
               &_Unit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Unit* other);
  friend void swap(Unit& a, Unit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unit* New() const final {
    return CreateMaybeMessage<Unit>(NULL);
  }

  Unit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unit>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Unit& from);
  void MergeFrom(const Unit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Unit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 trainingQueue = 34;
  int trainingqueue_size() const;
  void clear_trainingqueue();
  static const int kTrainingQueueFieldNumber = 34;
  ::google::protobuf::int32 trainingqueue(int index) const;
  void set_trainingqueue(int index, ::google::protobuf::int32 value);
  void add_trainingqueue(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      trainingqueue() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_trainingqueue();

  // repeated int32 loadedUnits = 35;
  int loadedunits_size() const;
  void clear_loadedunits();
  static const int kLoadedUnitsFieldNumber = 35;
  ::google::protobuf::int32 loadedunits(int index) const;
  void set_loadedunits(int index, ::google::protobuf::int32 value);
  void add_loadedunits(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      loadedunits() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_loadedunits();

  // repeated int32 interceptors = 36;
  int interceptors_size() const;
  void clear_interceptors();
  static const int kInterceptorsFieldNumber = 36;
  ::google::protobuf::int32 interceptors(int index) const;
  void set_interceptors(int index, ::google::protobuf::int32 value);
  void add_interceptors(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      interceptors() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_interceptors();

  // repeated int32 larva = 37;
  int larva_size() const;
  void clear_larva();
  static const int kLarvaFieldNumber = 37;
  ::google::protobuf::int32 larva(int index) const;
  void set_larva(int index, ::google::protobuf::int32 value);
  void add_larva(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      larva() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_larva();

  // .bwapi.data.Point position = 4;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  private:
  const ::bwapi::data::Point& _internal_position() const;
  public:
  const ::bwapi::data::Point& position() const;
  ::bwapi::data::Point* release_position();
  ::bwapi::data::Point* mutable_position();
  void set_allocated_position(::bwapi::data::Point* position);

  // .bwapi.data.Point targetPosition = 46;
  bool has_targetposition() const;
  void clear_targetposition();
  static const int kTargetPositionFieldNumber = 46;
  private:
  const ::bwapi::data::Point& _internal_targetposition() const;
  public:
  const ::bwapi::data::Point& targetposition() const;
  ::bwapi::data::Point* release_targetposition();
  ::bwapi::data::Point* mutable_targetposition();
  void set_allocated_targetposition(::bwapi::data::Point* targetposition);

  // .bwapi.data.Point orderTargetPosition = 49;
  bool has_ordertargetposition() const;
  void clear_ordertargetposition();
  static const int kOrderTargetPositionFieldNumber = 49;
  private:
  const ::bwapi::data::Point& _internal_ordertargetposition() const;
  public:
  const ::bwapi::data::Point& ordertargetposition() const;
  ::bwapi::data::Point* release_ordertargetposition();
  ::bwapi::data::Point* mutable_ordertargetposition();
  void set_allocated_ordertargetposition(::bwapi::data::Point* ordertargetposition);

  // .bwapi.data.Point rallyPosition = 51;
  bool has_rallyposition() const;
  void clear_rallyposition();
  static const int kRallyPositionFieldNumber = 51;
  private:
  const ::bwapi::data::Point& _internal_rallyposition() const;
  public:
  const ::bwapi::data::Point& rallyposition() const;
  ::bwapi::data::Point* release_rallyposition();
  ::bwapi::data::Point* mutable_rallyposition();
  void set_allocated_rallyposition(::bwapi::data::Point* rallyposition);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 player = 2;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  ::google::protobuf::int32 player() const;
  void set_player(::google::protobuf::int32 value);

  // double angle = 5;
  void clear_angle();
  static const int kAngleFieldNumber = 5;
  double angle() const;
  void set_angle(double value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 hitPoints = 8;
  void clear_hitpoints();
  static const int kHitPointsFieldNumber = 8;
  ::google::protobuf::int32 hitpoints() const;
  void set_hitpoints(::google::protobuf::int32 value);

  // double velocityX = 6;
  void clear_velocityx();
  static const int kVelocityXFieldNumber = 6;
  double velocityx() const;
  void set_velocityx(double value);

  // double velocityY = 7;
  void clear_velocityy();
  static const int kVelocityYFieldNumber = 7;
  double velocityy() const;
  void set_velocityy(double value);

  // int32 lastHitPoints = 9;
  void clear_lasthitpoints();
  static const int kLastHitPointsFieldNumber = 9;
  ::google::protobuf::int32 lasthitpoints() const;
  void set_lasthitpoints(::google::protobuf::int32 value);

  // int32 shields = 10;
  void clear_shields();
  static const int kShieldsFieldNumber = 10;
  ::google::protobuf::int32 shields() const;
  void set_shields(::google::protobuf::int32 value);

  // int32 energy = 11;
  void clear_energy();
  static const int kEnergyFieldNumber = 11;
  ::google::protobuf::int32 energy() const;
  void set_energy(::google::protobuf::int32 value);

  // int32 resources = 12;
  void clear_resources();
  static const int kResourcesFieldNumber = 12;
  ::google::protobuf::int32 resources() const;
  void set_resources(::google::protobuf::int32 value);

  // int32 resourceGroup = 13;
  void clear_resourcegroup();
  static const int kResourceGroupFieldNumber = 13;
  ::google::protobuf::int32 resourcegroup() const;
  void set_resourcegroup(::google::protobuf::int32 value);

  // int32 killCount = 14;
  void clear_killcount();
  static const int kKillCountFieldNumber = 14;
  ::google::protobuf::int32 killcount() const;
  void set_killcount(::google::protobuf::int32 value);

  // int32 acidSporeCount = 15;
  void clear_acidsporecount();
  static const int kAcidSporeCountFieldNumber = 15;
  ::google::protobuf::int32 acidsporecount() const;
  void set_acidsporecount(::google::protobuf::int32 value);

  // int32 scarabCount = 16;
  void clear_scarabcount();
  static const int kScarabCountFieldNumber = 16;
  ::google::protobuf::int32 scarabcount() const;
  void set_scarabcount(::google::protobuf::int32 value);

  // int32 interceptorCount = 17;
  void clear_interceptorcount();
  static const int kInterceptorCountFieldNumber = 17;
  ::google::protobuf::int32 interceptorcount() const;
  void set_interceptorcount(::google::protobuf::int32 value);

  // int32 spiderMineCount = 18;
  void clear_spiderminecount();
  static const int kSpiderMineCountFieldNumber = 18;
  ::google::protobuf::int32 spiderminecount() const;
  void set_spiderminecount(::google::protobuf::int32 value);

  // int32 groundWeaponCooldown = 19;
  void clear_groundweaponcooldown();
  static const int kGroundWeaponCooldownFieldNumber = 19;
  ::google::protobuf::int32 groundweaponcooldown() const;
  void set_groundweaponcooldown(::google::protobuf::int32 value);

  // int32 airWeaponCooldown = 20;
  void clear_airweaponcooldown();
  static const int kAirWeaponCooldownFieldNumber = 20;
  ::google::protobuf::int32 airweaponcooldown() const;
  void set_airweaponcooldown(::google::protobuf::int32 value);

  // int32 spellCooldown = 21;
  void clear_spellcooldown();
  static const int kSpellCooldownFieldNumber = 21;
  ::google::protobuf::int32 spellcooldown() const;
  void set_spellcooldown(::google::protobuf::int32 value);

  // int32 defenseMatrixPoints = 22;
  void clear_defensematrixpoints();
  static const int kDefenseMatrixPointsFieldNumber = 22;
  ::google::protobuf::int32 defensematrixpoints() const;
  void set_defensematrixpoints(::google::protobuf::int32 value);

  // int32 defenseMatrixTimer = 23;
  void clear_defensematrixtimer();
  static const int kDefenseMatrixTimerFieldNumber = 23;
  ::google::protobuf::int32 defensematrixtimer() const;
  void set_defensematrixtimer(::google::protobuf::int32 value);

  // int32 ensnareTimer = 24;
  void clear_ensnaretimer();
  static const int kEnsnareTimerFieldNumber = 24;
  ::google::protobuf::int32 ensnaretimer() const;
  void set_ensnaretimer(::google::protobuf::int32 value);

  // int32 irradiateTimer = 25;
  void clear_irradiatetimer();
  static const int kIrradiateTimerFieldNumber = 25;
  ::google::protobuf::int32 irradiatetimer() const;
  void set_irradiatetimer(::google::protobuf::int32 value);

  // int32 lockdownTimer = 26;
  void clear_lockdowntimer();
  static const int kLockdownTimerFieldNumber = 26;
  ::google::protobuf::int32 lockdowntimer() const;
  void set_lockdowntimer(::google::protobuf::int32 value);

  // int32 maelstromTimer = 27;
  void clear_maelstromtimer();
  static const int kMaelstromTimerFieldNumber = 27;
  ::google::protobuf::int32 maelstromtimer() const;
  void set_maelstromtimer(::google::protobuf::int32 value);

  // int32 orderTimer = 28;
  void clear_ordertimer();
  static const int kOrderTimerFieldNumber = 28;
  ::google::protobuf::int32 ordertimer() const;
  void set_ordertimer(::google::protobuf::int32 value);

  // int32 plagueTimer = 29;
  void clear_plaguetimer();
  static const int kPlagueTimerFieldNumber = 29;
  ::google::protobuf::int32 plaguetimer() const;
  void set_plaguetimer(::google::protobuf::int32 value);

  // int32 removeTimer = 30;
  void clear_removetimer();
  static const int kRemoveTimerFieldNumber = 30;
  ::google::protobuf::int32 removetimer() const;
  void set_removetimer(::google::protobuf::int32 value);

  // int32 stasisTimer = 31;
  void clear_stasistimer();
  static const int kStasisTimerFieldNumber = 31;
  ::google::protobuf::int32 stasistimer() const;
  void set_stasistimer(::google::protobuf::int32 value);

  // int32 stimTimer = 32;
  void clear_stimtimer();
  static const int kStimTimerFieldNumber = 32;
  ::google::protobuf::int32 stimtimer() const;
  void set_stimtimer(::google::protobuf::int32 value);

  // int32 buildType = 33;
  void clear_buildtype();
  static const int kBuildTypeFieldNumber = 33;
  ::google::protobuf::int32 buildtype() const;
  void set_buildtype(::google::protobuf::int32 value);

  // int32 tech = 38;
  void clear_tech();
  static const int kTechFieldNumber = 38;
  ::google::protobuf::int32 tech() const;
  void set_tech(::google::protobuf::int32 value);

  // int32 upgrade = 39;
  void clear_upgrade();
  static const int kUpgradeFieldNumber = 39;
  ::google::protobuf::int32 upgrade() const;
  void set_upgrade(::google::protobuf::int32 value);

  // int32 remainingBuildTime = 40;
  void clear_remainingbuildtime();
  static const int kRemainingBuildTimeFieldNumber = 40;
  ::google::protobuf::int32 remainingbuildtime() const;
  void set_remainingbuildtime(::google::protobuf::int32 value);

  // int32 remainingTraintime = 41;
  void clear_remainingtraintime();
  static const int kRemainingTraintimeFieldNumber = 41;
  ::google::protobuf::int32 remainingtraintime() const;
  void set_remainingtraintime(::google::protobuf::int32 value);

  // int32 remainingResearchTime = 42;
  void clear_remainingresearchtime();
  static const int kRemainingResearchTimeFieldNumber = 42;
  ::google::protobuf::int32 remainingresearchtime() const;
  void set_remainingresearchtime(::google::protobuf::int32 value);

  // int32 remainingUpgradeTime = 43;
  void clear_remainingupgradetime();
  static const int kRemainingUpgradeTimeFieldNumber = 43;
  ::google::protobuf::int32 remainingupgradetime() const;
  void set_remainingupgradetime(::google::protobuf::int32 value);

  // int32 buildUnit = 44;
  void clear_buildunit();
  static const int kBuildUnitFieldNumber = 44;
  ::google::protobuf::int32 buildunit() const;
  void set_buildunit(::google::protobuf::int32 value);

  // int32 target = 45;
  void clear_target();
  static const int kTargetFieldNumber = 45;
  ::google::protobuf::int32 target() const;
  void set_target(::google::protobuf::int32 value);

  // int32 order = 47;
  void clear_order();
  static const int kOrderFieldNumber = 47;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // int32 orderTarget = 48;
  void clear_ordertarget();
  static const int kOrderTargetFieldNumber = 48;
  ::google::protobuf::int32 ordertarget() const;
  void set_ordertarget(::google::protobuf::int32 value);

  // int32 secondaryOrder = 50;
  void clear_secondaryorder();
  static const int kSecondaryOrderFieldNumber = 50;
  ::google::protobuf::int32 secondaryorder() const;
  void set_secondaryorder(::google::protobuf::int32 value);

  // int32 rallyUnit = 52;
  void clear_rallyunit();
  static const int kRallyUnitFieldNumber = 52;
  ::google::protobuf::int32 rallyunit() const;
  void set_rallyunit(::google::protobuf::int32 value);

  // int32 addon = 53;
  void clear_addon();
  static const int kAddonFieldNumber = 53;
  ::google::protobuf::int32 addon() const;
  void set_addon(::google::protobuf::int32 value);

  // int32 nydusExit = 54;
  void clear_nydusexit();
  static const int kNydusExitFieldNumber = 54;
  ::google::protobuf::int32 nydusexit() const;
  void set_nydusexit(::google::protobuf::int32 value);

  // int32 powerUp = 55;
  void clear_powerup();
  static const int kPowerUpFieldNumber = 55;
  ::google::protobuf::int32 powerup() const;
  void set_powerup(::google::protobuf::int32 value);

  // int32 transport = 56;
  void clear_transport();
  static const int kTransportFieldNumber = 56;
  ::google::protobuf::int32 transport() const;
  void set_transport(::google::protobuf::int32 value);

  // int32 carrier = 57;
  void clear_carrier();
  static const int kCarrierFieldNumber = 57;
  ::google::protobuf::int32 carrier() const;
  void set_carrier(::google::protobuf::int32 value);

  // int32 hatchery = 58;
  void clear_hatchery();
  static const int kHatcheryFieldNumber = 58;
  ::google::protobuf::int32 hatchery() const;
  void set_hatchery(::google::protobuf::int32 value);

  // bool exists = 59;
  void clear_exists();
  static const int kExistsFieldNumber = 59;
  bool exists() const;
  void set_exists(bool value);

  // bool hasNuke = 60;
  void clear_hasnuke();
  static const int kHasNukeFieldNumber = 60;
  bool hasnuke() const;
  void set_hasnuke(bool value);

  // bool isAccelerating = 61;
  void clear_isaccelerating();
  static const int kIsAcceleratingFieldNumber = 61;
  bool isaccelerating() const;
  void set_isaccelerating(bool value);

  // bool isAttacking = 62;
  void clear_isattacking();
  static const int kIsAttackingFieldNumber = 62;
  bool isattacking() const;
  void set_isattacking(bool value);

  // bool isAttackFrame = 63;
  void clear_isattackframe();
  static const int kIsAttackFrameFieldNumber = 63;
  bool isattackframe() const;
  void set_isattackframe(bool value);

  // bool isBeingGathered = 64;
  void clear_isbeinggathered();
  static const int kIsBeingGatheredFieldNumber = 64;
  bool isbeinggathered() const;
  void set_isbeinggathered(bool value);

  // bool isBeingHealed = 65;
  void clear_isbeinghealed();
  static const int kIsBeingHealedFieldNumber = 65;
  bool isbeinghealed() const;
  void set_isbeinghealed(bool value);

  // bool isBlind = 66;
  void clear_isblind();
  static const int kIsBlindFieldNumber = 66;
  bool isblind() const;
  void set_isblind(bool value);

  // int32 carryResourceType = 69;
  void clear_carryresourcetype();
  static const int kCarryResourceTypeFieldNumber = 69;
  ::google::protobuf::int32 carryresourcetype() const;
  void set_carryresourcetype(::google::protobuf::int32 value);

  // bool isBraking = 67;
  void clear_isbraking();
  static const int kIsBrakingFieldNumber = 67;
  bool isbraking() const;
  void set_isbraking(bool value);

  // bool isBurrowed = 68;
  void clear_isburrowed();
  static const int kIsBurrowedFieldNumber = 68;
  bool isburrowed() const;
  void set_isburrowed(bool value);

  // bool isCloaked = 70;
  void clear_iscloaked();
  static const int kIsCloakedFieldNumber = 70;
  bool iscloaked() const;
  void set_iscloaked(bool value);

  // bool isCompleted = 71;
  void clear_iscompleted();
  static const int kIsCompletedFieldNumber = 71;
  bool iscompleted() const;
  void set_iscompleted(bool value);

  // bool isConstructing = 72;
  void clear_isconstructing();
  static const int kIsConstructingFieldNumber = 72;
  bool isconstructing() const;
  void set_isconstructing(bool value);

  // bool isDetected = 73;
  void clear_isdetected();
  static const int kIsDetectedFieldNumber = 73;
  bool isdetected() const;
  void set_isdetected(bool value);

  // bool isGathering = 74;
  void clear_isgathering();
  static const int kIsGatheringFieldNumber = 74;
  bool isgathering() const;
  void set_isgathering(bool value);

  // bool isHallucination = 75;
  void clear_ishallucination();
  static const int kIsHallucinationFieldNumber = 75;
  bool ishallucination() const;
  void set_ishallucination(bool value);

  // bool isIdle = 76;
  void clear_isidle();
  static const int kIsIdleFieldNumber = 76;
  bool isidle() const;
  void set_isidle(bool value);

  // bool isinterruptible = 77;
  void clear_isinterruptible();
  static const int kIsinterruptibleFieldNumber = 77;
  bool isinterruptible() const;
  void set_isinterruptible(bool value);

  // bool isInvincible = 78;
  void clear_isinvincible();
  static const int kIsInvincibleFieldNumber = 78;
  bool isinvincible() const;
  void set_isinvincible(bool value);

  // bool isLifted = 79;
  void clear_islifted();
  static const int kIsLiftedFieldNumber = 79;
  bool islifted() const;
  void set_islifted(bool value);

  // bool isMorphing = 80;
  void clear_ismorphing();
  static const int kIsMorphingFieldNumber = 80;
  bool ismorphing() const;
  void set_ismorphing(bool value);

  // bool isMoving = 81;
  void clear_ismoving();
  static const int kIsMovingFieldNumber = 81;
  bool ismoving() const;
  void set_ismoving(bool value);

  // bool isParasited = 82;
  void clear_isparasited();
  static const int kIsParasitedFieldNumber = 82;
  bool isparasited() const;
  void set_isparasited(bool value);

  // bool isSelected = 83;
  void clear_isselected();
  static const int kIsSelectedFieldNumber = 83;
  bool isselected() const;
  void set_isselected(bool value);

  // bool isStartingAttack = 84;
  void clear_isstartingattack();
  static const int kIsStartingAttackFieldNumber = 84;
  bool isstartingattack() const;
  void set_isstartingattack(bool value);

  // bool isStuck = 85;
  void clear_isstuck();
  static const int kIsStuckFieldNumber = 85;
  bool isstuck() const;
  void set_isstuck(bool value);

  // bool isTraining = 86;
  void clear_istraining();
  static const int kIsTrainingFieldNumber = 86;
  bool istraining() const;
  void set_istraining(bool value);

  // bool isUnderStorm = 87;
  void clear_isunderstorm();
  static const int kIsUnderStormFieldNumber = 87;
  bool isunderstorm() const;
  void set_isunderstorm(bool value);

  // bool isUnderDarkSwarm = 88;
  void clear_isunderdarkswarm();
  static const int kIsUnderDarkSwarmFieldNumber = 88;
  bool isunderdarkswarm() const;
  void set_isunderdarkswarm(bool value);

  // bool isUnderDWeb = 89;
  void clear_isunderdweb();
  static const int kIsUnderDWebFieldNumber = 89;
  bool isunderdweb() const;
  void set_isunderdweb(bool value);

  // bool isPowered = 90;
  void clear_ispowered();
  static const int kIsPoweredFieldNumber = 90;
  bool ispowered() const;
  void set_ispowered(bool value);

  // bool isVisible = 91;
  void clear_isvisible();
  static const int kIsVisibleFieldNumber = 91;
  bool isvisible() const;
  void set_isvisible(bool value);

  // int32 buttonset = 92;
  void clear_buttonset();
  static const int kButtonsetFieldNumber = 92;
  ::google::protobuf::int32 buttonset() const;
  void set_buttonset(::google::protobuf::int32 value);

  // int32 lastCommandFrame = 93;
  void clear_lastcommandframe();
  static const int kLastCommandFrameFieldNumber = 93;
  ::google::protobuf::int32 lastcommandframe() const;
  void set_lastcommandframe(::google::protobuf::int32 value);

  // int32 lastCommand = 94;
  void clear_lastcommand();
  static const int kLastCommandFieldNumber = 94;
  ::google::protobuf::int32 lastcommand() const;
  void set_lastcommand(::google::protobuf::int32 value);

  // int32 lastAttackerPlayer = 95;
  void clear_lastattackerplayer();
  static const int kLastAttackerPlayerFieldNumber = 95;
  ::google::protobuf::int32 lastattackerplayer() const;
  void set_lastattackerplayer(::google::protobuf::int32 value);

  // int32 replayID = 96;
  void clear_replayid();
  static const int kReplayIDFieldNumber = 96;
  ::google::protobuf::int32 replayid() const;
  void set_replayid(::google::protobuf::int32 value);

  // bool recentlyAttacked = 97;
  void clear_recentlyattacked();
  static const int kRecentlyAttackedFieldNumber = 97;
  bool recentlyattacked() const;
  void set_recentlyattacked(bool value);

  // @@protoc_insertion_point(class_scope:bwapi.data.Unit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > trainingqueue_;
  mutable int _trainingqueue_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > loadedunits_;
  mutable int _loadedunits_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > interceptors_;
  mutable int _interceptors_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > larva_;
  mutable int _larva_cached_byte_size_;
  ::bwapi::data::Point* position_;
  ::bwapi::data::Point* targetposition_;
  ::bwapi::data::Point* ordertargetposition_;
  ::bwapi::data::Point* rallyposition_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 player_;
  double angle_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 hitpoints_;
  double velocityx_;
  double velocityy_;
  ::google::protobuf::int32 lasthitpoints_;
  ::google::protobuf::int32 shields_;
  ::google::protobuf::int32 energy_;
  ::google::protobuf::int32 resources_;
  ::google::protobuf::int32 resourcegroup_;
  ::google::protobuf::int32 killcount_;
  ::google::protobuf::int32 acidsporecount_;
  ::google::protobuf::int32 scarabcount_;
  ::google::protobuf::int32 interceptorcount_;
  ::google::protobuf::int32 spiderminecount_;
  ::google::protobuf::int32 groundweaponcooldown_;
  ::google::protobuf::int32 airweaponcooldown_;
  ::google::protobuf::int32 spellcooldown_;
  ::google::protobuf::int32 defensematrixpoints_;
  ::google::protobuf::int32 defensematrixtimer_;
  ::google::protobuf::int32 ensnaretimer_;
  ::google::protobuf::int32 irradiatetimer_;
  ::google::protobuf::int32 lockdowntimer_;
  ::google::protobuf::int32 maelstromtimer_;
  ::google::protobuf::int32 ordertimer_;
  ::google::protobuf::int32 plaguetimer_;
  ::google::protobuf::int32 removetimer_;
  ::google::protobuf::int32 stasistimer_;
  ::google::protobuf::int32 stimtimer_;
  ::google::protobuf::int32 buildtype_;
  ::google::protobuf::int32 tech_;
  ::google::protobuf::int32 upgrade_;
  ::google::protobuf::int32 remainingbuildtime_;
  ::google::protobuf::int32 remainingtraintime_;
  ::google::protobuf::int32 remainingresearchtime_;
  ::google::protobuf::int32 remainingupgradetime_;
  ::google::protobuf::int32 buildunit_;
  ::google::protobuf::int32 target_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::int32 ordertarget_;
  ::google::protobuf::int32 secondaryorder_;
  ::google::protobuf::int32 rallyunit_;
  ::google::protobuf::int32 addon_;
  ::google::protobuf::int32 nydusexit_;
  ::google::protobuf::int32 powerup_;
  ::google::protobuf::int32 transport_;
  ::google::protobuf::int32 carrier_;
  ::google::protobuf::int32 hatchery_;
  bool exists_;
  bool hasnuke_;
  bool isaccelerating_;
  bool isattacking_;
  bool isattackframe_;
  bool isbeinggathered_;
  bool isbeinghealed_;
  bool isblind_;
  ::google::protobuf::int32 carryresourcetype_;
  bool isbraking_;
  bool isburrowed_;
  bool iscloaked_;
  bool iscompleted_;
  bool isconstructing_;
  bool isdetected_;
  bool isgathering_;
  bool ishallucination_;
  bool isidle_;
  bool isinterruptible_;
  bool isinvincible_;
  bool islifted_;
  bool ismorphing_;
  bool ismoving_;
  bool isparasited_;
  bool isselected_;
  bool isstartingattack_;
  bool isstuck_;
  bool istraining_;
  bool isunderstorm_;
  bool isunderdarkswarm_;
  bool isunderdweb_;
  bool ispowered_;
  bool isvisible_;
  ::google::protobuf::int32 buttonset_;
  ::google::protobuf::int32 lastcommandframe_;
  ::google::protobuf::int32 lastcommand_;
  ::google::protobuf::int32 lastattackerplayer_;
  ::google::protobuf::int32 replayid_;
  bool recentlyattacked_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Region : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.Region) */ {
 public:
  Region();
  virtual ~Region();

  Region(const Region& from);

  inline Region& operator=(const Region& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Region(Region&& from) noexcept
    : Region() {
    *this = ::std::move(from);
  }

  inline Region& operator=(Region&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Region& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Region* internal_default_instance() {
    return reinterpret_cast<const Region*>(
               &_Region_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Region* other);
  friend void swap(Region& a, Region& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Region* New() const final {
    return CreateMaybeMessage<Region>(NULL);
  }

  Region* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Region>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Region& from);
  void MergeFrom(const Region& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Region* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 neighbors = 11;
  int neighbors_size() const;
  void clear_neighbors();
  static const int kNeighborsFieldNumber = 11;
  ::google::protobuf::int32 neighbors(int index) const;
  void set_neighbors(int index, ::google::protobuf::int32 value);
  void add_neighbors(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      neighbors() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_neighbors();

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 islandID = 2;
  void clear_islandid();
  static const int kIslandIDFieldNumber = 2;
  ::google::protobuf::int32 islandid() const;
  void set_islandid(::google::protobuf::int32 value);

  // int32 center_x = 3;
  void clear_center_x();
  static const int kCenterXFieldNumber = 3;
  ::google::protobuf::int32 center_x() const;
  void set_center_x(::google::protobuf::int32 value);

  // int32 center_y = 4;
  void clear_center_y();
  static const int kCenterYFieldNumber = 4;
  ::google::protobuf::int32 center_y() const;
  void set_center_y(::google::protobuf::int32 value);

  // int32 priority = 5;
  void clear_priority();
  static const int kPriorityFieldNumber = 5;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // int32 leftMost = 6;
  void clear_leftmost();
  static const int kLeftMostFieldNumber = 6;
  ::google::protobuf::int32 leftmost() const;
  void set_leftmost(::google::protobuf::int32 value);

  // int32 rightMost = 7;
  void clear_rightmost();
  static const int kRightMostFieldNumber = 7;
  ::google::protobuf::int32 rightmost() const;
  void set_rightmost(::google::protobuf::int32 value);

  // int32 topMost = 8;
  void clear_topmost();
  static const int kTopMostFieldNumber = 8;
  ::google::protobuf::int32 topmost() const;
  void set_topmost(::google::protobuf::int32 value);

  // int32 bottomMost = 9;
  void clear_bottommost();
  static const int kBottomMostFieldNumber = 9;
  ::google::protobuf::int32 bottommost() const;
  void set_bottommost(::google::protobuf::int32 value);

  // int32 neighborCount = 10;
  void clear_neighborcount();
  static const int kNeighborCountFieldNumber = 10;
  ::google::protobuf::int32 neighborcount() const;
  void set_neighborcount(::google::protobuf::int32 value);

  // bool isAccessible = 12;
  void clear_isaccessible();
  static const int kIsAccessibleFieldNumber = 12;
  bool isaccessible() const;
  void set_isaccessible(bool value);

  // bool isHigherGround = 13;
  void clear_ishigherground();
  static const int kIsHigherGroundFieldNumber = 13;
  bool ishigherground() const;
  void set_ishigherground(bool value);

  // @@protoc_insertion_point(class_scope:bwapi.data.Region)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > neighbors_;
  mutable int _neighbors_cached_byte_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 islandid_;
  ::google::protobuf::int32 center_x_;
  ::google::protobuf::int32 center_y_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::int32 leftmost_;
  ::google::protobuf::int32 rightmost_;
  ::google::protobuf::int32 topmost_;
  ::google::protobuf::int32 bottommost_;
  ::google::protobuf::int32 neighborcount_;
  bool isaccessible_;
  bool ishigherground_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Bullet : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.Bullet) */ {
 public:
  Bullet();
  virtual ~Bullet();

  Bullet(const Bullet& from);

  inline Bullet& operator=(const Bullet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bullet(Bullet&& from) noexcept
    : Bullet() {
    *this = ::std::move(from);
  }

  inline Bullet& operator=(Bullet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Bullet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bullet* internal_default_instance() {
    return reinterpret_cast<const Bullet*>(
               &_Bullet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Bullet* other);
  friend void swap(Bullet& a, Bullet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bullet* New() const final {
    return CreateMaybeMessage<Bullet>(NULL);
  }

  Bullet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bullet>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Bullet& from);
  void MergeFrom(const Bullet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Bullet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool isVisible = 13;
  int isvisible_size() const;
  void clear_isvisible();
  static const int kIsVisibleFieldNumber = 13;
  bool isvisible(int index) const;
  void set_isvisible(int index, bool value);
  void add_isvisible(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      isvisible() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_isvisible();

  // .bwapi.data.Point position = 5;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 5;
  private:
  const ::bwapi::data::Point& _internal_position() const;
  public:
  const ::bwapi::data::Point& position() const;
  ::bwapi::data::Point* release_position();
  ::bwapi::data::Point* mutable_position();
  void set_allocated_position(::bwapi::data::Point* position);

  // .bwapi.data.Point targetPosition = 10;
  bool has_targetposition() const;
  void clear_targetposition();
  static const int kTargetPositionFieldNumber = 10;
  private:
  const ::bwapi::data::Point& _internal_targetposition() const;
  public:
  const ::bwapi::data::Point& targetposition() const;
  ::bwapi::data::Point* release_targetposition();
  ::bwapi::data::Point* mutable_targetposition();
  void set_allocated_targetposition(::bwapi::data::Point* targetposition);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 player = 2;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  ::google::protobuf::int32 player() const;
  void set_player(::google::protobuf::int32 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 source = 4;
  void clear_source();
  static const int kSourceFieldNumber = 4;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // double angle = 6;
  void clear_angle();
  static const int kAngleFieldNumber = 6;
  double angle() const;
  void set_angle(double value);

  // double velocityX = 7;
  void clear_velocityx();
  static const int kVelocityXFieldNumber = 7;
  double velocityx() const;
  void set_velocityx(double value);

  // double velocityY = 8;
  void clear_velocityy();
  static const int kVelocityYFieldNumber = 8;
  double velocityy() const;
  void set_velocityy(double value);

  // int32 target = 9;
  void clear_target();
  static const int kTargetFieldNumber = 9;
  ::google::protobuf::int32 target() const;
  void set_target(::google::protobuf::int32 value);

  // int32 removeTimer = 11;
  void clear_removetimer();
  static const int kRemoveTimerFieldNumber = 11;
  ::google::protobuf::int32 removetimer() const;
  void set_removetimer(::google::protobuf::int32 value);

  // bool exists = 12;
  void clear_exists();
  static const int kExistsFieldNumber = 12;
  bool exists() const;
  void set_exists(bool value);

  // @@protoc_insertion_point(class_scope:bwapi.data.Bullet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > isvisible_;
  mutable int _isvisible_cached_byte_size_;
  ::bwapi::data::Point* position_;
  ::bwapi::data::Point* targetposition_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 player_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 source_;
  double angle_;
  double velocityx_;
  double velocityy_;
  ::google::protobuf::int32 target_;
  ::google::protobuf::int32 removetimer_;
  bool exists_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Force : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.Force) */ {
 public:
  Force();
  virtual ~Force();

  Force(const Force& from);

  inline Force& operator=(const Force& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Force(Force&& from) noexcept
    : Force() {
    *this = ::std::move(from);
  }

  inline Force& operator=(Force&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Force& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Force* internal_default_instance() {
    return reinterpret_cast<const Force*>(
               &_Force_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Force* other);
  friend void swap(Force& a, Force& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Force* New() const final {
    return CreateMaybeMessage<Force>(NULL);
  }

  Force* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Force>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Force& from);
  void MergeFrom(const Force& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Force* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 players = 2;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  ::google::protobuf::int32 players(int index) const;
  void set_players(int index, ::google::protobuf::int32 value);
  void add_players(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_players();

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bwapi.data.Force)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > players_;
  mutable int _players_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Game : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bwapi.data.Game) */ {
 public:
  Game();
  virtual ~Game();

  Game(const Game& from);

  inline Game& operator=(const Game& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Game(Game&& from) noexcept
    : Game() {
    *this = ::std::move(from);
  }

  inline Game& operator=(Game&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Game& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Game* internal_default_instance() {
    return reinterpret_cast<const Game*>(
               &_Game_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Game* other);
  friend void swap(Game& a, Game& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Game* New() const final {
    return CreateMaybeMessage<Game>(NULL);
  }

  Game* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Game>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Game& from);
  void MergeFrom(const Game& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Game* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bwapi.data.Player players = 2;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  ::bwapi::data::Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Player >*
      mutable_players();
  const ::bwapi::data::Player& players(int index) const;
  ::bwapi::data::Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Player >&
      players() const;

  // repeated .bwapi.data.Unit units = 3;
  int units_size() const;
  void clear_units();
  static const int kUnitsFieldNumber = 3;
  ::bwapi::data::Unit* mutable_units(int index);
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Unit >*
      mutable_units();
  const ::bwapi::data::Unit& units(int index) const;
  ::bwapi::data::Unit* add_units();
  const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Unit >&
      units() const;

  // repeated .bwapi.data.Region regions = 4;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 4;
  ::bwapi::data::Region* mutable_regions(int index);
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Region >*
      mutable_regions();
  const ::bwapi::data::Region& regions(int index) const;
  ::bwapi::data::Region* add_regions();
  const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Region >&
      regions() const;

  // repeated .bwapi.data.Bullet bullets = 5;
  int bullets_size() const;
  void clear_bullets();
  static const int kBulletsFieldNumber = 5;
  ::bwapi::data::Bullet* mutable_bullets(int index);
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Bullet >*
      mutable_bullets();
  const ::bwapi::data::Bullet& bullets(int index) const;
  ::bwapi::data::Bullet* add_bullets();
  const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Bullet >&
      bullets() const;

  // repeated .bwapi.data.Force forces = 6;
  int forces_size() const;
  void clear_forces();
  static const int kForcesFieldNumber = 6;
  ::bwapi::data::Force* mutable_forces(int index);
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Force >*
      mutable_forces();
  const ::bwapi::data::Force& forces(int index) const;
  ::bwapi::data::Force* add_forces();
  const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Force >&
      forces() const;

  // .bwapi.data.GameData gameData = 1;
  bool has_gamedata() const;
  void clear_gamedata();
  static const int kGameDataFieldNumber = 1;
  private:
  const ::bwapi::data::GameData& _internal_gamedata() const;
  public:
  const ::bwapi::data::GameData& gamedata() const;
  ::bwapi::data::GameData* release_gamedata();
  ::bwapi::data::GameData* mutable_gamedata();
  void set_allocated_gamedata(::bwapi::data::GameData* gamedata);

  // @@protoc_insertion_point(class_scope:bwapi.data.Game)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Player > players_;
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Unit > units_;
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Region > regions_;
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Bullet > bullets_;
  ::google::protobuf::RepeatedPtrField< ::bwapi::data::Force > forces_;
  ::bwapi::data::GameData* gamedata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point

// int32 x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Point::x() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Point.x)
  return x_;
}
inline void Point::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Point.x)
}

// int32 y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Point::y() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Point.y)
  return y_;
}
inline void Point::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Point.y)
}

// int32 scale = 3;
inline void Point::clear_scale() {
  scale_ = 0;
}
inline ::google::protobuf::int32 Point::scale() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Point.scale)
  return scale_;
}
inline void Point::set_scale(::google::protobuf::int32 value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Point.scale)
}

// -------------------------------------------------------------------

// MapData

// .bwapi.data.Point size = 1;
inline bool MapData::has_size() const {
  return this != internal_default_instance() && size_ != NULL;
}
inline void MapData::clear_size() {
  if (GetArenaNoVirtual() == NULL && size_ != NULL) {
    delete size_;
  }
  size_ = NULL;
}
inline const ::bwapi::data::Point& MapData::_internal_size() const {
  return *size_;
}
inline const ::bwapi::data::Point& MapData::size() const {
  const ::bwapi::data::Point* p = size_;
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.size)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* MapData::release_size() {
  // @@protoc_insertion_point(field_release:bwapi.data.MapData.size)
  
  ::bwapi::data::Point* temp = size_;
  size_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* MapData::mutable_size() {
  
  if (size_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    size_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.MapData.size)
  return size_;
}
inline void MapData::set_allocated_size(::bwapi::data::Point* size) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete size_;
  }
  if (size) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      size = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, size, submessage_arena);
    }
    
  } else {
    
  }
  size_ = size;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.MapData.size)
}

// int32 tileset = 2;
inline void MapData::clear_tileset() {
  tileset_ = 0;
}
inline ::google::protobuf::int32 MapData::tileset() const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.tileset)
  return tileset_;
}
inline void MapData::set_tileset(::google::protobuf::int32 value) {
  
  tileset_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.tileset)
}

// string mapHash = 3;
inline void MapData::clear_maphash() {
  maphash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapData::maphash() const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.mapHash)
  return maphash_.GetNoArena();
}
inline void MapData::set_maphash(const ::std::string& value) {
  
  maphash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.mapHash)
}
#if LANG_CXX11
inline void MapData::set_maphash(::std::string&& value) {
  
  maphash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.MapData.mapHash)
}
#endif
inline void MapData::set_maphash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  maphash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.MapData.mapHash)
}
inline void MapData::set_maphash(const char* value, size_t size) {
  
  maphash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.MapData.mapHash)
}
inline ::std::string* MapData::mutable_maphash() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.MapData.mapHash)
  return maphash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapData::release_maphash() {
  // @@protoc_insertion_point(field_release:bwapi.data.MapData.mapHash)
  
  return maphash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapData::set_allocated_maphash(::std::string* maphash) {
  if (maphash != NULL) {
    
  } else {
    
  }
  maphash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maphash);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.MapData.mapHash)
}

// repeated int32 groundHeight = 4;
inline int MapData::groundheight_size() const {
  return groundheight_.size();
}
inline void MapData::clear_groundheight() {
  groundheight_.Clear();
}
inline ::google::protobuf::int32 MapData::groundheight(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.groundHeight)
  return groundheight_.Get(index);
}
inline void MapData::set_groundheight(int index, ::google::protobuf::int32 value) {
  groundheight_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.groundHeight)
}
inline void MapData::add_groundheight(::google::protobuf::int32 value) {
  groundheight_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.groundHeight)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MapData::groundheight() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.groundHeight)
  return groundheight_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MapData::mutable_groundheight() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.groundHeight)
  return &groundheight_;
}

// repeated bool isBuildable = 5;
inline int MapData::isbuildable_size() const {
  return isbuildable_.size();
}
inline void MapData::clear_isbuildable() {
  isbuildable_.Clear();
}
inline bool MapData::isbuildable(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.isBuildable)
  return isbuildable_.Get(index);
}
inline void MapData::set_isbuildable(int index, bool value) {
  isbuildable_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.isBuildable)
}
inline void MapData::add_isbuildable(bool value) {
  isbuildable_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.isBuildable)
}
inline const ::google::protobuf::RepeatedField< bool >&
MapData::isbuildable() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.isBuildable)
  return isbuildable_;
}
inline ::google::protobuf::RepeatedField< bool >*
MapData::mutable_isbuildable() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.isBuildable)
  return &isbuildable_;
}

// repeated bool isVisible = 6;
inline int MapData::isvisible_size() const {
  return isvisible_.size();
}
inline void MapData::clear_isvisible() {
  isvisible_.Clear();
}
inline bool MapData::isvisible(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.isVisible)
  return isvisible_.Get(index);
}
inline void MapData::set_isvisible(int index, bool value) {
  isvisible_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.isVisible)
}
inline void MapData::add_isvisible(bool value) {
  isvisible_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.isVisible)
}
inline const ::google::protobuf::RepeatedField< bool >&
MapData::isvisible() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.isVisible)
  return isvisible_;
}
inline ::google::protobuf::RepeatedField< bool >*
MapData::mutable_isvisible() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.isVisible)
  return &isvisible_;
}

// repeated bool isExplored = 7;
inline int MapData::isexplored_size() const {
  return isexplored_.size();
}
inline void MapData::clear_isexplored() {
  isexplored_.Clear();
}
inline bool MapData::isexplored(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.isExplored)
  return isexplored_.Get(index);
}
inline void MapData::set_isexplored(int index, bool value) {
  isexplored_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.isExplored)
}
inline void MapData::add_isexplored(bool value) {
  isexplored_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.isExplored)
}
inline const ::google::protobuf::RepeatedField< bool >&
MapData::isexplored() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.isExplored)
  return isexplored_;
}
inline ::google::protobuf::RepeatedField< bool >*
MapData::mutable_isexplored() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.isExplored)
  return &isexplored_;
}

// repeated bool hasCreep = 8;
inline int MapData::hascreep_size() const {
  return hascreep_.size();
}
inline void MapData::clear_hascreep() {
  hascreep_.Clear();
}
inline bool MapData::hascreep(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.hasCreep)
  return hascreep_.Get(index);
}
inline void MapData::set_hascreep(int index, bool value) {
  hascreep_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.hasCreep)
}
inline void MapData::add_hascreep(bool value) {
  hascreep_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.hasCreep)
}
inline const ::google::protobuf::RepeatedField< bool >&
MapData::hascreep() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.hasCreep)
  return hascreep_;
}
inline ::google::protobuf::RepeatedField< bool >*
MapData::mutable_hascreep() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.hasCreep)
  return &hascreep_;
}

// repeated bool isOccupied = 9;
inline int MapData::isoccupied_size() const {
  return isoccupied_.size();
}
inline void MapData::clear_isoccupied() {
  isoccupied_.Clear();
}
inline bool MapData::isoccupied(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.isOccupied)
  return isoccupied_.Get(index);
}
inline void MapData::set_isoccupied(int index, bool value) {
  isoccupied_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.isOccupied)
}
inline void MapData::add_isoccupied(bool value) {
  isoccupied_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.isOccupied)
}
inline const ::google::protobuf::RepeatedField< bool >&
MapData::isoccupied() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.isOccupied)
  return isoccupied_;
}
inline ::google::protobuf::RepeatedField< bool >*
MapData::mutable_isoccupied() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.isOccupied)
  return &isoccupied_;
}

// repeated bool isWalkable = 10;
inline int MapData::iswalkable_size() const {
  return iswalkable_.size();
}
inline void MapData::clear_iswalkable() {
  iswalkable_.Clear();
}
inline bool MapData::iswalkable(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.isWalkable)
  return iswalkable_.Get(index);
}
inline void MapData::set_iswalkable(int index, bool value) {
  iswalkable_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.isWalkable)
}
inline void MapData::add_iswalkable(bool value) {
  iswalkable_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.isWalkable)
}
inline const ::google::protobuf::RepeatedField< bool >&
MapData::iswalkable() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.isWalkable)
  return iswalkable_;
}
inline ::google::protobuf::RepeatedField< bool >*
MapData::mutable_iswalkable() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.isWalkable)
  return &iswalkable_;
}

// repeated uint32 mapTileRegionId = 11;
inline int MapData::maptileregionid_size() const {
  return maptileregionid_.size();
}
inline void MapData::clear_maptileregionid() {
  maptileregionid_.Clear();
}
inline ::google::protobuf::uint32 MapData::maptileregionid(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.mapTileRegionId)
  return maptileregionid_.Get(index);
}
inline void MapData::set_maptileregionid(int index, ::google::protobuf::uint32 value) {
  maptileregionid_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.mapTileRegionId)
}
inline void MapData::add_maptileregionid(::google::protobuf::uint32 value) {
  maptileregionid_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.mapTileRegionId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MapData::maptileregionid() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.mapTileRegionId)
  return maptileregionid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MapData::mutable_maptileregionid() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.mapTileRegionId)
  return &maptileregionid_;
}

// repeated uint32 mapSplitTilesMiniTileMask = 12;
inline int MapData::mapsplittilesminitilemask_size() const {
  return mapsplittilesminitilemask_.size();
}
inline void MapData::clear_mapsplittilesminitilemask() {
  mapsplittilesminitilemask_.Clear();
}
inline ::google::protobuf::uint32 MapData::mapsplittilesminitilemask(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.mapSplitTilesMiniTileMask)
  return mapsplittilesminitilemask_.Get(index);
}
inline void MapData::set_mapsplittilesminitilemask(int index, ::google::protobuf::uint32 value) {
  mapsplittilesminitilemask_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.mapSplitTilesMiniTileMask)
}
inline void MapData::add_mapsplittilesminitilemask(::google::protobuf::uint32 value) {
  mapsplittilesminitilemask_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.mapSplitTilesMiniTileMask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MapData::mapsplittilesminitilemask() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.mapSplitTilesMiniTileMask)
  return mapsplittilesminitilemask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MapData::mutable_mapsplittilesminitilemask() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.mapSplitTilesMiniTileMask)
  return &mapsplittilesminitilemask_;
}

// repeated uint32 mapSplitTilesRegion1 = 13;
inline int MapData::mapsplittilesregion1_size() const {
  return mapsplittilesregion1_.size();
}
inline void MapData::clear_mapsplittilesregion1() {
  mapsplittilesregion1_.Clear();
}
inline ::google::protobuf::uint32 MapData::mapsplittilesregion1(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.mapSplitTilesRegion1)
  return mapsplittilesregion1_.Get(index);
}
inline void MapData::set_mapsplittilesregion1(int index, ::google::protobuf::uint32 value) {
  mapsplittilesregion1_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.mapSplitTilesRegion1)
}
inline void MapData::add_mapsplittilesregion1(::google::protobuf::uint32 value) {
  mapsplittilesregion1_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.mapSplitTilesRegion1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MapData::mapsplittilesregion1() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.mapSplitTilesRegion1)
  return mapsplittilesregion1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MapData::mutable_mapsplittilesregion1() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.mapSplitTilesRegion1)
  return &mapsplittilesregion1_;
}

// repeated uint32 mapSplitTilesRegion2 = 14;
inline int MapData::mapsplittilesregion2_size() const {
  return mapsplittilesregion2_.size();
}
inline void MapData::clear_mapsplittilesregion2() {
  mapsplittilesregion2_.Clear();
}
inline ::google::protobuf::uint32 MapData::mapsplittilesregion2(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.MapData.mapSplitTilesRegion2)
  return mapsplittilesregion2_.Get(index);
}
inline void MapData::set_mapsplittilesregion2(int index, ::google::protobuf::uint32 value) {
  mapsplittilesregion2_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.MapData.mapSplitTilesRegion2)
}
inline void MapData::add_mapsplittilesregion2(::google::protobuf::uint32 value) {
  mapsplittilesregion2_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.MapData.mapSplitTilesRegion2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MapData::mapsplittilesregion2() const {
  // @@protoc_insertion_point(field_list:bwapi.data.MapData.mapSplitTilesRegion2)
  return mapsplittilesregion2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MapData::mutable_mapsplittilesregion2() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.MapData.mapSplitTilesRegion2)
  return &mapsplittilesregion2_;
}

// -------------------------------------------------------------------

// GameData

// int32 apiVersion = 1;
inline void GameData::clear_apiversion() {
  apiversion_ = 0;
}
inline ::google::protobuf::int32 GameData::apiversion() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.apiVersion)
  return apiversion_;
}
inline void GameData::set_apiversion(::google::protobuf::int32 value) {
  
  apiversion_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.apiVersion)
}

// string engine = 2;
inline void GameData::clear_engine() {
  engine_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameData::engine() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.engine)
  return engine_.GetNoArena();
}
inline void GameData::set_engine(const ::std::string& value) {
  
  engine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.engine)
}
#if LANG_CXX11
inline void GameData::set_engine(::std::string&& value) {
  
  engine_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.GameData.engine)
}
#endif
inline void GameData::set_engine(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  engine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.GameData.engine)
}
inline void GameData::set_engine(const char* value, size_t size) {
  
  engine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.GameData.engine)
}
inline ::std::string* GameData::mutable_engine() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.engine)
  return engine_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameData::release_engine() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.engine)
  
  return engine_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameData::set_allocated_engine(::std::string* engine) {
  if (engine != NULL) {
    
  } else {
    
  }
  engine_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), engine);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.engine)
}

// string engineVersion = 3;
inline void GameData::clear_engineversion() {
  engineversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameData::engineversion() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.engineVersion)
  return engineversion_.GetNoArena();
}
inline void GameData::set_engineversion(const ::std::string& value) {
  
  engineversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.engineVersion)
}
#if LANG_CXX11
inline void GameData::set_engineversion(::std::string&& value) {
  
  engineversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.GameData.engineVersion)
}
#endif
inline void GameData::set_engineversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  engineversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.GameData.engineVersion)
}
inline void GameData::set_engineversion(const char* value, size_t size) {
  
  engineversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.GameData.engineVersion)
}
inline ::std::string* GameData::mutable_engineversion() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.engineVersion)
  return engineversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameData::release_engineversion() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.engineVersion)
  
  return engineversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameData::set_allocated_engineversion(::std::string* engineversion) {
  if (engineversion != NULL) {
    
  } else {
    
  }
  engineversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), engineversion);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.engineVersion)
}

// bool tournament = 4;
inline void GameData::clear_tournament() {
  tournament_ = false;
}
inline bool GameData::tournament() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.tournament)
  return tournament_;
}
inline void GameData::set_tournament(bool value) {
  
  tournament_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.tournament)
}

// int32 gameType = 5;
inline void GameData::clear_gametype() {
  gametype_ = 0;
}
inline ::google::protobuf::int32 GameData::gametype() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.gameType)
  return gametype_;
}
inline void GameData::set_gametype(::google::protobuf::int32 value) {
  
  gametype_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.gameType)
}

// int32 frameCount = 6;
inline void GameData::clear_framecount() {
  framecount_ = 0;
}
inline ::google::protobuf::int32 GameData::framecount() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.frameCount)
  return framecount_;
}
inline void GameData::set_framecount(::google::protobuf::int32 value) {
  
  framecount_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.frameCount)
}

// int32 latencyFrames = 7;
inline void GameData::clear_latencyframes() {
  latencyframes_ = 0;
}
inline ::google::protobuf::int32 GameData::latencyframes() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.latencyFrames)
  return latencyframes_;
}
inline void GameData::set_latencyframes(::google::protobuf::int32 value) {
  
  latencyframes_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.latencyFrames)
}

// int32 turnSize = 8;
inline void GameData::clear_turnsize() {
  turnsize_ = 0;
}
inline ::google::protobuf::int32 GameData::turnsize() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.turnSize)
  return turnsize_;
}
inline void GameData::set_turnsize(::google::protobuf::int32 value) {
  
  turnsize_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.turnSize)
}

// int32 gameSpeed = 9;
inline void GameData::clear_gamespeed() {
  gamespeed_ = 0;
}
inline ::google::protobuf::int32 GameData::gamespeed() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.gameSpeed)
  return gamespeed_;
}
inline void GameData::set_gamespeed(::google::protobuf::int32 value) {
  
  gamespeed_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.gameSpeed)
}

// int32 frameSkip = 10;
inline void GameData::clear_frameskip() {
  frameskip_ = 0;
}
inline ::google::protobuf::int32 GameData::frameskip() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.frameSkip)
  return frameskip_;
}
inline void GameData::set_frameskip(::google::protobuf::int32 value) {
  
  frameskip_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.frameSkip)
}

// int32 remainingLatencyFrames = 11;
inline void GameData::clear_remaininglatencyframes() {
  remaininglatencyframes_ = 0;
}
inline ::google::protobuf::int32 GameData::remaininglatencyframes() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.remainingLatencyFrames)
  return remaininglatencyframes_;
}
inline void GameData::set_remaininglatencyframes(::google::protobuf::int32 value) {
  
  remaininglatencyframes_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.remainingLatencyFrames)
}

// int32 lastEventTime = 12;
inline void GameData::clear_lasteventtime() {
  lasteventtime_ = 0;
}
inline ::google::protobuf::int32 GameData::lasteventtime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.lastEventTime)
  return lasteventtime_;
}
inline void GameData::set_lasteventtime(::google::protobuf::int32 value) {
  
  lasteventtime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.lastEventTime)
}

// repeated int32 replayVisionPlayers = 13;
inline int GameData::replayvisionplayers_size() const {
  return replayvisionplayers_.size();
}
inline void GameData::clear_replayvisionplayers() {
  replayvisionplayers_.Clear();
}
inline ::google::protobuf::int32 GameData::replayvisionplayers(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.replayVisionPlayers)
  return replayvisionplayers_.Get(index);
}
inline void GameData::set_replayvisionplayers(int index, ::google::protobuf::int32 value) {
  replayvisionplayers_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.replayVisionPlayers)
}
inline void GameData::add_replayvisionplayers(::google::protobuf::int32 value) {
  replayvisionplayers_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.GameData.replayVisionPlayers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameData::replayvisionplayers() const {
  // @@protoc_insertion_point(field_list:bwapi.data.GameData.replayVisionPlayers)
  return replayvisionplayers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameData::mutable_replayvisionplayers() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.GameData.replayVisionPlayers)
  return &replayvisionplayers_;
}

// float latencyTime = 14;
inline void GameData::clear_latencytime() {
  latencytime_ = 0;
}
inline float GameData::latencytime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.latencyTime)
  return latencytime_;
}
inline void GameData::set_latencytime(float value) {
  
  latencytime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.latencyTime)
}

// float remainingLatencyTime = 15;
inline void GameData::clear_remaininglatencytime() {
  remaininglatencytime_ = 0;
}
inline float GameData::remaininglatencytime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.remainingLatencyTime)
  return remaininglatencytime_;
}
inline void GameData::set_remaininglatencytime(float value) {
  
  remaininglatencytime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.remainingLatencyTime)
}

// float elapsedTime = 16;
inline void GameData::clear_elapsedtime() {
  elapsedtime_ = 0;
}
inline float GameData::elapsedtime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.elapsedTime)
  return elapsedtime_;
}
inline void GameData::set_elapsedtime(float value) {
  
  elapsedtime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.elapsedTime)
}

// float millisecondsPerFrame = 17;
inline void GameData::clear_millisecondsperframe() {
  millisecondsperframe_ = 0;
}
inline float GameData::millisecondsperframe() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.millisecondsPerFrame)
  return millisecondsperframe_;
}
inline void GameData::set_millisecondsperframe(float value) {
  
  millisecondsperframe_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.millisecondsPerFrame)
}

// float averageFPS = 18;
inline void GameData::clear_averagefps() {
  averagefps_ = 0;
}
inline float GameData::averagefps() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.averageFPS)
  return averagefps_;
}
inline void GameData::set_averagefps(float value) {
  
  averagefps_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.averageFPS)
}

// int32 countdownTimer = 19;
inline void GameData::clear_countdowntimer() {
  countdowntimer_ = 0;
}
inline ::google::protobuf::int32 GameData::countdowntimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.countdownTimer)
  return countdowntimer_;
}
inline void GameData::set_countdowntimer(::google::protobuf::int32 value) {
  
  countdowntimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.countdownTimer)
}

// bool isPaused = 20;
inline void GameData::clear_ispaused() {
  ispaused_ = false;
}
inline bool GameData::ispaused() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.isPaused)
  return ispaused_;
}
inline void GameData::set_ispaused(bool value) {
  
  ispaused_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.isPaused)
}

// bool isInGame = 21;
inline void GameData::clear_isingame() {
  isingame_ = false;
}
inline bool GameData::isingame() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.isInGame)
  return isingame_;
}
inline void GameData::set_isingame(bool value) {
  
  isingame_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.isInGame)
}

// bool isMultiplayer = 22;
inline void GameData::clear_ismultiplayer() {
  ismultiplayer_ = false;
}
inline bool GameData::ismultiplayer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.isMultiplayer)
  return ismultiplayer_;
}
inline void GameData::set_ismultiplayer(bool value) {
  
  ismultiplayer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.isMultiplayer)
}

// bool isBattleNet = 23;
inline void GameData::clear_isbattlenet() {
  isbattlenet_ = false;
}
inline bool GameData::isbattlenet() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.isBattleNet)
  return isbattlenet_;
}
inline void GameData::set_isbattlenet(bool value) {
  
  isbattlenet_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.isBattleNet)
}

// bool isReplay = 24;
inline void GameData::clear_isreplay() {
  isreplay_ = false;
}
inline bool GameData::isreplay() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.isReplay)
  return isreplay_;
}
inline void GameData::set_isreplay(bool value) {
  
  isreplay_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.isReplay)
}

// bool clientUnitSelection = 25;
inline void GameData::clear_clientunitselection() {
  clientunitselection_ = false;
}
inline bool GameData::clientunitselection() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.clientUnitSelection)
  return clientunitselection_;
}
inline void GameData::set_clientunitselection(bool value) {
  
  clientunitselection_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.clientUnitSelection)
}

// bool hasGUI = 26;
inline void GameData::clear_hasgui() {
  hasgui_ = false;
}
inline bool GameData::hasgui() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.hasGUI)
  return hasgui_;
}
inline void GameData::set_hasgui(bool value) {
  
  hasgui_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.hasGUI)
}

// string mapPath = 27;
inline void GameData::clear_mappath() {
  mappath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameData::mappath() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.mapPath)
  return mappath_.GetNoArena();
}
inline void GameData::set_mappath(const ::std::string& value) {
  
  mappath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.mapPath)
}
#if LANG_CXX11
inline void GameData::set_mappath(::std::string&& value) {
  
  mappath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.GameData.mapPath)
}
#endif
inline void GameData::set_mappath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mappath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.GameData.mapPath)
}
inline void GameData::set_mappath(const char* value, size_t size) {
  
  mappath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.GameData.mapPath)
}
inline ::std::string* GameData::mutable_mappath() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.mapPath)
  return mappath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameData::release_mappath() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.mapPath)
  
  return mappath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameData::set_allocated_mappath(::std::string* mappath) {
  if (mappath != NULL) {
    
  } else {
    
  }
  mappath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mappath);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.mapPath)
}

// string mapName = 28;
inline void GameData::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameData::mapname() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.mapName)
  return mapname_.GetNoArena();
}
inline void GameData::set_mapname(const ::std::string& value) {
  
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.mapName)
}
#if LANG_CXX11
inline void GameData::set_mapname(::std::string&& value) {
  
  mapname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.GameData.mapName)
}
#endif
inline void GameData::set_mapname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.GameData.mapName)
}
inline void GameData::set_mapname(const char* value, size_t size) {
  
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.GameData.mapName)
}
inline ::std::string* GameData::mutable_mapname() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.mapName)
  return mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameData::release_mapname() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.mapName)
  
  return mapname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameData::set_allocated_mapname(::std::string* mapname) {
  if (mapname != NULL) {
    
  } else {
    
  }
  mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.mapName)
}

// string mapFileName = 29;
inline void GameData::clear_mapfilename() {
  mapfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameData::mapfilename() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.mapFileName)
  return mapfilename_.GetNoArena();
}
inline void GameData::set_mapfilename(const ::std::string& value) {
  
  mapfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.mapFileName)
}
#if LANG_CXX11
inline void GameData::set_mapfilename(::std::string&& value) {
  
  mapfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.GameData.mapFileName)
}
#endif
inline void GameData::set_mapfilename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mapfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.GameData.mapFileName)
}
inline void GameData::set_mapfilename(const char* value, size_t size) {
  
  mapfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.GameData.mapFileName)
}
inline ::std::string* GameData::mutable_mapfilename() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.mapFileName)
  return mapfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameData::release_mapfilename() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.mapFileName)
  
  return mapfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameData::set_allocated_mapfilename(::std::string* mapfilename) {
  if (mapfilename != NULL) {
    
  } else {
    
  }
  mapfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapfilename);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.mapFileName)
}

// string gameName = 30;
inline void GameData::clear_gamename() {
  gamename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameData::gamename() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.gameName)
  return gamename_.GetNoArena();
}
inline void GameData::set_gamename(const ::std::string& value) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.gameName)
}
#if LANG_CXX11
inline void GameData::set_gamename(::std::string&& value) {
  
  gamename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.GameData.gameName)
}
#endif
inline void GameData::set_gamename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.GameData.gameName)
}
inline void GameData::set_gamename(const char* value, size_t size) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.GameData.gameName)
}
inline ::std::string* GameData::mutable_gamename() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.gameName)
  return gamename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameData::release_gamename() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.gameName)
  
  return gamename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameData::set_allocated_gamename(::std::string* gamename) {
  if (gamename != NULL) {
    
  } else {
    
  }
  gamename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamename);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.gameName)
}

// string randomSeed = 31;
inline void GameData::clear_randomseed() {
  randomseed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameData::randomseed() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.randomSeed)
  return randomseed_.GetNoArena();
}
inline void GameData::set_randomseed(const ::std::string& value) {
  
  randomseed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.randomSeed)
}
#if LANG_CXX11
inline void GameData::set_randomseed(::std::string&& value) {
  
  randomseed_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.GameData.randomSeed)
}
#endif
inline void GameData::set_randomseed(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  randomseed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.GameData.randomSeed)
}
inline void GameData::set_randomseed(const char* value, size_t size) {
  
  randomseed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.GameData.randomSeed)
}
inline ::std::string* GameData::mutable_randomseed() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.randomSeed)
  return randomseed_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameData::release_randomseed() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.randomSeed)
  
  return randomseed_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameData::set_allocated_randomseed(::std::string* randomseed) {
  if (randomseed != NULL) {
    
  } else {
    
  }
  randomseed_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), randomseed);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.randomSeed)
}

// repeated .bwapi.data.Point startPositions = 32;
inline int GameData::startpositions_size() const {
  return startpositions_.size();
}
inline void GameData::clear_startpositions() {
  startpositions_.Clear();
}
inline ::bwapi::data::Point* GameData::mutable_startpositions(int index) {
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.startPositions)
  return startpositions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bwapi::data::Point >*
GameData::mutable_startpositions() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.GameData.startPositions)
  return &startpositions_;
}
inline const ::bwapi::data::Point& GameData::startpositions(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.startPositions)
  return startpositions_.Get(index);
}
inline ::bwapi::data::Point* GameData::add_startpositions() {
  // @@protoc_insertion_point(field_add:bwapi.data.GameData.startPositions)
  return startpositions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Point >&
GameData::startpositions() const {
  // @@protoc_insertion_point(field_list:bwapi.data.GameData.startPositions)
  return startpositions_;
}

// repeated int32 regions = 33;
inline int GameData::regions_size() const {
  return regions_.size();
}
inline void GameData::clear_regions() {
  regions_.Clear();
}
inline ::google::protobuf::int32 GameData::regions(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.regions)
  return regions_.Get(index);
}
inline void GameData::set_regions(int index, ::google::protobuf::int32 value) {
  regions_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.regions)
}
inline void GameData::add_regions(::google::protobuf::int32 value) {
  regions_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.GameData.regions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameData::regions() const {
  // @@protoc_insertion_point(field_list:bwapi.data.GameData.regions)
  return regions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameData::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.GameData.regions)
  return &regions_;
}

// int32 player = 34;
inline void GameData::clear_player() {
  player_ = 0;
}
inline ::google::protobuf::int32 GameData::player() const {
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.player)
  return player_;
}
inline void GameData::set_player(::google::protobuf::int32 value) {
  
  player_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.GameData.player)
}

// .bwapi.data.Point screenSize = 35;
inline bool GameData::has_screensize() const {
  return this != internal_default_instance() && screensize_ != NULL;
}
inline void GameData::clear_screensize() {
  if (GetArenaNoVirtual() == NULL && screensize_ != NULL) {
    delete screensize_;
  }
  screensize_ = NULL;
}
inline const ::bwapi::data::Point& GameData::_internal_screensize() const {
  return *screensize_;
}
inline const ::bwapi::data::Point& GameData::screensize() const {
  const ::bwapi::data::Point* p = screensize_;
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.screenSize)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* GameData::release_screensize() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.screenSize)
  
  ::bwapi::data::Point* temp = screensize_;
  screensize_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* GameData::mutable_screensize() {
  
  if (screensize_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    screensize_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.screenSize)
  return screensize_;
}
inline void GameData::set_allocated_screensize(::bwapi::data::Point* screensize) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete screensize_;
  }
  if (screensize) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      screensize = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, screensize, submessage_arena);
    }
    
  } else {
    
  }
  screensize_ = screensize;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.screenSize)
}

// .bwapi.data.Point screenPosition = 36;
inline bool GameData::has_screenposition() const {
  return this != internal_default_instance() && screenposition_ != NULL;
}
inline void GameData::clear_screenposition() {
  if (GetArenaNoVirtual() == NULL && screenposition_ != NULL) {
    delete screenposition_;
  }
  screenposition_ = NULL;
}
inline const ::bwapi::data::Point& GameData::_internal_screenposition() const {
  return *screenposition_;
}
inline const ::bwapi::data::Point& GameData::screenposition() const {
  const ::bwapi::data::Point* p = screenposition_;
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.screenPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* GameData::release_screenposition() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.screenPosition)
  
  ::bwapi::data::Point* temp = screenposition_;
  screenposition_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* GameData::mutable_screenposition() {
  
  if (screenposition_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    screenposition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.screenPosition)
  return screenposition_;
}
inline void GameData::set_allocated_screenposition(::bwapi::data::Point* screenposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete screenposition_;
  }
  if (screenposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      screenposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, screenposition, submessage_arena);
    }
    
  } else {
    
  }
  screenposition_ = screenposition;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.screenPosition)
}

// .bwapi.data.MapData map = 37;
inline bool GameData::has_map() const {
  return this != internal_default_instance() && map_ != NULL;
}
inline void GameData::clear_map() {
  if (GetArenaNoVirtual() == NULL && map_ != NULL) {
    delete map_;
  }
  map_ = NULL;
}
inline const ::bwapi::data::MapData& GameData::_internal_map() const {
  return *map_;
}
inline const ::bwapi::data::MapData& GameData::map() const {
  const ::bwapi::data::MapData* p = map_;
  // @@protoc_insertion_point(field_get:bwapi.data.GameData.map)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::MapData*>(
      &::bwapi::data::_MapData_default_instance_);
}
inline ::bwapi::data::MapData* GameData::release_map() {
  // @@protoc_insertion_point(field_release:bwapi.data.GameData.map)
  
  ::bwapi::data::MapData* temp = map_;
  map_ = NULL;
  return temp;
}
inline ::bwapi::data::MapData* GameData::mutable_map() {
  
  if (map_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::MapData>(GetArenaNoVirtual());
    map_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.GameData.map)
  return map_;
}
inline void GameData::set_allocated_map(::bwapi::data::MapData* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete map_;
  }
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    
  } else {
    
  }
  map_ = map;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.GameData.map)
}

// -------------------------------------------------------------------

// Player

// int32 id = 1;
inline void Player::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Player::id() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.id)
  return id_;
}
inline void Player::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.id)
}

// string name = 2;
inline void Player::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Player::name() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.name)
  return name_.GetNoArena();
}
inline void Player::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.name)
}
#if LANG_CXX11
inline void Player::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.Player.name)
}
#endif
inline void Player::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.Player.name)
}
inline void Player::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.Player.name)
}
inline ::std::string* Player::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.Player.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Player::release_name() {
  // @@protoc_insertion_point(field_release:bwapi.data.Player.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Player::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Player.name)
}

// int32 race = 3;
inline void Player::clear_race() {
  race_ = 0;
}
inline ::google::protobuf::int32 Player::race() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.race)
  return race_;
}
inline void Player::set_race(::google::protobuf::int32 value) {
  
  race_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.race)
}

// int32 type = 4;
inline void Player::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Player::type() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.type)
  return type_;
}
inline void Player::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.type)
}

// int32 force = 5;
inline void Player::clear_force() {
  force_ = 0;
}
inline ::google::protobuf::int32 Player::force() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.force)
  return force_;
}
inline void Player::set_force(::google::protobuf::int32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.force)
}

// repeated bool isAlly = 6;
inline int Player::isally_size() const {
  return isally_.size();
}
inline void Player::clear_isally() {
  isally_.Clear();
}
inline bool Player::isally(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isAlly)
  return isally_.Get(index);
}
inline void Player::set_isally(int index, bool value) {
  isally_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isAlly)
}
inline void Player::add_isally(bool value) {
  isally_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.isAlly)
}
inline const ::google::protobuf::RepeatedField< bool >&
Player::isally() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.isAlly)
  return isally_;
}
inline ::google::protobuf::RepeatedField< bool >*
Player::mutable_isally() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.isAlly)
  return &isally_;
}

// repeated bool isEnemy = 7;
inline int Player::isenemy_size() const {
  return isenemy_.size();
}
inline void Player::clear_isenemy() {
  isenemy_.Clear();
}
inline bool Player::isenemy(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isEnemy)
  return isenemy_.Get(index);
}
inline void Player::set_isenemy(int index, bool value) {
  isenemy_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isEnemy)
}
inline void Player::add_isenemy(bool value) {
  isenemy_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.isEnemy)
}
inline const ::google::protobuf::RepeatedField< bool >&
Player::isenemy() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.isEnemy)
  return isenemy_;
}
inline ::google::protobuf::RepeatedField< bool >*
Player::mutable_isenemy() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.isEnemy)
  return &isenemy_;
}

// bool isNeutral = 8;
inline void Player::clear_isneutral() {
  isneutral_ = false;
}
inline bool Player::isneutral() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isNeutral)
  return isneutral_;
}
inline void Player::set_isneutral(bool value) {
  
  isneutral_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isNeutral)
}

// int32 startLocationX = 9;
inline void Player::clear_startlocationx() {
  startlocationx_ = 0;
}
inline ::google::protobuf::int32 Player::startlocationx() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.startLocationX)
  return startlocationx_;
}
inline void Player::set_startlocationx(::google::protobuf::int32 value) {
  
  startlocationx_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.startLocationX)
}

// int32 startLocationY = 10;
inline void Player::clear_startlocationy() {
  startlocationy_ = 0;
}
inline ::google::protobuf::int32 Player::startlocationy() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.startLocationY)
  return startlocationy_;
}
inline void Player::set_startlocationy(::google::protobuf::int32 value) {
  
  startlocationy_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.startLocationY)
}

// bool isVictorious = 11;
inline void Player::clear_isvictorious() {
  isvictorious_ = false;
}
inline bool Player::isvictorious() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isVictorious)
  return isvictorious_;
}
inline void Player::set_isvictorious(bool value) {
  
  isvictorious_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isVictorious)
}

// bool isDefeated = 12;
inline void Player::clear_isdefeated() {
  isdefeated_ = false;
}
inline bool Player::isdefeated() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isDefeated)
  return isdefeated_;
}
inline void Player::set_isdefeated(bool value) {
  
  isdefeated_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isDefeated)
}

// bool leftGame = 13;
inline void Player::clear_leftgame() {
  leftgame_ = false;
}
inline bool Player::leftgame() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.leftGame)
  return leftgame_;
}
inline void Player::set_leftgame(bool value) {
  
  leftgame_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.leftGame)
}

// bool isParticipating = 14;
inline void Player::clear_isparticipating() {
  isparticipating_ = false;
}
inline bool Player::isparticipating() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isParticipating)
  return isparticipating_;
}
inline void Player::set_isparticipating(bool value) {
  
  isparticipating_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isParticipating)
}

// int32 minerals = 15;
inline void Player::clear_minerals() {
  minerals_ = 0;
}
inline ::google::protobuf::int32 Player::minerals() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.minerals)
  return minerals_;
}
inline void Player::set_minerals(::google::protobuf::int32 value) {
  
  minerals_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.minerals)
}

// int32 gas = 16;
inline void Player::clear_gas() {
  gas_ = 0;
}
inline ::google::protobuf::int32 Player::gas() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.gas)
  return gas_;
}
inline void Player::set_gas(::google::protobuf::int32 value) {
  
  gas_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.gas)
}

// int32 gatheredMinerals = 17;
inline void Player::clear_gatheredminerals() {
  gatheredminerals_ = 0;
}
inline ::google::protobuf::int32 Player::gatheredminerals() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.gatheredMinerals)
  return gatheredminerals_;
}
inline void Player::set_gatheredminerals(::google::protobuf::int32 value) {
  
  gatheredminerals_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.gatheredMinerals)
}

// int32 gatheredGas = 18;
inline void Player::clear_gatheredgas() {
  gatheredgas_ = 0;
}
inline ::google::protobuf::int32 Player::gatheredgas() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.gatheredGas)
  return gatheredgas_;
}
inline void Player::set_gatheredgas(::google::protobuf::int32 value) {
  
  gatheredgas_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.gatheredGas)
}

// int32 repairedMinerals = 19;
inline void Player::clear_repairedminerals() {
  repairedminerals_ = 0;
}
inline ::google::protobuf::int32 Player::repairedminerals() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.repairedMinerals)
  return repairedminerals_;
}
inline void Player::set_repairedminerals(::google::protobuf::int32 value) {
  
  repairedminerals_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.repairedMinerals)
}

// int32 repairedGas = 20;
inline void Player::clear_repairedgas() {
  repairedgas_ = 0;
}
inline ::google::protobuf::int32 Player::repairedgas() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.repairedGas)
  return repairedgas_;
}
inline void Player::set_repairedgas(::google::protobuf::int32 value) {
  
  repairedgas_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.repairedGas)
}

// int32 refundedMinerals = 21;
inline void Player::clear_refundedminerals() {
  refundedminerals_ = 0;
}
inline ::google::protobuf::int32 Player::refundedminerals() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.refundedMinerals)
  return refundedminerals_;
}
inline void Player::set_refundedminerals(::google::protobuf::int32 value) {
  
  refundedminerals_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.refundedMinerals)
}

// int32 refundedGas = 22;
inline void Player::clear_refundedgas() {
  refundedgas_ = 0;
}
inline ::google::protobuf::int32 Player::refundedgas() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.refundedGas)
  return refundedgas_;
}
inline void Player::set_refundedgas(::google::protobuf::int32 value) {
  
  refundedgas_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.refundedGas)
}

// repeated int32 supplyTotal = 23;
inline int Player::supplytotal_size() const {
  return supplytotal_.size();
}
inline void Player::clear_supplytotal() {
  supplytotal_.Clear();
}
inline ::google::protobuf::int32 Player::supplytotal(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.supplyTotal)
  return supplytotal_.Get(index);
}
inline void Player::set_supplytotal(int index, ::google::protobuf::int32 value) {
  supplytotal_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.supplyTotal)
}
inline void Player::add_supplytotal(::google::protobuf::int32 value) {
  supplytotal_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.supplyTotal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::supplytotal() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.supplyTotal)
  return supplytotal_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_supplytotal() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.supplyTotal)
  return &supplytotal_;
}

// repeated int32 supplyUsed = 24;
inline int Player::supplyused_size() const {
  return supplyused_.size();
}
inline void Player::clear_supplyused() {
  supplyused_.Clear();
}
inline ::google::protobuf::int32 Player::supplyused(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.supplyUsed)
  return supplyused_.Get(index);
}
inline void Player::set_supplyused(int index, ::google::protobuf::int32 value) {
  supplyused_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.supplyUsed)
}
inline void Player::add_supplyused(::google::protobuf::int32 value) {
  supplyused_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.supplyUsed)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::supplyused() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.supplyUsed)
  return supplyused_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_supplyused() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.supplyUsed)
  return &supplyused_;
}

// repeated int32 allUnitCount = 25;
inline int Player::allunitcount_size() const {
  return allunitcount_.size();
}
inline void Player::clear_allunitcount() {
  allunitcount_.Clear();
}
inline ::google::protobuf::int32 Player::allunitcount(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.allUnitCount)
  return allunitcount_.Get(index);
}
inline void Player::set_allunitcount(int index, ::google::protobuf::int32 value) {
  allunitcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.allUnitCount)
}
inline void Player::add_allunitcount(::google::protobuf::int32 value) {
  allunitcount_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.allUnitCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::allunitcount() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.allUnitCount)
  return allunitcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_allunitcount() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.allUnitCount)
  return &allunitcount_;
}

// repeated int32 visibleUnitCount = 26;
inline int Player::visibleunitcount_size() const {
  return visibleunitcount_.size();
}
inline void Player::clear_visibleunitcount() {
  visibleunitcount_.Clear();
}
inline ::google::protobuf::int32 Player::visibleunitcount(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.visibleUnitCount)
  return visibleunitcount_.Get(index);
}
inline void Player::set_visibleunitcount(int index, ::google::protobuf::int32 value) {
  visibleunitcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.visibleUnitCount)
}
inline void Player::add_visibleunitcount(::google::protobuf::int32 value) {
  visibleunitcount_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.visibleUnitCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::visibleunitcount() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.visibleUnitCount)
  return visibleunitcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_visibleunitcount() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.visibleUnitCount)
  return &visibleunitcount_;
}

// repeated int32 completedUnitCount = 27;
inline int Player::completedunitcount_size() const {
  return completedunitcount_.size();
}
inline void Player::clear_completedunitcount() {
  completedunitcount_.Clear();
}
inline ::google::protobuf::int32 Player::completedunitcount(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.completedUnitCount)
  return completedunitcount_.Get(index);
}
inline void Player::set_completedunitcount(int index, ::google::protobuf::int32 value) {
  completedunitcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.completedUnitCount)
}
inline void Player::add_completedunitcount(::google::protobuf::int32 value) {
  completedunitcount_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.completedUnitCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::completedunitcount() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.completedUnitCount)
  return completedunitcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_completedunitcount() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.completedUnitCount)
  return &completedunitcount_;
}

// repeated int32 deadUnitCount = 28;
inline int Player::deadunitcount_size() const {
  return deadunitcount_.size();
}
inline void Player::clear_deadunitcount() {
  deadunitcount_.Clear();
}
inline ::google::protobuf::int32 Player::deadunitcount(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.deadUnitCount)
  return deadunitcount_.Get(index);
}
inline void Player::set_deadunitcount(int index, ::google::protobuf::int32 value) {
  deadunitcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.deadUnitCount)
}
inline void Player::add_deadunitcount(::google::protobuf::int32 value) {
  deadunitcount_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.deadUnitCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::deadunitcount() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.deadUnitCount)
  return deadunitcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_deadunitcount() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.deadUnitCount)
  return &deadunitcount_;
}

// repeated int32 killedUnitCount = 29;
inline int Player::killedunitcount_size() const {
  return killedunitcount_.size();
}
inline void Player::clear_killedunitcount() {
  killedunitcount_.Clear();
}
inline ::google::protobuf::int32 Player::killedunitcount(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.killedUnitCount)
  return killedunitcount_.Get(index);
}
inline void Player::set_killedunitcount(int index, ::google::protobuf::int32 value) {
  killedunitcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.killedUnitCount)
}
inline void Player::add_killedunitcount(::google::protobuf::int32 value) {
  killedunitcount_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.killedUnitCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::killedunitcount() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.killedUnitCount)
  return killedunitcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_killedunitcount() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.killedUnitCount)
  return &killedunitcount_;
}

// repeated int32 upgradeLevel = 30;
inline int Player::upgradelevel_size() const {
  return upgradelevel_.size();
}
inline void Player::clear_upgradelevel() {
  upgradelevel_.Clear();
}
inline ::google::protobuf::int32 Player::upgradelevel(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.upgradeLevel)
  return upgradelevel_.Get(index);
}
inline void Player::set_upgradelevel(int index, ::google::protobuf::int32 value) {
  upgradelevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.upgradeLevel)
}
inline void Player::add_upgradelevel(::google::protobuf::int32 value) {
  upgradelevel_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.upgradeLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::upgradelevel() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.upgradeLevel)
  return upgradelevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_upgradelevel() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.upgradeLevel)
  return &upgradelevel_;
}

// repeated bool hasResearched = 31;
inline int Player::hasresearched_size() const {
  return hasresearched_.size();
}
inline void Player::clear_hasresearched() {
  hasresearched_.Clear();
}
inline bool Player::hasresearched(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.hasResearched)
  return hasresearched_.Get(index);
}
inline void Player::set_hasresearched(int index, bool value) {
  hasresearched_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.hasResearched)
}
inline void Player::add_hasresearched(bool value) {
  hasresearched_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.hasResearched)
}
inline const ::google::protobuf::RepeatedField< bool >&
Player::hasresearched() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.hasResearched)
  return hasresearched_;
}
inline ::google::protobuf::RepeatedField< bool >*
Player::mutable_hasresearched() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.hasResearched)
  return &hasresearched_;
}

// repeated bool isResearching = 32;
inline int Player::isresearching_size() const {
  return isresearching_.size();
}
inline void Player::clear_isresearching() {
  isresearching_.Clear();
}
inline bool Player::isresearching(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isResearching)
  return isresearching_.Get(index);
}
inline void Player::set_isresearching(int index, bool value) {
  isresearching_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isResearching)
}
inline void Player::add_isresearching(bool value) {
  isresearching_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.isResearching)
}
inline const ::google::protobuf::RepeatedField< bool >&
Player::isresearching() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.isResearching)
  return isresearching_;
}
inline ::google::protobuf::RepeatedField< bool >*
Player::mutable_isresearching() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.isResearching)
  return &isresearching_;
}

// repeated bool isUpgrading = 33;
inline int Player::isupgrading_size() const {
  return isupgrading_.size();
}
inline void Player::clear_isupgrading() {
  isupgrading_.Clear();
}
inline bool Player::isupgrading(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isUpgrading)
  return isupgrading_.Get(index);
}
inline void Player::set_isupgrading(int index, bool value) {
  isupgrading_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isUpgrading)
}
inline void Player::add_isupgrading(bool value) {
  isupgrading_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.isUpgrading)
}
inline const ::google::protobuf::RepeatedField< bool >&
Player::isupgrading() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.isUpgrading)
  return isupgrading_;
}
inline ::google::protobuf::RepeatedField< bool >*
Player::mutable_isupgrading() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.isUpgrading)
  return &isupgrading_;
}

// int32 color = 34;
inline void Player::clear_color() {
  color_ = 0;
}
inline ::google::protobuf::int32 Player::color() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.color)
  return color_;
}
inline void Player::set_color(::google::protobuf::int32 value) {
  
  color_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.color)
}

// int32 totalUnitScore = 35;
inline void Player::clear_totalunitscore() {
  totalunitscore_ = 0;
}
inline ::google::protobuf::int32 Player::totalunitscore() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.totalUnitScore)
  return totalunitscore_;
}
inline void Player::set_totalunitscore(::google::protobuf::int32 value) {
  
  totalunitscore_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.totalUnitScore)
}

// int32 totalKillScore = 36;
inline void Player::clear_totalkillscore() {
  totalkillscore_ = 0;
}
inline ::google::protobuf::int32 Player::totalkillscore() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.totalKillScore)
  return totalkillscore_;
}
inline void Player::set_totalkillscore(::google::protobuf::int32 value) {
  
  totalkillscore_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.totalKillScore)
}

// int32 totalBuildingScore = 37;
inline void Player::clear_totalbuildingscore() {
  totalbuildingscore_ = 0;
}
inline ::google::protobuf::int32 Player::totalbuildingscore() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.totalBuildingScore)
  return totalbuildingscore_;
}
inline void Player::set_totalbuildingscore(::google::protobuf::int32 value) {
  
  totalbuildingscore_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.totalBuildingScore)
}

// int32 totalRazingScore = 38;
inline void Player::clear_totalrazingscore() {
  totalrazingscore_ = 0;
}
inline ::google::protobuf::int32 Player::totalrazingscore() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.totalRazingScore)
  return totalrazingscore_;
}
inline void Player::set_totalrazingscore(::google::protobuf::int32 value) {
  
  totalrazingscore_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.totalRazingScore)
}

// int32 customScore = 39;
inline void Player::clear_customscore() {
  customscore_ = 0;
}
inline ::google::protobuf::int32 Player::customscore() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.customScore)
  return customscore_;
}
inline void Player::set_customscore(::google::protobuf::int32 value) {
  
  customscore_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Player.customScore)
}

// repeated int32 maxUpgradeLevel = 40;
inline int Player::maxupgradelevel_size() const {
  return maxupgradelevel_.size();
}
inline void Player::clear_maxupgradelevel() {
  maxupgradelevel_.Clear();
}
inline ::google::protobuf::int32 Player::maxupgradelevel(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.maxUpgradeLevel)
  return maxupgradelevel_.Get(index);
}
inline void Player::set_maxupgradelevel(int index, ::google::protobuf::int32 value) {
  maxupgradelevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.maxUpgradeLevel)
}
inline void Player::add_maxupgradelevel(::google::protobuf::int32 value) {
  maxupgradelevel_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.maxUpgradeLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Player::maxupgradelevel() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.maxUpgradeLevel)
  return maxupgradelevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Player::mutable_maxupgradelevel() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.maxUpgradeLevel)
  return &maxupgradelevel_;
}

// repeated bool isResearchAvailable = 41;
inline int Player::isresearchavailable_size() const {
  return isresearchavailable_.size();
}
inline void Player::clear_isresearchavailable() {
  isresearchavailable_.Clear();
}
inline bool Player::isresearchavailable(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isResearchAvailable)
  return isresearchavailable_.Get(index);
}
inline void Player::set_isresearchavailable(int index, bool value) {
  isresearchavailable_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isResearchAvailable)
}
inline void Player::add_isresearchavailable(bool value) {
  isresearchavailable_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.isResearchAvailable)
}
inline const ::google::protobuf::RepeatedField< bool >&
Player::isresearchavailable() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.isResearchAvailable)
  return isresearchavailable_;
}
inline ::google::protobuf::RepeatedField< bool >*
Player::mutable_isresearchavailable() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.isResearchAvailable)
  return &isresearchavailable_;
}

// repeated bool isUnitAvailable = 42;
inline int Player::isunitavailable_size() const {
  return isunitavailable_.size();
}
inline void Player::clear_isunitavailable() {
  isunitavailable_.Clear();
}
inline bool Player::isunitavailable(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Player.isUnitAvailable)
  return isunitavailable_.Get(index);
}
inline void Player::set_isunitavailable(int index, bool value) {
  isunitavailable_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Player.isUnitAvailable)
}
inline void Player::add_isunitavailable(bool value) {
  isunitavailable_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Player.isUnitAvailable)
}
inline const ::google::protobuf::RepeatedField< bool >&
Player::isunitavailable() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Player.isUnitAvailable)
  return isunitavailable_;
}
inline ::google::protobuf::RepeatedField< bool >*
Player::mutable_isunitavailable() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Player.isUnitAvailable)
  return &isunitavailable_;
}

// -------------------------------------------------------------------

// Unit

// int32 id = 1;
inline void Unit::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Unit::id() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.id)
  return id_;
}
inline void Unit::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.id)
}

// int32 player = 2;
inline void Unit::clear_player() {
  player_ = 0;
}
inline ::google::protobuf::int32 Unit::player() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.player)
  return player_;
}
inline void Unit::set_player(::google::protobuf::int32 value) {
  
  player_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.player)
}

// int32 type = 3;
inline void Unit::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Unit::type() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.type)
  return type_;
}
inline void Unit::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.type)
}

// .bwapi.data.Point position = 4;
inline bool Unit::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void Unit::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::bwapi::data::Point& Unit::_internal_position() const {
  return *position_;
}
inline const ::bwapi::data::Point& Unit::position() const {
  const ::bwapi::data::Point* p = position_;
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.position)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* Unit::release_position() {
  // @@protoc_insertion_point(field_release:bwapi.data.Unit.position)
  
  ::bwapi::data::Point* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* Unit::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.Unit.position)
  return position_;
}
inline void Unit::set_allocated_position(::bwapi::data::Point* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Unit.position)
}

// double angle = 5;
inline void Unit::clear_angle() {
  angle_ = 0;
}
inline double Unit::angle() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.angle)
  return angle_;
}
inline void Unit::set_angle(double value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.angle)
}

// double velocityX = 6;
inline void Unit::clear_velocityx() {
  velocityx_ = 0;
}
inline double Unit::velocityx() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.velocityX)
  return velocityx_;
}
inline void Unit::set_velocityx(double value) {
  
  velocityx_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.velocityX)
}

// double velocityY = 7;
inline void Unit::clear_velocityy() {
  velocityy_ = 0;
}
inline double Unit::velocityy() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.velocityY)
  return velocityy_;
}
inline void Unit::set_velocityy(double value) {
  
  velocityy_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.velocityY)
}

// int32 hitPoints = 8;
inline void Unit::clear_hitpoints() {
  hitpoints_ = 0;
}
inline ::google::protobuf::int32 Unit::hitpoints() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.hitPoints)
  return hitpoints_;
}
inline void Unit::set_hitpoints(::google::protobuf::int32 value) {
  
  hitpoints_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.hitPoints)
}

// int32 lastHitPoints = 9;
inline void Unit::clear_lasthitpoints() {
  lasthitpoints_ = 0;
}
inline ::google::protobuf::int32 Unit::lasthitpoints() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.lastHitPoints)
  return lasthitpoints_;
}
inline void Unit::set_lasthitpoints(::google::protobuf::int32 value) {
  
  lasthitpoints_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.lastHitPoints)
}

// int32 shields = 10;
inline void Unit::clear_shields() {
  shields_ = 0;
}
inline ::google::protobuf::int32 Unit::shields() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.shields)
  return shields_;
}
inline void Unit::set_shields(::google::protobuf::int32 value) {
  
  shields_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.shields)
}

// int32 energy = 11;
inline void Unit::clear_energy() {
  energy_ = 0;
}
inline ::google::protobuf::int32 Unit::energy() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.energy)
  return energy_;
}
inline void Unit::set_energy(::google::protobuf::int32 value) {
  
  energy_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.energy)
}

// int32 resources = 12;
inline void Unit::clear_resources() {
  resources_ = 0;
}
inline ::google::protobuf::int32 Unit::resources() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.resources)
  return resources_;
}
inline void Unit::set_resources(::google::protobuf::int32 value) {
  
  resources_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.resources)
}

// int32 resourceGroup = 13;
inline void Unit::clear_resourcegroup() {
  resourcegroup_ = 0;
}
inline ::google::protobuf::int32 Unit::resourcegroup() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.resourceGroup)
  return resourcegroup_;
}
inline void Unit::set_resourcegroup(::google::protobuf::int32 value) {
  
  resourcegroup_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.resourceGroup)
}

// int32 killCount = 14;
inline void Unit::clear_killcount() {
  killcount_ = 0;
}
inline ::google::protobuf::int32 Unit::killcount() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.killCount)
  return killcount_;
}
inline void Unit::set_killcount(::google::protobuf::int32 value) {
  
  killcount_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.killCount)
}

// int32 acidSporeCount = 15;
inline void Unit::clear_acidsporecount() {
  acidsporecount_ = 0;
}
inline ::google::protobuf::int32 Unit::acidsporecount() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.acidSporeCount)
  return acidsporecount_;
}
inline void Unit::set_acidsporecount(::google::protobuf::int32 value) {
  
  acidsporecount_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.acidSporeCount)
}

// int32 scarabCount = 16;
inline void Unit::clear_scarabcount() {
  scarabcount_ = 0;
}
inline ::google::protobuf::int32 Unit::scarabcount() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.scarabCount)
  return scarabcount_;
}
inline void Unit::set_scarabcount(::google::protobuf::int32 value) {
  
  scarabcount_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.scarabCount)
}

// int32 interceptorCount = 17;
inline void Unit::clear_interceptorcount() {
  interceptorcount_ = 0;
}
inline ::google::protobuf::int32 Unit::interceptorcount() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.interceptorCount)
  return interceptorcount_;
}
inline void Unit::set_interceptorcount(::google::protobuf::int32 value) {
  
  interceptorcount_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.interceptorCount)
}

// int32 spiderMineCount = 18;
inline void Unit::clear_spiderminecount() {
  spiderminecount_ = 0;
}
inline ::google::protobuf::int32 Unit::spiderminecount() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.spiderMineCount)
  return spiderminecount_;
}
inline void Unit::set_spiderminecount(::google::protobuf::int32 value) {
  
  spiderminecount_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.spiderMineCount)
}

// int32 groundWeaponCooldown = 19;
inline void Unit::clear_groundweaponcooldown() {
  groundweaponcooldown_ = 0;
}
inline ::google::protobuf::int32 Unit::groundweaponcooldown() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.groundWeaponCooldown)
  return groundweaponcooldown_;
}
inline void Unit::set_groundweaponcooldown(::google::protobuf::int32 value) {
  
  groundweaponcooldown_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.groundWeaponCooldown)
}

// int32 airWeaponCooldown = 20;
inline void Unit::clear_airweaponcooldown() {
  airweaponcooldown_ = 0;
}
inline ::google::protobuf::int32 Unit::airweaponcooldown() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.airWeaponCooldown)
  return airweaponcooldown_;
}
inline void Unit::set_airweaponcooldown(::google::protobuf::int32 value) {
  
  airweaponcooldown_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.airWeaponCooldown)
}

// int32 spellCooldown = 21;
inline void Unit::clear_spellcooldown() {
  spellcooldown_ = 0;
}
inline ::google::protobuf::int32 Unit::spellcooldown() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.spellCooldown)
  return spellcooldown_;
}
inline void Unit::set_spellcooldown(::google::protobuf::int32 value) {
  
  spellcooldown_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.spellCooldown)
}

// int32 defenseMatrixPoints = 22;
inline void Unit::clear_defensematrixpoints() {
  defensematrixpoints_ = 0;
}
inline ::google::protobuf::int32 Unit::defensematrixpoints() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.defenseMatrixPoints)
  return defensematrixpoints_;
}
inline void Unit::set_defensematrixpoints(::google::protobuf::int32 value) {
  
  defensematrixpoints_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.defenseMatrixPoints)
}

// int32 defenseMatrixTimer = 23;
inline void Unit::clear_defensematrixtimer() {
  defensematrixtimer_ = 0;
}
inline ::google::protobuf::int32 Unit::defensematrixtimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.defenseMatrixTimer)
  return defensematrixtimer_;
}
inline void Unit::set_defensematrixtimer(::google::protobuf::int32 value) {
  
  defensematrixtimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.defenseMatrixTimer)
}

// int32 ensnareTimer = 24;
inline void Unit::clear_ensnaretimer() {
  ensnaretimer_ = 0;
}
inline ::google::protobuf::int32 Unit::ensnaretimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.ensnareTimer)
  return ensnaretimer_;
}
inline void Unit::set_ensnaretimer(::google::protobuf::int32 value) {
  
  ensnaretimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.ensnareTimer)
}

// int32 irradiateTimer = 25;
inline void Unit::clear_irradiatetimer() {
  irradiatetimer_ = 0;
}
inline ::google::protobuf::int32 Unit::irradiatetimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.irradiateTimer)
  return irradiatetimer_;
}
inline void Unit::set_irradiatetimer(::google::protobuf::int32 value) {
  
  irradiatetimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.irradiateTimer)
}

// int32 lockdownTimer = 26;
inline void Unit::clear_lockdowntimer() {
  lockdowntimer_ = 0;
}
inline ::google::protobuf::int32 Unit::lockdowntimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.lockdownTimer)
  return lockdowntimer_;
}
inline void Unit::set_lockdowntimer(::google::protobuf::int32 value) {
  
  lockdowntimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.lockdownTimer)
}

// int32 maelstromTimer = 27;
inline void Unit::clear_maelstromtimer() {
  maelstromtimer_ = 0;
}
inline ::google::protobuf::int32 Unit::maelstromtimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.maelstromTimer)
  return maelstromtimer_;
}
inline void Unit::set_maelstromtimer(::google::protobuf::int32 value) {
  
  maelstromtimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.maelstromTimer)
}

// int32 orderTimer = 28;
inline void Unit::clear_ordertimer() {
  ordertimer_ = 0;
}
inline ::google::protobuf::int32 Unit::ordertimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.orderTimer)
  return ordertimer_;
}
inline void Unit::set_ordertimer(::google::protobuf::int32 value) {
  
  ordertimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.orderTimer)
}

// int32 plagueTimer = 29;
inline void Unit::clear_plaguetimer() {
  plaguetimer_ = 0;
}
inline ::google::protobuf::int32 Unit::plaguetimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.plagueTimer)
  return plaguetimer_;
}
inline void Unit::set_plaguetimer(::google::protobuf::int32 value) {
  
  plaguetimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.plagueTimer)
}

// int32 removeTimer = 30;
inline void Unit::clear_removetimer() {
  removetimer_ = 0;
}
inline ::google::protobuf::int32 Unit::removetimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.removeTimer)
  return removetimer_;
}
inline void Unit::set_removetimer(::google::protobuf::int32 value) {
  
  removetimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.removeTimer)
}

// int32 stasisTimer = 31;
inline void Unit::clear_stasistimer() {
  stasistimer_ = 0;
}
inline ::google::protobuf::int32 Unit::stasistimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.stasisTimer)
  return stasistimer_;
}
inline void Unit::set_stasistimer(::google::protobuf::int32 value) {
  
  stasistimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.stasisTimer)
}

// int32 stimTimer = 32;
inline void Unit::clear_stimtimer() {
  stimtimer_ = 0;
}
inline ::google::protobuf::int32 Unit::stimtimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.stimTimer)
  return stimtimer_;
}
inline void Unit::set_stimtimer(::google::protobuf::int32 value) {
  
  stimtimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.stimTimer)
}

// int32 buildType = 33;
inline void Unit::clear_buildtype() {
  buildtype_ = 0;
}
inline ::google::protobuf::int32 Unit::buildtype() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.buildType)
  return buildtype_;
}
inline void Unit::set_buildtype(::google::protobuf::int32 value) {
  
  buildtype_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.buildType)
}

// repeated int32 trainingQueue = 34;
inline int Unit::trainingqueue_size() const {
  return trainingqueue_.size();
}
inline void Unit::clear_trainingqueue() {
  trainingqueue_.Clear();
}
inline ::google::protobuf::int32 Unit::trainingqueue(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.trainingQueue)
  return trainingqueue_.Get(index);
}
inline void Unit::set_trainingqueue(int index, ::google::protobuf::int32 value) {
  trainingqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.trainingQueue)
}
inline void Unit::add_trainingqueue(::google::protobuf::int32 value) {
  trainingqueue_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Unit.trainingQueue)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Unit::trainingqueue() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Unit.trainingQueue)
  return trainingqueue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Unit::mutable_trainingqueue() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Unit.trainingQueue)
  return &trainingqueue_;
}

// repeated int32 loadedUnits = 35;
inline int Unit::loadedunits_size() const {
  return loadedunits_.size();
}
inline void Unit::clear_loadedunits() {
  loadedunits_.Clear();
}
inline ::google::protobuf::int32 Unit::loadedunits(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.loadedUnits)
  return loadedunits_.Get(index);
}
inline void Unit::set_loadedunits(int index, ::google::protobuf::int32 value) {
  loadedunits_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.loadedUnits)
}
inline void Unit::add_loadedunits(::google::protobuf::int32 value) {
  loadedunits_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Unit.loadedUnits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Unit::loadedunits() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Unit.loadedUnits)
  return loadedunits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Unit::mutable_loadedunits() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Unit.loadedUnits)
  return &loadedunits_;
}

// repeated int32 interceptors = 36;
inline int Unit::interceptors_size() const {
  return interceptors_.size();
}
inline void Unit::clear_interceptors() {
  interceptors_.Clear();
}
inline ::google::protobuf::int32 Unit::interceptors(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.interceptors)
  return interceptors_.Get(index);
}
inline void Unit::set_interceptors(int index, ::google::protobuf::int32 value) {
  interceptors_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.interceptors)
}
inline void Unit::add_interceptors(::google::protobuf::int32 value) {
  interceptors_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Unit.interceptors)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Unit::interceptors() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Unit.interceptors)
  return interceptors_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Unit::mutable_interceptors() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Unit.interceptors)
  return &interceptors_;
}

// repeated int32 larva = 37;
inline int Unit::larva_size() const {
  return larva_.size();
}
inline void Unit::clear_larva() {
  larva_.Clear();
}
inline ::google::protobuf::int32 Unit::larva(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.larva)
  return larva_.Get(index);
}
inline void Unit::set_larva(int index, ::google::protobuf::int32 value) {
  larva_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.larva)
}
inline void Unit::add_larva(::google::protobuf::int32 value) {
  larva_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Unit.larva)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Unit::larva() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Unit.larva)
  return larva_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Unit::mutable_larva() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Unit.larva)
  return &larva_;
}

// int32 tech = 38;
inline void Unit::clear_tech() {
  tech_ = 0;
}
inline ::google::protobuf::int32 Unit::tech() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.tech)
  return tech_;
}
inline void Unit::set_tech(::google::protobuf::int32 value) {
  
  tech_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.tech)
}

// int32 upgrade = 39;
inline void Unit::clear_upgrade() {
  upgrade_ = 0;
}
inline ::google::protobuf::int32 Unit::upgrade() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.upgrade)
  return upgrade_;
}
inline void Unit::set_upgrade(::google::protobuf::int32 value) {
  
  upgrade_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.upgrade)
}

// int32 remainingBuildTime = 40;
inline void Unit::clear_remainingbuildtime() {
  remainingbuildtime_ = 0;
}
inline ::google::protobuf::int32 Unit::remainingbuildtime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.remainingBuildTime)
  return remainingbuildtime_;
}
inline void Unit::set_remainingbuildtime(::google::protobuf::int32 value) {
  
  remainingbuildtime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.remainingBuildTime)
}

// int32 remainingTraintime = 41;
inline void Unit::clear_remainingtraintime() {
  remainingtraintime_ = 0;
}
inline ::google::protobuf::int32 Unit::remainingtraintime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.remainingTraintime)
  return remainingtraintime_;
}
inline void Unit::set_remainingtraintime(::google::protobuf::int32 value) {
  
  remainingtraintime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.remainingTraintime)
}

// int32 remainingResearchTime = 42;
inline void Unit::clear_remainingresearchtime() {
  remainingresearchtime_ = 0;
}
inline ::google::protobuf::int32 Unit::remainingresearchtime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.remainingResearchTime)
  return remainingresearchtime_;
}
inline void Unit::set_remainingresearchtime(::google::protobuf::int32 value) {
  
  remainingresearchtime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.remainingResearchTime)
}

// int32 remainingUpgradeTime = 43;
inline void Unit::clear_remainingupgradetime() {
  remainingupgradetime_ = 0;
}
inline ::google::protobuf::int32 Unit::remainingupgradetime() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.remainingUpgradeTime)
  return remainingupgradetime_;
}
inline void Unit::set_remainingupgradetime(::google::protobuf::int32 value) {
  
  remainingupgradetime_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.remainingUpgradeTime)
}

// int32 buildUnit = 44;
inline void Unit::clear_buildunit() {
  buildunit_ = 0;
}
inline ::google::protobuf::int32 Unit::buildunit() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.buildUnit)
  return buildunit_;
}
inline void Unit::set_buildunit(::google::protobuf::int32 value) {
  
  buildunit_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.buildUnit)
}

// int32 target = 45;
inline void Unit::clear_target() {
  target_ = 0;
}
inline ::google::protobuf::int32 Unit::target() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.target)
  return target_;
}
inline void Unit::set_target(::google::protobuf::int32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.target)
}

// .bwapi.data.Point targetPosition = 46;
inline bool Unit::has_targetposition() const {
  return this != internal_default_instance() && targetposition_ != NULL;
}
inline void Unit::clear_targetposition() {
  if (GetArenaNoVirtual() == NULL && targetposition_ != NULL) {
    delete targetposition_;
  }
  targetposition_ = NULL;
}
inline const ::bwapi::data::Point& Unit::_internal_targetposition() const {
  return *targetposition_;
}
inline const ::bwapi::data::Point& Unit::targetposition() const {
  const ::bwapi::data::Point* p = targetposition_;
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.targetPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* Unit::release_targetposition() {
  // @@protoc_insertion_point(field_release:bwapi.data.Unit.targetPosition)
  
  ::bwapi::data::Point* temp = targetposition_;
  targetposition_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* Unit::mutable_targetposition() {
  
  if (targetposition_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    targetposition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.Unit.targetPosition)
  return targetposition_;
}
inline void Unit::set_allocated_targetposition(::bwapi::data::Point* targetposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete targetposition_;
  }
  if (targetposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      targetposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, targetposition, submessage_arena);
    }
    
  } else {
    
  }
  targetposition_ = targetposition;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Unit.targetPosition)
}

// int32 order = 47;
inline void Unit::clear_order() {
  order_ = 0;
}
inline ::google::protobuf::int32 Unit::order() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.order)
  return order_;
}
inline void Unit::set_order(::google::protobuf::int32 value) {
  
  order_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.order)
}

// int32 orderTarget = 48;
inline void Unit::clear_ordertarget() {
  ordertarget_ = 0;
}
inline ::google::protobuf::int32 Unit::ordertarget() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.orderTarget)
  return ordertarget_;
}
inline void Unit::set_ordertarget(::google::protobuf::int32 value) {
  
  ordertarget_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.orderTarget)
}

// .bwapi.data.Point orderTargetPosition = 49;
inline bool Unit::has_ordertargetposition() const {
  return this != internal_default_instance() && ordertargetposition_ != NULL;
}
inline void Unit::clear_ordertargetposition() {
  if (GetArenaNoVirtual() == NULL && ordertargetposition_ != NULL) {
    delete ordertargetposition_;
  }
  ordertargetposition_ = NULL;
}
inline const ::bwapi::data::Point& Unit::_internal_ordertargetposition() const {
  return *ordertargetposition_;
}
inline const ::bwapi::data::Point& Unit::ordertargetposition() const {
  const ::bwapi::data::Point* p = ordertargetposition_;
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.orderTargetPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* Unit::release_ordertargetposition() {
  // @@protoc_insertion_point(field_release:bwapi.data.Unit.orderTargetPosition)
  
  ::bwapi::data::Point* temp = ordertargetposition_;
  ordertargetposition_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* Unit::mutable_ordertargetposition() {
  
  if (ordertargetposition_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    ordertargetposition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.Unit.orderTargetPosition)
  return ordertargetposition_;
}
inline void Unit::set_allocated_ordertargetposition(::bwapi::data::Point* ordertargetposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ordertargetposition_;
  }
  if (ordertargetposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ordertargetposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ordertargetposition, submessage_arena);
    }
    
  } else {
    
  }
  ordertargetposition_ = ordertargetposition;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Unit.orderTargetPosition)
}

// int32 secondaryOrder = 50;
inline void Unit::clear_secondaryorder() {
  secondaryorder_ = 0;
}
inline ::google::protobuf::int32 Unit::secondaryorder() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.secondaryOrder)
  return secondaryorder_;
}
inline void Unit::set_secondaryorder(::google::protobuf::int32 value) {
  
  secondaryorder_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.secondaryOrder)
}

// .bwapi.data.Point rallyPosition = 51;
inline bool Unit::has_rallyposition() const {
  return this != internal_default_instance() && rallyposition_ != NULL;
}
inline void Unit::clear_rallyposition() {
  if (GetArenaNoVirtual() == NULL && rallyposition_ != NULL) {
    delete rallyposition_;
  }
  rallyposition_ = NULL;
}
inline const ::bwapi::data::Point& Unit::_internal_rallyposition() const {
  return *rallyposition_;
}
inline const ::bwapi::data::Point& Unit::rallyposition() const {
  const ::bwapi::data::Point* p = rallyposition_;
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.rallyPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* Unit::release_rallyposition() {
  // @@protoc_insertion_point(field_release:bwapi.data.Unit.rallyPosition)
  
  ::bwapi::data::Point* temp = rallyposition_;
  rallyposition_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* Unit::mutable_rallyposition() {
  
  if (rallyposition_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    rallyposition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.Unit.rallyPosition)
  return rallyposition_;
}
inline void Unit::set_allocated_rallyposition(::bwapi::data::Point* rallyposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rallyposition_;
  }
  if (rallyposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rallyposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rallyposition, submessage_arena);
    }
    
  } else {
    
  }
  rallyposition_ = rallyposition;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Unit.rallyPosition)
}

// int32 rallyUnit = 52;
inline void Unit::clear_rallyunit() {
  rallyunit_ = 0;
}
inline ::google::protobuf::int32 Unit::rallyunit() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.rallyUnit)
  return rallyunit_;
}
inline void Unit::set_rallyunit(::google::protobuf::int32 value) {
  
  rallyunit_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.rallyUnit)
}

// int32 addon = 53;
inline void Unit::clear_addon() {
  addon_ = 0;
}
inline ::google::protobuf::int32 Unit::addon() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.addon)
  return addon_;
}
inline void Unit::set_addon(::google::protobuf::int32 value) {
  
  addon_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.addon)
}

// int32 nydusExit = 54;
inline void Unit::clear_nydusexit() {
  nydusexit_ = 0;
}
inline ::google::protobuf::int32 Unit::nydusexit() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.nydusExit)
  return nydusexit_;
}
inline void Unit::set_nydusexit(::google::protobuf::int32 value) {
  
  nydusexit_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.nydusExit)
}

// int32 powerUp = 55;
inline void Unit::clear_powerup() {
  powerup_ = 0;
}
inline ::google::protobuf::int32 Unit::powerup() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.powerUp)
  return powerup_;
}
inline void Unit::set_powerup(::google::protobuf::int32 value) {
  
  powerup_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.powerUp)
}

// int32 transport = 56;
inline void Unit::clear_transport() {
  transport_ = 0;
}
inline ::google::protobuf::int32 Unit::transport() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.transport)
  return transport_;
}
inline void Unit::set_transport(::google::protobuf::int32 value) {
  
  transport_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.transport)
}

// int32 carrier = 57;
inline void Unit::clear_carrier() {
  carrier_ = 0;
}
inline ::google::protobuf::int32 Unit::carrier() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.carrier)
  return carrier_;
}
inline void Unit::set_carrier(::google::protobuf::int32 value) {
  
  carrier_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.carrier)
}

// int32 hatchery = 58;
inline void Unit::clear_hatchery() {
  hatchery_ = 0;
}
inline ::google::protobuf::int32 Unit::hatchery() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.hatchery)
  return hatchery_;
}
inline void Unit::set_hatchery(::google::protobuf::int32 value) {
  
  hatchery_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.hatchery)
}

// bool exists = 59;
inline void Unit::clear_exists() {
  exists_ = false;
}
inline bool Unit::exists() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.exists)
  return exists_;
}
inline void Unit::set_exists(bool value) {
  
  exists_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.exists)
}

// bool hasNuke = 60;
inline void Unit::clear_hasnuke() {
  hasnuke_ = false;
}
inline bool Unit::hasnuke() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.hasNuke)
  return hasnuke_;
}
inline void Unit::set_hasnuke(bool value) {
  
  hasnuke_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.hasNuke)
}

// bool isAccelerating = 61;
inline void Unit::clear_isaccelerating() {
  isaccelerating_ = false;
}
inline bool Unit::isaccelerating() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isAccelerating)
  return isaccelerating_;
}
inline void Unit::set_isaccelerating(bool value) {
  
  isaccelerating_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isAccelerating)
}

// bool isAttacking = 62;
inline void Unit::clear_isattacking() {
  isattacking_ = false;
}
inline bool Unit::isattacking() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isAttacking)
  return isattacking_;
}
inline void Unit::set_isattacking(bool value) {
  
  isattacking_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isAttacking)
}

// bool isAttackFrame = 63;
inline void Unit::clear_isattackframe() {
  isattackframe_ = false;
}
inline bool Unit::isattackframe() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isAttackFrame)
  return isattackframe_;
}
inline void Unit::set_isattackframe(bool value) {
  
  isattackframe_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isAttackFrame)
}

// bool isBeingGathered = 64;
inline void Unit::clear_isbeinggathered() {
  isbeinggathered_ = false;
}
inline bool Unit::isbeinggathered() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isBeingGathered)
  return isbeinggathered_;
}
inline void Unit::set_isbeinggathered(bool value) {
  
  isbeinggathered_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isBeingGathered)
}

// bool isBeingHealed = 65;
inline void Unit::clear_isbeinghealed() {
  isbeinghealed_ = false;
}
inline bool Unit::isbeinghealed() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isBeingHealed)
  return isbeinghealed_;
}
inline void Unit::set_isbeinghealed(bool value) {
  
  isbeinghealed_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isBeingHealed)
}

// bool isBlind = 66;
inline void Unit::clear_isblind() {
  isblind_ = false;
}
inline bool Unit::isblind() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isBlind)
  return isblind_;
}
inline void Unit::set_isblind(bool value) {
  
  isblind_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isBlind)
}

// bool isBraking = 67;
inline void Unit::clear_isbraking() {
  isbraking_ = false;
}
inline bool Unit::isbraking() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isBraking)
  return isbraking_;
}
inline void Unit::set_isbraking(bool value) {
  
  isbraking_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isBraking)
}

// bool isBurrowed = 68;
inline void Unit::clear_isburrowed() {
  isburrowed_ = false;
}
inline bool Unit::isburrowed() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isBurrowed)
  return isburrowed_;
}
inline void Unit::set_isburrowed(bool value) {
  
  isburrowed_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isBurrowed)
}

// int32 carryResourceType = 69;
inline void Unit::clear_carryresourcetype() {
  carryresourcetype_ = 0;
}
inline ::google::protobuf::int32 Unit::carryresourcetype() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.carryResourceType)
  return carryresourcetype_;
}
inline void Unit::set_carryresourcetype(::google::protobuf::int32 value) {
  
  carryresourcetype_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.carryResourceType)
}

// bool isCloaked = 70;
inline void Unit::clear_iscloaked() {
  iscloaked_ = false;
}
inline bool Unit::iscloaked() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isCloaked)
  return iscloaked_;
}
inline void Unit::set_iscloaked(bool value) {
  
  iscloaked_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isCloaked)
}

// bool isCompleted = 71;
inline void Unit::clear_iscompleted() {
  iscompleted_ = false;
}
inline bool Unit::iscompleted() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isCompleted)
  return iscompleted_;
}
inline void Unit::set_iscompleted(bool value) {
  
  iscompleted_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isCompleted)
}

// bool isConstructing = 72;
inline void Unit::clear_isconstructing() {
  isconstructing_ = false;
}
inline bool Unit::isconstructing() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isConstructing)
  return isconstructing_;
}
inline void Unit::set_isconstructing(bool value) {
  
  isconstructing_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isConstructing)
}

// bool isDetected = 73;
inline void Unit::clear_isdetected() {
  isdetected_ = false;
}
inline bool Unit::isdetected() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isDetected)
  return isdetected_;
}
inline void Unit::set_isdetected(bool value) {
  
  isdetected_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isDetected)
}

// bool isGathering = 74;
inline void Unit::clear_isgathering() {
  isgathering_ = false;
}
inline bool Unit::isgathering() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isGathering)
  return isgathering_;
}
inline void Unit::set_isgathering(bool value) {
  
  isgathering_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isGathering)
}

// bool isHallucination = 75;
inline void Unit::clear_ishallucination() {
  ishallucination_ = false;
}
inline bool Unit::ishallucination() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isHallucination)
  return ishallucination_;
}
inline void Unit::set_ishallucination(bool value) {
  
  ishallucination_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isHallucination)
}

// bool isIdle = 76;
inline void Unit::clear_isidle() {
  isidle_ = false;
}
inline bool Unit::isidle() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isIdle)
  return isidle_;
}
inline void Unit::set_isidle(bool value) {
  
  isidle_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isIdle)
}

// bool isinterruptible = 77;
inline void Unit::clear_isinterruptible() {
  isinterruptible_ = false;
}
inline bool Unit::isinterruptible() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isinterruptible)
  return isinterruptible_;
}
inline void Unit::set_isinterruptible(bool value) {
  
  isinterruptible_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isinterruptible)
}

// bool isInvincible = 78;
inline void Unit::clear_isinvincible() {
  isinvincible_ = false;
}
inline bool Unit::isinvincible() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isInvincible)
  return isinvincible_;
}
inline void Unit::set_isinvincible(bool value) {
  
  isinvincible_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isInvincible)
}

// bool isLifted = 79;
inline void Unit::clear_islifted() {
  islifted_ = false;
}
inline bool Unit::islifted() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isLifted)
  return islifted_;
}
inline void Unit::set_islifted(bool value) {
  
  islifted_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isLifted)
}

// bool isMorphing = 80;
inline void Unit::clear_ismorphing() {
  ismorphing_ = false;
}
inline bool Unit::ismorphing() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isMorphing)
  return ismorphing_;
}
inline void Unit::set_ismorphing(bool value) {
  
  ismorphing_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isMorphing)
}

// bool isMoving = 81;
inline void Unit::clear_ismoving() {
  ismoving_ = false;
}
inline bool Unit::ismoving() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isMoving)
  return ismoving_;
}
inline void Unit::set_ismoving(bool value) {
  
  ismoving_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isMoving)
}

// bool isParasited = 82;
inline void Unit::clear_isparasited() {
  isparasited_ = false;
}
inline bool Unit::isparasited() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isParasited)
  return isparasited_;
}
inline void Unit::set_isparasited(bool value) {
  
  isparasited_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isParasited)
}

// bool isSelected = 83;
inline void Unit::clear_isselected() {
  isselected_ = false;
}
inline bool Unit::isselected() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isSelected)
  return isselected_;
}
inline void Unit::set_isselected(bool value) {
  
  isselected_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isSelected)
}

// bool isStartingAttack = 84;
inline void Unit::clear_isstartingattack() {
  isstartingattack_ = false;
}
inline bool Unit::isstartingattack() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isStartingAttack)
  return isstartingattack_;
}
inline void Unit::set_isstartingattack(bool value) {
  
  isstartingattack_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isStartingAttack)
}

// bool isStuck = 85;
inline void Unit::clear_isstuck() {
  isstuck_ = false;
}
inline bool Unit::isstuck() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isStuck)
  return isstuck_;
}
inline void Unit::set_isstuck(bool value) {
  
  isstuck_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isStuck)
}

// bool isTraining = 86;
inline void Unit::clear_istraining() {
  istraining_ = false;
}
inline bool Unit::istraining() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isTraining)
  return istraining_;
}
inline void Unit::set_istraining(bool value) {
  
  istraining_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isTraining)
}

// bool isUnderStorm = 87;
inline void Unit::clear_isunderstorm() {
  isunderstorm_ = false;
}
inline bool Unit::isunderstorm() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isUnderStorm)
  return isunderstorm_;
}
inline void Unit::set_isunderstorm(bool value) {
  
  isunderstorm_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isUnderStorm)
}

// bool isUnderDarkSwarm = 88;
inline void Unit::clear_isunderdarkswarm() {
  isunderdarkswarm_ = false;
}
inline bool Unit::isunderdarkswarm() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isUnderDarkSwarm)
  return isunderdarkswarm_;
}
inline void Unit::set_isunderdarkswarm(bool value) {
  
  isunderdarkswarm_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isUnderDarkSwarm)
}

// bool isUnderDWeb = 89;
inline void Unit::clear_isunderdweb() {
  isunderdweb_ = false;
}
inline bool Unit::isunderdweb() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isUnderDWeb)
  return isunderdweb_;
}
inline void Unit::set_isunderdweb(bool value) {
  
  isunderdweb_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isUnderDWeb)
}

// bool isPowered = 90;
inline void Unit::clear_ispowered() {
  ispowered_ = false;
}
inline bool Unit::ispowered() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isPowered)
  return ispowered_;
}
inline void Unit::set_ispowered(bool value) {
  
  ispowered_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isPowered)
}

// bool isVisible = 91;
inline void Unit::clear_isvisible() {
  isvisible_ = false;
}
inline bool Unit::isvisible() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.isVisible)
  return isvisible_;
}
inline void Unit::set_isvisible(bool value) {
  
  isvisible_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.isVisible)
}

// int32 buttonset = 92;
inline void Unit::clear_buttonset() {
  buttonset_ = 0;
}
inline ::google::protobuf::int32 Unit::buttonset() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.buttonset)
  return buttonset_;
}
inline void Unit::set_buttonset(::google::protobuf::int32 value) {
  
  buttonset_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.buttonset)
}

// int32 lastCommandFrame = 93;
inline void Unit::clear_lastcommandframe() {
  lastcommandframe_ = 0;
}
inline ::google::protobuf::int32 Unit::lastcommandframe() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.lastCommandFrame)
  return lastcommandframe_;
}
inline void Unit::set_lastcommandframe(::google::protobuf::int32 value) {
  
  lastcommandframe_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.lastCommandFrame)
}

// int32 lastCommand = 94;
inline void Unit::clear_lastcommand() {
  lastcommand_ = 0;
}
inline ::google::protobuf::int32 Unit::lastcommand() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.lastCommand)
  return lastcommand_;
}
inline void Unit::set_lastcommand(::google::protobuf::int32 value) {
  
  lastcommand_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.lastCommand)
}

// int32 lastAttackerPlayer = 95;
inline void Unit::clear_lastattackerplayer() {
  lastattackerplayer_ = 0;
}
inline ::google::protobuf::int32 Unit::lastattackerplayer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.lastAttackerPlayer)
  return lastattackerplayer_;
}
inline void Unit::set_lastattackerplayer(::google::protobuf::int32 value) {
  
  lastattackerplayer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.lastAttackerPlayer)
}

// int32 replayID = 96;
inline void Unit::clear_replayid() {
  replayid_ = 0;
}
inline ::google::protobuf::int32 Unit::replayid() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.replayID)
  return replayid_;
}
inline void Unit::set_replayid(::google::protobuf::int32 value) {
  
  replayid_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.replayID)
}

// bool recentlyAttacked = 97;
inline void Unit::clear_recentlyattacked() {
  recentlyattacked_ = false;
}
inline bool Unit::recentlyattacked() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Unit.recentlyAttacked)
  return recentlyattacked_;
}
inline void Unit::set_recentlyattacked(bool value) {
  
  recentlyattacked_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Unit.recentlyAttacked)
}

// -------------------------------------------------------------------

// Region

// int32 id = 1;
inline void Region::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Region::id() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.id)
  return id_;
}
inline void Region::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.id)
}

// int32 islandID = 2;
inline void Region::clear_islandid() {
  islandid_ = 0;
}
inline ::google::protobuf::int32 Region::islandid() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.islandID)
  return islandid_;
}
inline void Region::set_islandid(::google::protobuf::int32 value) {
  
  islandid_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.islandID)
}

// int32 center_x = 3;
inline void Region::clear_center_x() {
  center_x_ = 0;
}
inline ::google::protobuf::int32 Region::center_x() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.center_x)
  return center_x_;
}
inline void Region::set_center_x(::google::protobuf::int32 value) {
  
  center_x_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.center_x)
}

// int32 center_y = 4;
inline void Region::clear_center_y() {
  center_y_ = 0;
}
inline ::google::protobuf::int32 Region::center_y() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.center_y)
  return center_y_;
}
inline void Region::set_center_y(::google::protobuf::int32 value) {
  
  center_y_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.center_y)
}

// int32 priority = 5;
inline void Region::clear_priority() {
  priority_ = 0;
}
inline ::google::protobuf::int32 Region::priority() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.priority)
  return priority_;
}
inline void Region::set_priority(::google::protobuf::int32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.priority)
}

// int32 leftMost = 6;
inline void Region::clear_leftmost() {
  leftmost_ = 0;
}
inline ::google::protobuf::int32 Region::leftmost() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.leftMost)
  return leftmost_;
}
inline void Region::set_leftmost(::google::protobuf::int32 value) {
  
  leftmost_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.leftMost)
}

// int32 rightMost = 7;
inline void Region::clear_rightmost() {
  rightmost_ = 0;
}
inline ::google::protobuf::int32 Region::rightmost() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.rightMost)
  return rightmost_;
}
inline void Region::set_rightmost(::google::protobuf::int32 value) {
  
  rightmost_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.rightMost)
}

// int32 topMost = 8;
inline void Region::clear_topmost() {
  topmost_ = 0;
}
inline ::google::protobuf::int32 Region::topmost() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.topMost)
  return topmost_;
}
inline void Region::set_topmost(::google::protobuf::int32 value) {
  
  topmost_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.topMost)
}

// int32 bottomMost = 9;
inline void Region::clear_bottommost() {
  bottommost_ = 0;
}
inline ::google::protobuf::int32 Region::bottommost() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.bottomMost)
  return bottommost_;
}
inline void Region::set_bottommost(::google::protobuf::int32 value) {
  
  bottommost_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.bottomMost)
}

// int32 neighborCount = 10;
inline void Region::clear_neighborcount() {
  neighborcount_ = 0;
}
inline ::google::protobuf::int32 Region::neighborcount() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.neighborCount)
  return neighborcount_;
}
inline void Region::set_neighborcount(::google::protobuf::int32 value) {
  
  neighborcount_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.neighborCount)
}

// repeated int32 neighbors = 11;
inline int Region::neighbors_size() const {
  return neighbors_.size();
}
inline void Region::clear_neighbors() {
  neighbors_.Clear();
}
inline ::google::protobuf::int32 Region::neighbors(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.neighbors)
  return neighbors_.Get(index);
}
inline void Region::set_neighbors(int index, ::google::protobuf::int32 value) {
  neighbors_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Region.neighbors)
}
inline void Region::add_neighbors(::google::protobuf::int32 value) {
  neighbors_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Region.neighbors)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Region::neighbors() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Region.neighbors)
  return neighbors_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Region::mutable_neighbors() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Region.neighbors)
  return &neighbors_;
}

// bool isAccessible = 12;
inline void Region::clear_isaccessible() {
  isaccessible_ = false;
}
inline bool Region::isaccessible() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.isAccessible)
  return isaccessible_;
}
inline void Region::set_isaccessible(bool value) {
  
  isaccessible_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.isAccessible)
}

// bool isHigherGround = 13;
inline void Region::clear_ishigherground() {
  ishigherground_ = false;
}
inline bool Region::ishigherground() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Region.isHigherGround)
  return ishigherground_;
}
inline void Region::set_ishigherground(bool value) {
  
  ishigherground_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Region.isHigherGround)
}

// -------------------------------------------------------------------

// Bullet

// int32 id = 1;
inline void Bullet::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Bullet::id() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.id)
  return id_;
}
inline void Bullet::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.id)
}

// int32 player = 2;
inline void Bullet::clear_player() {
  player_ = 0;
}
inline ::google::protobuf::int32 Bullet::player() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.player)
  return player_;
}
inline void Bullet::set_player(::google::protobuf::int32 value) {
  
  player_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.player)
}

// int32 type = 3;
inline void Bullet::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Bullet::type() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.type)
  return type_;
}
inline void Bullet::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.type)
}

// int32 source = 4;
inline void Bullet::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 Bullet::source() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.source)
  return source_;
}
inline void Bullet::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.source)
}

// .bwapi.data.Point position = 5;
inline bool Bullet::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void Bullet::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::bwapi::data::Point& Bullet::_internal_position() const {
  return *position_;
}
inline const ::bwapi::data::Point& Bullet::position() const {
  const ::bwapi::data::Point* p = position_;
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.position)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* Bullet::release_position() {
  // @@protoc_insertion_point(field_release:bwapi.data.Bullet.position)
  
  ::bwapi::data::Point* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* Bullet::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.Bullet.position)
  return position_;
}
inline void Bullet::set_allocated_position(::bwapi::data::Point* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Bullet.position)
}

// double angle = 6;
inline void Bullet::clear_angle() {
  angle_ = 0;
}
inline double Bullet::angle() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.angle)
  return angle_;
}
inline void Bullet::set_angle(double value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.angle)
}

// double velocityX = 7;
inline void Bullet::clear_velocityx() {
  velocityx_ = 0;
}
inline double Bullet::velocityx() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.velocityX)
  return velocityx_;
}
inline void Bullet::set_velocityx(double value) {
  
  velocityx_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.velocityX)
}

// double velocityY = 8;
inline void Bullet::clear_velocityy() {
  velocityy_ = 0;
}
inline double Bullet::velocityy() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.velocityY)
  return velocityy_;
}
inline void Bullet::set_velocityy(double value) {
  
  velocityy_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.velocityY)
}

// int32 target = 9;
inline void Bullet::clear_target() {
  target_ = 0;
}
inline ::google::protobuf::int32 Bullet::target() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.target)
  return target_;
}
inline void Bullet::set_target(::google::protobuf::int32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.target)
}

// .bwapi.data.Point targetPosition = 10;
inline bool Bullet::has_targetposition() const {
  return this != internal_default_instance() && targetposition_ != NULL;
}
inline void Bullet::clear_targetposition() {
  if (GetArenaNoVirtual() == NULL && targetposition_ != NULL) {
    delete targetposition_;
  }
  targetposition_ = NULL;
}
inline const ::bwapi::data::Point& Bullet::_internal_targetposition() const {
  return *targetposition_;
}
inline const ::bwapi::data::Point& Bullet::targetposition() const {
  const ::bwapi::data::Point* p = targetposition_;
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.targetPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::Point*>(
      &::bwapi::data::_Point_default_instance_);
}
inline ::bwapi::data::Point* Bullet::release_targetposition() {
  // @@protoc_insertion_point(field_release:bwapi.data.Bullet.targetPosition)
  
  ::bwapi::data::Point* temp = targetposition_;
  targetposition_ = NULL;
  return temp;
}
inline ::bwapi::data::Point* Bullet::mutable_targetposition() {
  
  if (targetposition_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::Point>(GetArenaNoVirtual());
    targetposition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.Bullet.targetPosition)
  return targetposition_;
}
inline void Bullet::set_allocated_targetposition(::bwapi::data::Point* targetposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete targetposition_;
  }
  if (targetposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      targetposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, targetposition, submessage_arena);
    }
    
  } else {
    
  }
  targetposition_ = targetposition;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Bullet.targetPosition)
}

// int32 removeTimer = 11;
inline void Bullet::clear_removetimer() {
  removetimer_ = 0;
}
inline ::google::protobuf::int32 Bullet::removetimer() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.removeTimer)
  return removetimer_;
}
inline void Bullet::set_removetimer(::google::protobuf::int32 value) {
  
  removetimer_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.removeTimer)
}

// bool exists = 12;
inline void Bullet::clear_exists() {
  exists_ = false;
}
inline bool Bullet::exists() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.exists)
  return exists_;
}
inline void Bullet::set_exists(bool value) {
  
  exists_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.exists)
}

// repeated bool isVisible = 13;
inline int Bullet::isvisible_size() const {
  return isvisible_.size();
}
inline void Bullet::clear_isvisible() {
  isvisible_.Clear();
}
inline bool Bullet::isvisible(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Bullet.isVisible)
  return isvisible_.Get(index);
}
inline void Bullet::set_isvisible(int index, bool value) {
  isvisible_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Bullet.isVisible)
}
inline void Bullet::add_isvisible(bool value) {
  isvisible_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Bullet.isVisible)
}
inline const ::google::protobuf::RepeatedField< bool >&
Bullet::isvisible() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Bullet.isVisible)
  return isvisible_;
}
inline ::google::protobuf::RepeatedField< bool >*
Bullet::mutable_isvisible() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Bullet.isVisible)
  return &isvisible_;
}

// -------------------------------------------------------------------

// Force

// int32 id = 1;
inline void Force::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Force::id() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Force.id)
  return id_;
}
inline void Force::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bwapi.data.Force.id)
}

// repeated int32 players = 2;
inline int Force::players_size() const {
  return players_.size();
}
inline void Force::clear_players() {
  players_.Clear();
}
inline ::google::protobuf::int32 Force::players(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Force.players)
  return players_.Get(index);
}
inline void Force::set_players(int index, ::google::protobuf::int32 value) {
  players_.Set(index, value);
  // @@protoc_insertion_point(field_set:bwapi.data.Force.players)
}
inline void Force::add_players(::google::protobuf::int32 value) {
  players_.Add(value);
  // @@protoc_insertion_point(field_add:bwapi.data.Force.players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Force::players() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Force.players)
  return players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Force::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Force.players)
  return &players_;
}

// string name = 3;
inline void Force::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Force::name() const {
  // @@protoc_insertion_point(field_get:bwapi.data.Force.name)
  return name_.GetNoArena();
}
inline void Force::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bwapi.data.Force.name)
}
#if LANG_CXX11
inline void Force::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bwapi.data.Force.name)
}
#endif
inline void Force::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bwapi.data.Force.name)
}
inline void Force::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bwapi.data.Force.name)
}
inline ::std::string* Force::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bwapi.data.Force.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Force::release_name() {
  // @@protoc_insertion_point(field_release:bwapi.data.Force.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Force::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Force.name)
}

// -------------------------------------------------------------------

// Game

// .bwapi.data.GameData gameData = 1;
inline bool Game::has_gamedata() const {
  return this != internal_default_instance() && gamedata_ != NULL;
}
inline void Game::clear_gamedata() {
  if (GetArenaNoVirtual() == NULL && gamedata_ != NULL) {
    delete gamedata_;
  }
  gamedata_ = NULL;
}
inline const ::bwapi::data::GameData& Game::_internal_gamedata() const {
  return *gamedata_;
}
inline const ::bwapi::data::GameData& Game::gamedata() const {
  const ::bwapi::data::GameData* p = gamedata_;
  // @@protoc_insertion_point(field_get:bwapi.data.Game.gameData)
  return p != NULL ? *p : *reinterpret_cast<const ::bwapi::data::GameData*>(
      &::bwapi::data::_GameData_default_instance_);
}
inline ::bwapi::data::GameData* Game::release_gamedata() {
  // @@protoc_insertion_point(field_release:bwapi.data.Game.gameData)
  
  ::bwapi::data::GameData* temp = gamedata_;
  gamedata_ = NULL;
  return temp;
}
inline ::bwapi::data::GameData* Game::mutable_gamedata() {
  
  if (gamedata_ == NULL) {
    auto* p = CreateMaybeMessage<::bwapi::data::GameData>(GetArenaNoVirtual());
    gamedata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bwapi.data.Game.gameData)
  return gamedata_;
}
inline void Game::set_allocated_gamedata(::bwapi::data::GameData* gamedata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gamedata_;
  }
  if (gamedata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gamedata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gamedata, submessage_arena);
    }
    
  } else {
    
  }
  gamedata_ = gamedata;
  // @@protoc_insertion_point(field_set_allocated:bwapi.data.Game.gameData)
}

// repeated .bwapi.data.Player players = 2;
inline int Game::players_size() const {
  return players_.size();
}
inline void Game::clear_players() {
  players_.Clear();
}
inline ::bwapi::data::Player* Game::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:bwapi.data.Game.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bwapi::data::Player >*
Game::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Game.players)
  return &players_;
}
inline const ::bwapi::data::Player& Game::players(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Game.players)
  return players_.Get(index);
}
inline ::bwapi::data::Player* Game::add_players() {
  // @@protoc_insertion_point(field_add:bwapi.data.Game.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Player >&
Game::players() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Game.players)
  return players_;
}

// repeated .bwapi.data.Unit units = 3;
inline int Game::units_size() const {
  return units_.size();
}
inline void Game::clear_units() {
  units_.Clear();
}
inline ::bwapi::data::Unit* Game::mutable_units(int index) {
  // @@protoc_insertion_point(field_mutable:bwapi.data.Game.units)
  return units_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bwapi::data::Unit >*
Game::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Game.units)
  return &units_;
}
inline const ::bwapi::data::Unit& Game::units(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Game.units)
  return units_.Get(index);
}
inline ::bwapi::data::Unit* Game::add_units() {
  // @@protoc_insertion_point(field_add:bwapi.data.Game.units)
  return units_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Unit >&
Game::units() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Game.units)
  return units_;
}

// repeated .bwapi.data.Region regions = 4;
inline int Game::regions_size() const {
  return regions_.size();
}
inline void Game::clear_regions() {
  regions_.Clear();
}
inline ::bwapi::data::Region* Game::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:bwapi.data.Game.regions)
  return regions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bwapi::data::Region >*
Game::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Game.regions)
  return &regions_;
}
inline const ::bwapi::data::Region& Game::regions(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Game.regions)
  return regions_.Get(index);
}
inline ::bwapi::data::Region* Game::add_regions() {
  // @@protoc_insertion_point(field_add:bwapi.data.Game.regions)
  return regions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Region >&
Game::regions() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Game.regions)
  return regions_;
}

// repeated .bwapi.data.Bullet bullets = 5;
inline int Game::bullets_size() const {
  return bullets_.size();
}
inline void Game::clear_bullets() {
  bullets_.Clear();
}
inline ::bwapi::data::Bullet* Game::mutable_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:bwapi.data.Game.bullets)
  return bullets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bwapi::data::Bullet >*
Game::mutable_bullets() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Game.bullets)
  return &bullets_;
}
inline const ::bwapi::data::Bullet& Game::bullets(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Game.bullets)
  return bullets_.Get(index);
}
inline ::bwapi::data::Bullet* Game::add_bullets() {
  // @@protoc_insertion_point(field_add:bwapi.data.Game.bullets)
  return bullets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Bullet >&
Game::bullets() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Game.bullets)
  return bullets_;
}

// repeated .bwapi.data.Force forces = 6;
inline int Game::forces_size() const {
  return forces_.size();
}
inline void Game::clear_forces() {
  forces_.Clear();
}
inline ::bwapi::data::Force* Game::mutable_forces(int index) {
  // @@protoc_insertion_point(field_mutable:bwapi.data.Game.forces)
  return forces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bwapi::data::Force >*
Game::mutable_forces() {
  // @@protoc_insertion_point(field_mutable_list:bwapi.data.Game.forces)
  return &forces_;
}
inline const ::bwapi::data::Force& Game::forces(int index) const {
  // @@protoc_insertion_point(field_get:bwapi.data.Game.forces)
  return forces_.Get(index);
}
inline ::bwapi::data::Force* Game::add_forces() {
  // @@protoc_insertion_point(field_add:bwapi.data.Game.forces)
  return forces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bwapi::data::Force >&
Game::forces() const {
  // @@protoc_insertion_point(field_list:bwapi.data.Game.forces)
  return forces_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace bwapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_data_2eproto
