// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: score.proto

#include "score.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_score_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_score_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CategoryScoreDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_score_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VitalScoreDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_score_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ScoreDetails;
}  // namespace protobuf_score_2eproto
namespace SCRAPIProtocol {
class ScoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Score>
      _instance;
} _Score_default_instance_;
class CategoryScoreDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CategoryScoreDetails>
      _instance;
} _CategoryScoreDetails_default_instance_;
class VitalScoreDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VitalScoreDetails>
      _instance;
} _VitalScoreDetails_default_instance_;
class ScoreDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScoreDetails>
      _instance;
} _ScoreDetails_default_instance_;
}  // namespace SCRAPIProtocol
namespace protobuf_score_2eproto {
static void InitDefaultsScore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SCRAPIProtocol::_Score_default_instance_;
    new (ptr) ::SCRAPIProtocol::Score();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SCRAPIProtocol::Score::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Score =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScore}, {
      &protobuf_score_2eproto::scc_info_ScoreDetails.base,}};

static void InitDefaultsCategoryScoreDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SCRAPIProtocol::_CategoryScoreDetails_default_instance_;
    new (ptr) ::SCRAPIProtocol::CategoryScoreDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SCRAPIProtocol::CategoryScoreDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CategoryScoreDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCategoryScoreDetails}, {}};

static void InitDefaultsVitalScoreDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SCRAPIProtocol::_VitalScoreDetails_default_instance_;
    new (ptr) ::SCRAPIProtocol::VitalScoreDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SCRAPIProtocol::VitalScoreDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VitalScoreDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVitalScoreDetails}, {}};

static void InitDefaultsScoreDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SCRAPIProtocol::_ScoreDetails_default_instance_;
    new (ptr) ::SCRAPIProtocol::ScoreDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SCRAPIProtocol::ScoreDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ScoreDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsScoreDetails}, {
      &protobuf_score_2eproto::scc_info_CategoryScoreDetails.base,
      &protobuf_score_2eproto::scc_info_VitalScoreDetails.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Score.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CategoryScoreDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VitalScoreDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScoreDetails.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::Score, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::Score, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::Score, score_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::Score, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::Score, score_details_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::CategoryScoreDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::CategoryScoreDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::CategoryScoreDetails, none_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::CategoryScoreDetails, army_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::CategoryScoreDetails, economy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::CategoryScoreDetails, technology_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::CategoryScoreDetails, upgrade_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::VitalScoreDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::VitalScoreDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::VitalScoreDetails, life_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::VitalScoreDetails, shields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::VitalScoreDetails, energy_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, idle_production_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, idle_worker_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, total_value_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, total_value_structures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, killed_value_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, killed_value_structures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, collected_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, collected_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, collection_rate_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, collection_rate_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, spent_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, spent_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, food_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, killed_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, killed_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, lost_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, lost_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, friendly_fire_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, friendly_fire_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, used_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, used_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, total_used_minerals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, total_used_vespene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, total_damage_dealt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, total_damage_taken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SCRAPIProtocol::ScoreDetails, total_healed_),
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::SCRAPIProtocol::Score)},
  { 11, 21, sizeof(::SCRAPIProtocol::CategoryScoreDetails)},
  { 26, 34, sizeof(::SCRAPIProtocol::VitalScoreDetails)},
  { 37, 68, sizeof(::SCRAPIProtocol::ScoreDetails)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::SCRAPIProtocol::_Score_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SCRAPIProtocol::_CategoryScoreDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SCRAPIProtocol::_VitalScoreDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SCRAPIProtocol::_ScoreDetails_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "score.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013score.proto\022\016SCRAPIProtocol\"\250\001\n\005Score\022"
      "3\n\nscore_type\030\006 \001(\0162\037.SCRAPIProtocol.Sco"
      "re.ScoreType\022\r\n\005score\030\007 \001(\005\0223\n\rscore_det"
      "ails\030\010 \001(\0132\034.SCRAPIProtocol.ScoreDetails"
      "\"&\n\tScoreType\022\016\n\nCurriculum\020\001\022\t\n\005Melee\020\002"
      "\"h\n\024CategoryScoreDetails\022\014\n\004none\030\001 \001(\002\022\014"
      "\n\004army\030\002 \001(\002\022\017\n\007economy\030\003 \001(\002\022\022\n\ntechnol"
      "ogy\030\004 \001(\002\022\017\n\007upgrade\030\005 \001(\002\"B\n\021VitalScore"
      "Details\022\014\n\004life\030\001 \001(\002\022\017\n\007shields\030\002 \001(\002\022\016"
      "\n\006energy\030\003 \001(\002\"\326\t\n\014ScoreDetails\022\034\n\024idle_"
      "production_time\030\001 \001(\002\022\030\n\020idle_worker_tim"
      "e\030\002 \001(\002\022\031\n\021total_value_units\030\003 \001(\002\022\036\n\026to"
      "tal_value_structures\030\004 \001(\002\022\032\n\022killed_val"
      "ue_units\030\005 \001(\002\022\037\n\027killed_value_structure"
      "s\030\006 \001(\002\022\032\n\022collected_minerals\030\007 \001(\002\022\031\n\021c"
      "ollected_vespene\030\010 \001(\002\022 \n\030collection_rat"
      "e_minerals\030\t \001(\002\022\037\n\027collection_rate_vesp"
      "ene\030\n \001(\002\022\026\n\016spent_minerals\030\013 \001(\002\022\025\n\rspe"
      "nt_vespene\030\014 \001(\002\0227\n\tfood_used\030\r \001(\0132$.SC"
      "RAPIProtocol.CategoryScoreDetails\022=\n\017kil"
      "led_minerals\030\016 \001(\0132$.SCRAPIProtocol.Cate"
      "goryScoreDetails\022<\n\016killed_vespene\030\017 \001(\013"
      "2$.SCRAPIProtocol.CategoryScoreDetails\022;"
      "\n\rlost_minerals\030\020 \001(\0132$.SCRAPIProtocol.C"
      "ategoryScoreDetails\022:\n\014lost_vespene\030\021 \001("
      "\0132$.SCRAPIProtocol.CategoryScoreDetails\022"
      "D\n\026friendly_fire_minerals\030\022 \001(\0132$.SCRAPI"
      "Protocol.CategoryScoreDetails\022C\n\025friendl"
      "y_fire_vespene\030\023 \001(\0132$.SCRAPIProtocol.Ca"
      "tegoryScoreDetails\022;\n\rused_minerals\030\024 \001("
      "\0132$.SCRAPIProtocol.CategoryScoreDetails\022"
      ":\n\014used_vespene\030\025 \001(\0132$.SCRAPIProtocol.C"
      "ategoryScoreDetails\022A\n\023total_used_minera"
      "ls\030\026 \001(\0132$.SCRAPIProtocol.CategoryScoreD"
      "etails\022@\n\022total_used_vespene\030\027 \001(\0132$.SCR"
      "APIProtocol.CategoryScoreDetails\022=\n\022tota"
      "l_damage_dealt\030\030 \001(\0132!.SCRAPIProtocol.Vi"
      "talScoreDetails\022=\n\022total_damage_taken\030\031 "
      "\001(\0132!.SCRAPIProtocol.VitalScoreDetails\0227"
      "\n\014total_healed\030\032 \001(\0132!.SCRAPIProtocol.Vi"
      "talScoreDetails"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1615);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "score.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_score_2eproto
namespace SCRAPIProtocol {
const ::google::protobuf::EnumDescriptor* Score_ScoreType_descriptor() {
  protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_score_2eproto::file_level_enum_descriptors[0];
}
bool Score_ScoreType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Score_ScoreType Score::Curriculum;
const Score_ScoreType Score::Melee;
const Score_ScoreType Score::ScoreType_MIN;
const Score_ScoreType Score::ScoreType_MAX;
const int Score::ScoreType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Score::InitAsDefaultInstance() {
  ::SCRAPIProtocol::_Score_default_instance_._instance.get_mutable()->score_details_ = const_cast< ::SCRAPIProtocol::ScoreDetails*>(
      ::SCRAPIProtocol::ScoreDetails::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Score::kScoreTypeFieldNumber;
const int Score::kScoreFieldNumber;
const int Score::kScoreDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Score::Score()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_score_2eproto::scc_info_Score.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SCRAPIProtocol.Score)
}
Score::Score(const Score& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_score_details()) {
    score_details_ = new ::SCRAPIProtocol::ScoreDetails(*from.score_details_);
  } else {
    score_details_ = NULL;
  }
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_type_) -
    reinterpret_cast<char*>(&score_)) + sizeof(score_type_));
  // @@protoc_insertion_point(copy_constructor:SCRAPIProtocol.Score)
}

void Score::SharedCtor() {
  ::memset(&score_details_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&score_details_)) + sizeof(score_));
  score_type_ = 1;
}

Score::~Score() {
  // @@protoc_insertion_point(destructor:SCRAPIProtocol.Score)
  SharedDtor();
}

void Score::SharedDtor() {
  if (this != internal_default_instance()) delete score_details_;
}

void Score::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Score::descriptor() {
  ::protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Score& Score::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_score_2eproto::scc_info_Score.base);
  return *internal_default_instance();
}


void Score::Clear() {
// @@protoc_insertion_point(message_clear_start:SCRAPIProtocol.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(score_details_ != NULL);
    score_details_->Clear();
  }
  if (cached_has_bits & 6u) {
    score_ = 0;
    score_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Score::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SCRAPIProtocol.Score)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SCRAPIProtocol.Score.ScoreType score_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SCRAPIProtocol::Score_ScoreType_IsValid(value)) {
            set_score_type(static_cast< ::SCRAPIProtocol::Score_ScoreType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 score = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.ScoreDetails score_details = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_score_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SCRAPIProtocol.Score)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SCRAPIProtocol.Score)
  return false;
#undef DO_
}

void Score::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SCRAPIProtocol.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SCRAPIProtocol.Score.ScoreType score_type = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->score_type(), output);
  }

  // optional int32 score = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->score(), output);
  }

  // optional .SCRAPIProtocol.ScoreDetails score_details = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_score_details(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SCRAPIProtocol.Score)
}

::google::protobuf::uint8* Score::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SCRAPIProtocol.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SCRAPIProtocol.Score.ScoreType score_type = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->score_type(), target);
  }

  // optional int32 score = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->score(), target);
  }

  // optional .SCRAPIProtocol.ScoreDetails score_details = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_score_details(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SCRAPIProtocol.Score)
  return target;
}

size_t Score::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SCRAPIProtocol.Score)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .SCRAPIProtocol.ScoreDetails score_details = 8;
    if (has_score_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *score_details_);
    }

    // optional int32 score = 7;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional .SCRAPIProtocol.Score.ScoreType score_type = 6;
    if (has_score_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->score_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Score::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SCRAPIProtocol.Score)
  GOOGLE_DCHECK_NE(&from, this);
  const Score* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Score>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SCRAPIProtocol.Score)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SCRAPIProtocol.Score)
    MergeFrom(*source);
  }
}

void Score::MergeFrom(const Score& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SCRAPIProtocol.Score)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_score_details()->::SCRAPIProtocol::ScoreDetails::MergeFrom(from.score_details());
    }
    if (cached_has_bits & 0x00000002u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000004u) {
      score_type_ = from.score_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Score::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SCRAPIProtocol.Score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Score::CopyFrom(const Score& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SCRAPIProtocol.Score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Score::IsInitialized() const {
  return true;
}

void Score::Swap(Score* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Score::InternalSwap(Score* other) {
  using std::swap;
  swap(score_details_, other->score_details_);
  swap(score_, other->score_);
  swap(score_type_, other->score_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Score::GetMetadata() const {
  protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CategoryScoreDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CategoryScoreDetails::kNoneFieldNumber;
const int CategoryScoreDetails::kArmyFieldNumber;
const int CategoryScoreDetails::kEconomyFieldNumber;
const int CategoryScoreDetails::kTechnologyFieldNumber;
const int CategoryScoreDetails::kUpgradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CategoryScoreDetails::CategoryScoreDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_score_2eproto::scc_info_CategoryScoreDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SCRAPIProtocol.CategoryScoreDetails)
}
CategoryScoreDetails::CategoryScoreDetails(const CategoryScoreDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&none_, &from.none_,
    static_cast<size_t>(reinterpret_cast<char*>(&upgrade_) -
    reinterpret_cast<char*>(&none_)) + sizeof(upgrade_));
  // @@protoc_insertion_point(copy_constructor:SCRAPIProtocol.CategoryScoreDetails)
}

void CategoryScoreDetails::SharedCtor() {
  ::memset(&none_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upgrade_) -
      reinterpret_cast<char*>(&none_)) + sizeof(upgrade_));
}

CategoryScoreDetails::~CategoryScoreDetails() {
  // @@protoc_insertion_point(destructor:SCRAPIProtocol.CategoryScoreDetails)
  SharedDtor();
}

void CategoryScoreDetails::SharedDtor() {
}

void CategoryScoreDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CategoryScoreDetails::descriptor() {
  ::protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CategoryScoreDetails& CategoryScoreDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_score_2eproto::scc_info_CategoryScoreDetails.base);
  return *internal_default_instance();
}


void CategoryScoreDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:SCRAPIProtocol.CategoryScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&none_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&upgrade_) -
        reinterpret_cast<char*>(&none_)) + sizeof(upgrade_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CategoryScoreDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SCRAPIProtocol.CategoryScoreDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float none = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_none();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &none_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float army = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_army();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &army_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float economy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_economy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &economy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float technology = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_technology();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &technology_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float upgrade = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_upgrade();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &upgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SCRAPIProtocol.CategoryScoreDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SCRAPIProtocol.CategoryScoreDetails)
  return false;
#undef DO_
}

void CategoryScoreDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SCRAPIProtocol.CategoryScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float none = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->none(), output);
  }

  // optional float army = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->army(), output);
  }

  // optional float economy = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->economy(), output);
  }

  // optional float technology = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->technology(), output);
  }

  // optional float upgrade = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->upgrade(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SCRAPIProtocol.CategoryScoreDetails)
}

::google::protobuf::uint8* CategoryScoreDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SCRAPIProtocol.CategoryScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float none = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->none(), target);
  }

  // optional float army = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->army(), target);
  }

  // optional float economy = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->economy(), target);
  }

  // optional float technology = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->technology(), target);
  }

  // optional float upgrade = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->upgrade(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SCRAPIProtocol.CategoryScoreDetails)
  return target;
}

size_t CategoryScoreDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SCRAPIProtocol.CategoryScoreDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional float none = 1;
    if (has_none()) {
      total_size += 1 + 4;
    }

    // optional float army = 2;
    if (has_army()) {
      total_size += 1 + 4;
    }

    // optional float economy = 3;
    if (has_economy()) {
      total_size += 1 + 4;
    }

    // optional float technology = 4;
    if (has_technology()) {
      total_size += 1 + 4;
    }

    // optional float upgrade = 5;
    if (has_upgrade()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CategoryScoreDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SCRAPIProtocol.CategoryScoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CategoryScoreDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CategoryScoreDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SCRAPIProtocol.CategoryScoreDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SCRAPIProtocol.CategoryScoreDetails)
    MergeFrom(*source);
  }
}

void CategoryScoreDetails::MergeFrom(const CategoryScoreDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SCRAPIProtocol.CategoryScoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      none_ = from.none_;
    }
    if (cached_has_bits & 0x00000002u) {
      army_ = from.army_;
    }
    if (cached_has_bits & 0x00000004u) {
      economy_ = from.economy_;
    }
    if (cached_has_bits & 0x00000008u) {
      technology_ = from.technology_;
    }
    if (cached_has_bits & 0x00000010u) {
      upgrade_ = from.upgrade_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CategoryScoreDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SCRAPIProtocol.CategoryScoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CategoryScoreDetails::CopyFrom(const CategoryScoreDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SCRAPIProtocol.CategoryScoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CategoryScoreDetails::IsInitialized() const {
  return true;
}

void CategoryScoreDetails::Swap(CategoryScoreDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CategoryScoreDetails::InternalSwap(CategoryScoreDetails* other) {
  using std::swap;
  swap(none_, other->none_);
  swap(army_, other->army_);
  swap(economy_, other->economy_);
  swap(technology_, other->technology_);
  swap(upgrade_, other->upgrade_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CategoryScoreDetails::GetMetadata() const {
  protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VitalScoreDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VitalScoreDetails::kLifeFieldNumber;
const int VitalScoreDetails::kShieldsFieldNumber;
const int VitalScoreDetails::kEnergyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VitalScoreDetails::VitalScoreDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_score_2eproto::scc_info_VitalScoreDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SCRAPIProtocol.VitalScoreDetails)
}
VitalScoreDetails::VitalScoreDetails(const VitalScoreDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&life_, &from.life_,
    static_cast<size_t>(reinterpret_cast<char*>(&energy_) -
    reinterpret_cast<char*>(&life_)) + sizeof(energy_));
  // @@protoc_insertion_point(copy_constructor:SCRAPIProtocol.VitalScoreDetails)
}

void VitalScoreDetails::SharedCtor() {
  ::memset(&life_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&energy_) -
      reinterpret_cast<char*>(&life_)) + sizeof(energy_));
}

VitalScoreDetails::~VitalScoreDetails() {
  // @@protoc_insertion_point(destructor:SCRAPIProtocol.VitalScoreDetails)
  SharedDtor();
}

void VitalScoreDetails::SharedDtor() {
}

void VitalScoreDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VitalScoreDetails::descriptor() {
  ::protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VitalScoreDetails& VitalScoreDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_score_2eproto::scc_info_VitalScoreDetails.base);
  return *internal_default_instance();
}


void VitalScoreDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:SCRAPIProtocol.VitalScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&life_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&energy_) -
        reinterpret_cast<char*>(&life_)) + sizeof(energy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VitalScoreDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SCRAPIProtocol.VitalScoreDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float life = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_life();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &life_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float shields = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_shields();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &shields_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float energy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_energy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &energy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SCRAPIProtocol.VitalScoreDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SCRAPIProtocol.VitalScoreDetails)
  return false;
#undef DO_
}

void VitalScoreDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SCRAPIProtocol.VitalScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float life = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->life(), output);
  }

  // optional float shields = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->shields(), output);
  }

  // optional float energy = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->energy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SCRAPIProtocol.VitalScoreDetails)
}

::google::protobuf::uint8* VitalScoreDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SCRAPIProtocol.VitalScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float life = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->life(), target);
  }

  // optional float shields = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->shields(), target);
  }

  // optional float energy = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->energy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SCRAPIProtocol.VitalScoreDetails)
  return target;
}

size_t VitalScoreDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SCRAPIProtocol.VitalScoreDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional float life = 1;
    if (has_life()) {
      total_size += 1 + 4;
    }

    // optional float shields = 2;
    if (has_shields()) {
      total_size += 1 + 4;
    }

    // optional float energy = 3;
    if (has_energy()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VitalScoreDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SCRAPIProtocol.VitalScoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const VitalScoreDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VitalScoreDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SCRAPIProtocol.VitalScoreDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SCRAPIProtocol.VitalScoreDetails)
    MergeFrom(*source);
  }
}

void VitalScoreDetails::MergeFrom(const VitalScoreDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SCRAPIProtocol.VitalScoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      life_ = from.life_;
    }
    if (cached_has_bits & 0x00000002u) {
      shields_ = from.shields_;
    }
    if (cached_has_bits & 0x00000004u) {
      energy_ = from.energy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VitalScoreDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SCRAPIProtocol.VitalScoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VitalScoreDetails::CopyFrom(const VitalScoreDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SCRAPIProtocol.VitalScoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VitalScoreDetails::IsInitialized() const {
  return true;
}

void VitalScoreDetails::Swap(VitalScoreDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VitalScoreDetails::InternalSwap(VitalScoreDetails* other) {
  using std::swap;
  swap(life_, other->life_);
  swap(shields_, other->shields_);
  swap(energy_, other->energy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VitalScoreDetails::GetMetadata() const {
  protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScoreDetails::InitAsDefaultInstance() {
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->food_used_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->killed_minerals_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->killed_vespene_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->lost_minerals_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->lost_vespene_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->friendly_fire_minerals_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->friendly_fire_vespene_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->used_minerals_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->used_vespene_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->total_used_minerals_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->total_used_vespene_ = const_cast< ::SCRAPIProtocol::CategoryScoreDetails*>(
      ::SCRAPIProtocol::CategoryScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->total_damage_dealt_ = const_cast< ::SCRAPIProtocol::VitalScoreDetails*>(
      ::SCRAPIProtocol::VitalScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->total_damage_taken_ = const_cast< ::SCRAPIProtocol::VitalScoreDetails*>(
      ::SCRAPIProtocol::VitalScoreDetails::internal_default_instance());
  ::SCRAPIProtocol::_ScoreDetails_default_instance_._instance.get_mutable()->total_healed_ = const_cast< ::SCRAPIProtocol::VitalScoreDetails*>(
      ::SCRAPIProtocol::VitalScoreDetails::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScoreDetails::kIdleProductionTimeFieldNumber;
const int ScoreDetails::kIdleWorkerTimeFieldNumber;
const int ScoreDetails::kTotalValueUnitsFieldNumber;
const int ScoreDetails::kTotalValueStructuresFieldNumber;
const int ScoreDetails::kKilledValueUnitsFieldNumber;
const int ScoreDetails::kKilledValueStructuresFieldNumber;
const int ScoreDetails::kCollectedMineralsFieldNumber;
const int ScoreDetails::kCollectedVespeneFieldNumber;
const int ScoreDetails::kCollectionRateMineralsFieldNumber;
const int ScoreDetails::kCollectionRateVespeneFieldNumber;
const int ScoreDetails::kSpentMineralsFieldNumber;
const int ScoreDetails::kSpentVespeneFieldNumber;
const int ScoreDetails::kFoodUsedFieldNumber;
const int ScoreDetails::kKilledMineralsFieldNumber;
const int ScoreDetails::kKilledVespeneFieldNumber;
const int ScoreDetails::kLostMineralsFieldNumber;
const int ScoreDetails::kLostVespeneFieldNumber;
const int ScoreDetails::kFriendlyFireMineralsFieldNumber;
const int ScoreDetails::kFriendlyFireVespeneFieldNumber;
const int ScoreDetails::kUsedMineralsFieldNumber;
const int ScoreDetails::kUsedVespeneFieldNumber;
const int ScoreDetails::kTotalUsedMineralsFieldNumber;
const int ScoreDetails::kTotalUsedVespeneFieldNumber;
const int ScoreDetails::kTotalDamageDealtFieldNumber;
const int ScoreDetails::kTotalDamageTakenFieldNumber;
const int ScoreDetails::kTotalHealedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScoreDetails::ScoreDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_score_2eproto::scc_info_ScoreDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SCRAPIProtocol.ScoreDetails)
}
ScoreDetails::ScoreDetails(const ScoreDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_food_used()) {
    food_used_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.food_used_);
  } else {
    food_used_ = NULL;
  }
  if (from.has_killed_minerals()) {
    killed_minerals_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.killed_minerals_);
  } else {
    killed_minerals_ = NULL;
  }
  if (from.has_killed_vespene()) {
    killed_vespene_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.killed_vespene_);
  } else {
    killed_vespene_ = NULL;
  }
  if (from.has_lost_minerals()) {
    lost_minerals_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.lost_minerals_);
  } else {
    lost_minerals_ = NULL;
  }
  if (from.has_lost_vespene()) {
    lost_vespene_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.lost_vespene_);
  } else {
    lost_vespene_ = NULL;
  }
  if (from.has_friendly_fire_minerals()) {
    friendly_fire_minerals_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.friendly_fire_minerals_);
  } else {
    friendly_fire_minerals_ = NULL;
  }
  if (from.has_friendly_fire_vespene()) {
    friendly_fire_vespene_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.friendly_fire_vespene_);
  } else {
    friendly_fire_vespene_ = NULL;
  }
  if (from.has_used_minerals()) {
    used_minerals_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.used_minerals_);
  } else {
    used_minerals_ = NULL;
  }
  if (from.has_used_vespene()) {
    used_vespene_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.used_vespene_);
  } else {
    used_vespene_ = NULL;
  }
  if (from.has_total_used_minerals()) {
    total_used_minerals_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.total_used_minerals_);
  } else {
    total_used_minerals_ = NULL;
  }
  if (from.has_total_used_vespene()) {
    total_used_vespene_ = new ::SCRAPIProtocol::CategoryScoreDetails(*from.total_used_vespene_);
  } else {
    total_used_vespene_ = NULL;
  }
  if (from.has_total_damage_dealt()) {
    total_damage_dealt_ = new ::SCRAPIProtocol::VitalScoreDetails(*from.total_damage_dealt_);
  } else {
    total_damage_dealt_ = NULL;
  }
  if (from.has_total_damage_taken()) {
    total_damage_taken_ = new ::SCRAPIProtocol::VitalScoreDetails(*from.total_damage_taken_);
  } else {
    total_damage_taken_ = NULL;
  }
  if (from.has_total_healed()) {
    total_healed_ = new ::SCRAPIProtocol::VitalScoreDetails(*from.total_healed_);
  } else {
    total_healed_ = NULL;
  }
  ::memcpy(&idle_production_time_, &from.idle_production_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&spent_vespene_) -
    reinterpret_cast<char*>(&idle_production_time_)) + sizeof(spent_vespene_));
  // @@protoc_insertion_point(copy_constructor:SCRAPIProtocol.ScoreDetails)
}

void ScoreDetails::SharedCtor() {
  ::memset(&food_used_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spent_vespene_) -
      reinterpret_cast<char*>(&food_used_)) + sizeof(spent_vespene_));
}

ScoreDetails::~ScoreDetails() {
  // @@protoc_insertion_point(destructor:SCRAPIProtocol.ScoreDetails)
  SharedDtor();
}

void ScoreDetails::SharedDtor() {
  if (this != internal_default_instance()) delete food_used_;
  if (this != internal_default_instance()) delete killed_minerals_;
  if (this != internal_default_instance()) delete killed_vespene_;
  if (this != internal_default_instance()) delete lost_minerals_;
  if (this != internal_default_instance()) delete lost_vespene_;
  if (this != internal_default_instance()) delete friendly_fire_minerals_;
  if (this != internal_default_instance()) delete friendly_fire_vespene_;
  if (this != internal_default_instance()) delete used_minerals_;
  if (this != internal_default_instance()) delete used_vespene_;
  if (this != internal_default_instance()) delete total_used_minerals_;
  if (this != internal_default_instance()) delete total_used_vespene_;
  if (this != internal_default_instance()) delete total_damage_dealt_;
  if (this != internal_default_instance()) delete total_damage_taken_;
  if (this != internal_default_instance()) delete total_healed_;
}

void ScoreDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScoreDetails::descriptor() {
  ::protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScoreDetails& ScoreDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_score_2eproto::scc_info_ScoreDetails.base);
  return *internal_default_instance();
}


void ScoreDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:SCRAPIProtocol.ScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(food_used_ != NULL);
      food_used_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(killed_minerals_ != NULL);
      killed_minerals_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(killed_vespene_ != NULL);
      killed_vespene_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(lost_minerals_ != NULL);
      lost_minerals_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(lost_vespene_ != NULL);
      lost_vespene_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(friendly_fire_minerals_ != NULL);
      friendly_fire_minerals_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(friendly_fire_vespene_ != NULL);
      friendly_fire_vespene_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(used_minerals_ != NULL);
      used_minerals_->Clear();
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(used_vespene_ != NULL);
      used_vespene_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(total_used_minerals_ != NULL);
      total_used_minerals_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(total_used_vespene_ != NULL);
      total_used_vespene_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(total_damage_dealt_ != NULL);
      total_damage_dealt_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(total_damage_taken_ != NULL);
      total_damage_taken_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(total_healed_ != NULL);
      total_healed_->Clear();
    }
  }
  if (cached_has_bits & 49152u) {
    ::memset(&idle_production_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&idle_worker_time_) -
        reinterpret_cast<char*>(&idle_production_time_)) + sizeof(idle_worker_time_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&total_value_units_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&collection_rate_vespene_) -
        reinterpret_cast<char*>(&total_value_units_)) + sizeof(collection_rate_vespene_));
  }
  if (cached_has_bits & 50331648u) {
    ::memset(&spent_minerals_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&spent_vespene_) -
        reinterpret_cast<char*>(&spent_minerals_)) + sizeof(spent_vespene_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScoreDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SCRAPIProtocol.ScoreDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float idle_production_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_idle_production_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &idle_production_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float idle_worker_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_idle_worker_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &idle_worker_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float total_value_units = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_total_value_units();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_value_units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float total_value_structures = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_total_value_structures();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_value_structures_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float killed_value_units = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_killed_value_units();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &killed_value_units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float killed_value_structures = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_killed_value_structures();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &killed_value_structures_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float collected_minerals = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_collected_minerals();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &collected_minerals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float collected_vespene = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_collected_vespene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &collected_vespene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float collection_rate_minerals = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_collection_rate_minerals();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &collection_rate_minerals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float collection_rate_vespene = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_collection_rate_vespene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &collection_rate_vespene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float spent_minerals = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_spent_minerals();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &spent_minerals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float spent_vespene = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_spent_vespene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &spent_vespene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails food_used = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_food_used()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails killed_minerals = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_killed_minerals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails killed_vespene = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_killed_vespene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails lost_minerals = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lost_minerals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails lost_vespene = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lost_vespene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_minerals = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_friendly_fire_minerals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_vespene = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_friendly_fire_vespene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails used_minerals = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_used_minerals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails used_vespene = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_used_vespene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails total_used_minerals = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_used_minerals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.CategoryScoreDetails total_used_vespene = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_used_vespene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.VitalScoreDetails total_damage_dealt = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_damage_dealt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.VitalScoreDetails total_damage_taken = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_damage_taken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SCRAPIProtocol.VitalScoreDetails total_healed = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_healed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SCRAPIProtocol.ScoreDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SCRAPIProtocol.ScoreDetails)
  return false;
#undef DO_
}

void ScoreDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SCRAPIProtocol.ScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float idle_production_time = 1;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->idle_production_time(), output);
  }

  // optional float idle_worker_time = 2;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->idle_worker_time(), output);
  }

  // optional float total_value_units = 3;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->total_value_units(), output);
  }

  // optional float total_value_structures = 4;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->total_value_structures(), output);
  }

  // optional float killed_value_units = 5;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->killed_value_units(), output);
  }

  // optional float killed_value_structures = 6;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->killed_value_structures(), output);
  }

  // optional float collected_minerals = 7;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->collected_minerals(), output);
  }

  // optional float collected_vespene = 8;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->collected_vespene(), output);
  }

  // optional float collection_rate_minerals = 9;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->collection_rate_minerals(), output);
  }

  // optional float collection_rate_vespene = 10;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->collection_rate_vespene(), output);
  }

  // optional float spent_minerals = 11;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->spent_minerals(), output);
  }

  // optional float spent_vespene = 12;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->spent_vespene(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails food_used = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_food_used(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails killed_minerals = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_killed_minerals(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails killed_vespene = 15;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_killed_vespene(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails lost_minerals = 16;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_lost_minerals(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails lost_vespene = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_lost_vespene(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_minerals = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_friendly_fire_minerals(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_vespene = 19;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_friendly_fire_vespene(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails used_minerals = 20;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_used_minerals(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails used_vespene = 21;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_used_vespene(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails total_used_minerals = 22;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_total_used_minerals(), output);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails total_used_vespene = 23;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_total_used_vespene(), output);
  }

  // optional .SCRAPIProtocol.VitalScoreDetails total_damage_dealt = 24;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_total_damage_dealt(), output);
  }

  // optional .SCRAPIProtocol.VitalScoreDetails total_damage_taken = 25;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_total_damage_taken(), output);
  }

  // optional .SCRAPIProtocol.VitalScoreDetails total_healed = 26;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_total_healed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SCRAPIProtocol.ScoreDetails)
}

::google::protobuf::uint8* ScoreDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SCRAPIProtocol.ScoreDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float idle_production_time = 1;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->idle_production_time(), target);
  }

  // optional float idle_worker_time = 2;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->idle_worker_time(), target);
  }

  // optional float total_value_units = 3;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->total_value_units(), target);
  }

  // optional float total_value_structures = 4;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->total_value_structures(), target);
  }

  // optional float killed_value_units = 5;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->killed_value_units(), target);
  }

  // optional float killed_value_structures = 6;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->killed_value_structures(), target);
  }

  // optional float collected_minerals = 7;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->collected_minerals(), target);
  }

  // optional float collected_vespene = 8;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->collected_vespene(), target);
  }

  // optional float collection_rate_minerals = 9;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->collection_rate_minerals(), target);
  }

  // optional float collection_rate_vespene = 10;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->collection_rate_vespene(), target);
  }

  // optional float spent_minerals = 11;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->spent_minerals(), target);
  }

  // optional float spent_vespene = 12;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->spent_vespene(), target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails food_used = 13;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_food_used(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails killed_minerals = 14;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_killed_minerals(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails killed_vespene = 15;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_killed_vespene(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails lost_minerals = 16;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_lost_minerals(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails lost_vespene = 17;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_lost_vespene(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_minerals = 18;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_friendly_fire_minerals(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_vespene = 19;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_friendly_fire_vespene(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails used_minerals = 20;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_used_minerals(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails used_vespene = 21;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_used_vespene(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails total_used_minerals = 22;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_total_used_minerals(), deterministic, target);
  }

  // optional .SCRAPIProtocol.CategoryScoreDetails total_used_vespene = 23;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_total_used_vespene(), deterministic, target);
  }

  // optional .SCRAPIProtocol.VitalScoreDetails total_damage_dealt = 24;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_total_damage_dealt(), deterministic, target);
  }

  // optional .SCRAPIProtocol.VitalScoreDetails total_damage_taken = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_total_damage_taken(), deterministic, target);
  }

  // optional .SCRAPIProtocol.VitalScoreDetails total_healed = 26;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_total_healed(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SCRAPIProtocol.ScoreDetails)
  return target;
}

size_t ScoreDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SCRAPIProtocol.ScoreDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .SCRAPIProtocol.CategoryScoreDetails food_used = 13;
    if (has_food_used()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *food_used_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails killed_minerals = 14;
    if (has_killed_minerals()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *killed_minerals_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails killed_vespene = 15;
    if (has_killed_vespene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *killed_vespene_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails lost_minerals = 16;
    if (has_lost_minerals()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *lost_minerals_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails lost_vespene = 17;
    if (has_lost_vespene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *lost_vespene_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_minerals = 18;
    if (has_friendly_fire_minerals()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *friendly_fire_minerals_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails friendly_fire_vespene = 19;
    if (has_friendly_fire_vespene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *friendly_fire_vespene_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails used_minerals = 20;
    if (has_used_minerals()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *used_minerals_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .SCRAPIProtocol.CategoryScoreDetails used_vespene = 21;
    if (has_used_vespene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *used_vespene_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails total_used_minerals = 22;
    if (has_total_used_minerals()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *total_used_minerals_);
    }

    // optional .SCRAPIProtocol.CategoryScoreDetails total_used_vespene = 23;
    if (has_total_used_vespene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *total_used_vespene_);
    }

    // optional .SCRAPIProtocol.VitalScoreDetails total_damage_dealt = 24;
    if (has_total_damage_dealt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *total_damage_dealt_);
    }

    // optional .SCRAPIProtocol.VitalScoreDetails total_damage_taken = 25;
    if (has_total_damage_taken()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *total_damage_taken_);
    }

    // optional .SCRAPIProtocol.VitalScoreDetails total_healed = 26;
    if (has_total_healed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *total_healed_);
    }

    // optional float idle_production_time = 1;
    if (has_idle_production_time()) {
      total_size += 1 + 4;
    }

    // optional float idle_worker_time = 2;
    if (has_idle_worker_time()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional float total_value_units = 3;
    if (has_total_value_units()) {
      total_size += 1 + 4;
    }

    // optional float total_value_structures = 4;
    if (has_total_value_structures()) {
      total_size += 1 + 4;
    }

    // optional float killed_value_units = 5;
    if (has_killed_value_units()) {
      total_size += 1 + 4;
    }

    // optional float killed_value_structures = 6;
    if (has_killed_value_structures()) {
      total_size += 1 + 4;
    }

    // optional float collected_minerals = 7;
    if (has_collected_minerals()) {
      total_size += 1 + 4;
    }

    // optional float collected_vespene = 8;
    if (has_collected_vespene()) {
      total_size += 1 + 4;
    }

    // optional float collection_rate_minerals = 9;
    if (has_collection_rate_minerals()) {
      total_size += 1 + 4;
    }

    // optional float collection_rate_vespene = 10;
    if (has_collection_rate_vespene()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[24 / 32] & 50331648u) {
    // optional float spent_minerals = 11;
    if (has_spent_minerals()) {
      total_size += 1 + 4;
    }

    // optional float spent_vespene = 12;
    if (has_spent_vespene()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SCRAPIProtocol.ScoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScoreDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SCRAPIProtocol.ScoreDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SCRAPIProtocol.ScoreDetails)
    MergeFrom(*source);
  }
}

void ScoreDetails::MergeFrom(const ScoreDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SCRAPIProtocol.ScoreDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_food_used()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.food_used());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_killed_minerals()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.killed_minerals());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_killed_vespene()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.killed_vespene());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_lost_minerals()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.lost_minerals());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_lost_vespene()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.lost_vespene());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_friendly_fire_minerals()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.friendly_fire_minerals());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_friendly_fire_vespene()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.friendly_fire_vespene());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_used_minerals()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.used_minerals());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_used_vespene()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.used_vespene());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_total_used_minerals()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.total_used_minerals());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_total_used_vespene()->::SCRAPIProtocol::CategoryScoreDetails::MergeFrom(from.total_used_vespene());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_total_damage_dealt()->::SCRAPIProtocol::VitalScoreDetails::MergeFrom(from.total_damage_dealt());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_total_damage_taken()->::SCRAPIProtocol::VitalScoreDetails::MergeFrom(from.total_damage_taken());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_total_healed()->::SCRAPIProtocol::VitalScoreDetails::MergeFrom(from.total_healed());
    }
    if (cached_has_bits & 0x00004000u) {
      idle_production_time_ = from.idle_production_time_;
    }
    if (cached_has_bits & 0x00008000u) {
      idle_worker_time_ = from.idle_worker_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      total_value_units_ = from.total_value_units_;
    }
    if (cached_has_bits & 0x00020000u) {
      total_value_structures_ = from.total_value_structures_;
    }
    if (cached_has_bits & 0x00040000u) {
      killed_value_units_ = from.killed_value_units_;
    }
    if (cached_has_bits & 0x00080000u) {
      killed_value_structures_ = from.killed_value_structures_;
    }
    if (cached_has_bits & 0x00100000u) {
      collected_minerals_ = from.collected_minerals_;
    }
    if (cached_has_bits & 0x00200000u) {
      collected_vespene_ = from.collected_vespene_;
    }
    if (cached_has_bits & 0x00400000u) {
      collection_rate_minerals_ = from.collection_rate_minerals_;
    }
    if (cached_has_bits & 0x00800000u) {
      collection_rate_vespene_ = from.collection_rate_vespene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 50331648u) {
    if (cached_has_bits & 0x01000000u) {
      spent_minerals_ = from.spent_minerals_;
    }
    if (cached_has_bits & 0x02000000u) {
      spent_vespene_ = from.spent_vespene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScoreDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SCRAPIProtocol.ScoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreDetails::CopyFrom(const ScoreDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SCRAPIProtocol.ScoreDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreDetails::IsInitialized() const {
  return true;
}

void ScoreDetails::Swap(ScoreDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScoreDetails::InternalSwap(ScoreDetails* other) {
  using std::swap;
  swap(food_used_, other->food_used_);
  swap(killed_minerals_, other->killed_minerals_);
  swap(killed_vespene_, other->killed_vespene_);
  swap(lost_minerals_, other->lost_minerals_);
  swap(lost_vespene_, other->lost_vespene_);
  swap(friendly_fire_minerals_, other->friendly_fire_minerals_);
  swap(friendly_fire_vespene_, other->friendly_fire_vespene_);
  swap(used_minerals_, other->used_minerals_);
  swap(used_vespene_, other->used_vespene_);
  swap(total_used_minerals_, other->total_used_minerals_);
  swap(total_used_vespene_, other->total_used_vespene_);
  swap(total_damage_dealt_, other->total_damage_dealt_);
  swap(total_damage_taken_, other->total_damage_taken_);
  swap(total_healed_, other->total_healed_);
  swap(idle_production_time_, other->idle_production_time_);
  swap(idle_worker_time_, other->idle_worker_time_);
  swap(total_value_units_, other->total_value_units_);
  swap(total_value_structures_, other->total_value_structures_);
  swap(killed_value_units_, other->killed_value_units_);
  swap(killed_value_structures_, other->killed_value_structures_);
  swap(collected_minerals_, other->collected_minerals_);
  swap(collected_vespene_, other->collected_vespene_);
  swap(collection_rate_minerals_, other->collection_rate_minerals_);
  swap(collection_rate_vespene_, other->collection_rate_vespene_);
  swap(spent_minerals_, other->spent_minerals_);
  swap(spent_vespene_, other->spent_vespene_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScoreDetails::GetMetadata() const {
  protobuf_score_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_score_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace SCRAPIProtocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SCRAPIProtocol::Score* Arena::CreateMaybeMessage< ::SCRAPIProtocol::Score >(Arena* arena) {
  return Arena::CreateInternal< ::SCRAPIProtocol::Score >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SCRAPIProtocol::CategoryScoreDetails* Arena::CreateMaybeMessage< ::SCRAPIProtocol::CategoryScoreDetails >(Arena* arena) {
  return Arena::CreateInternal< ::SCRAPIProtocol::CategoryScoreDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SCRAPIProtocol::VitalScoreDetails* Arena::CreateMaybeMessage< ::SCRAPIProtocol::VitalScoreDetails >(Arena* arena) {
  return Arena::CreateInternal< ::SCRAPIProtocol::VitalScoreDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SCRAPIProtocol::ScoreDetails* Arena::CreateMaybeMessage< ::SCRAPIProtocol::ScoreDetails >(Arena* arena) {
  return Arena::CreateInternal< ::SCRAPIProtocol::ScoreDetails >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
